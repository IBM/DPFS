<svg xmlns="http://www.w3.org/2000/svg" xmlns:fg="http://github.com/jonhoo/inferno" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="758" onload="init(evt)" version="1.1" viewBox="0 0 1200 758"><defs><linearGradient id="background" x1="0" x2="0" y1="0" y2="1"><stop offset="5%" stop-color="#eee"/><stop offset="95%" stop-color="#eeeeb0"/></linearGradient></defs><style type="text/css">text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); } #title { text-anchor:middle; font-size:17px; } #matched { text-anchor:end; } #search { text-anchor:end; opacity:0.1; cursor:pointer; } #search:hover, #search.show { opacity:1; } #subtitle { text-anchor:middle; font-color:rgb(160,160,160); } #unzoom { cursor:pointer; } #frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; } .hide { display:none; } .parent { opacity:0.5; }</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect width="100%" height="758" x="0" y="0" fill="url(#background)"/><text id="title" x="50%" y="24">Flame Graph</text><text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text><text id="search" x="1190" y="24">Search</text><svg id="frames" width="1180" x="10" total_samples="103086"><g><title>__ctype_b_loc@plt (74 samples, 0.07%)</title><rect width=".072%" height="15" x="0%" y="677" fill="#E30007" fg:w="74" fg:x="0"/></g><g><title>__errno_location@plt (70 samples, 0.07%)</title><rect width=".068%" height="15" x=".072%" y="677" fill="#D90018" fg:w="70" fg:x="74"/></g><g><title>__kernel_clock_gettime (357 samples, 0.35%)</title><rect width=".346%" height="15" x=".14%" y="677" fill="#DDC136" fg:w="357" fg:x="144"/></g><g><title>clock_gettime@plt (122 samples, 0.12%)</title><rect width=".118%" height="15" x=".486%" y="677" fill="#F8D406" fg:w="122" fg:x="501"/></g><g><title>free@plt (59 samples, 0.06%)</title><rect width=".057%" height="15" x=".604%" y="677" fill="#D04423" fg:w="59" fg:x="623"/></g><g><title>libnfs_zdr_bool@plt (88 samples, 0.09%)</title><rect width=".085%" height="15" x=".669%" y="677" fill="#E88000" fg:w="88" fg:x="690"/></g><g><title>libnfs_zdr_bytes@plt (93 samples, 0.09%)</title><rect width=".09%" height="15" x=".755%" y="677" fill="#CFA02F" fg:w="93" fg:x="778"/></g><g><title>libnfs_zdr_destroy@plt (28 samples, 0.03%)</title><rect width=".027%" height="15" x=".845%" y="677" fill="#E41722" fg:w="28" fg:x="871"/></g><g><title>libnfs_zdr_enum@plt (85 samples, 0.08%)</title><rect width=".083%" height="15" x=".872%" y="677" fill="#DA1E1A" fg:w="85" fg:x="899"/></g><g><title>libnfs_zdr_free@plt (102 samples, 0.10%)</title><rect width=".099%" height="15" x=".955%" y="677" fill="#DC7A13" fg:w="102" fg:x="984"/></g><g><title>libnfs_zdr_getpos@plt (123 samples, 0.12%)</title><rect width=".119%" height="15" x="1.054%" y="677" fill="#FAE42A" fg:w="123" fg:x="1086"/></g><g><title>libnfs_zdr_int@plt (33 samples, 0.03%)</title><rect width=".032%" height="15" x="1.173%" y="677" fill="#F0C11C" fg:w="33" fg:x="1209"/></g><g><title>libnfs_zdr_replymsg@plt (16 samples, 0.02%)</title><rect width=".015%" height="15" x="1.205%" y="677" fill="#D81425" fg:w="16" fg:x="1242"/></g><g><title>libnfs_zdr_setpos@plt (113 samples, 0.11%)</title><rect width=".11%" height="15" x="1.22%" y="677" fill="#CEBC27" fg:w="113" fg:x="1258"/></g><g><title>libnfs_zdr_u_int@plt (229 samples, 0.22%)</title><rect width=".222%" height="15" x="1.33%" y="677" fill="#D9CF0D" fg:w="229" fg:x="1371"/></g><g><title>libnfs_zdrmem_create@plt (115 samples, 0.11%)</title><rect width=".112%" height="15" x="1.552%" y="677" fill="#E74926" fg:w="115" fg:x="1600"/></g><g><title>malloc@plt (72 samples, 0.07%)</title><rect width=".07%" height="15" x="1.664%" y="677" fill="#E1142E" fg:w="72" fg:x="1715"/></g><g><title>memset@plt (63 samples, 0.06%)</title><rect width=".061%" height="15" x="1.742%" y="677" fill="#D21F29" fg:w="63" fg:x="1796"/></g><g><title>nfs_get_fd@plt (46 samples, 0.04%)</title><rect width=".045%" height="15" x="1.803%" y="677" fill="#DDC82F" fg:w="46" fg:x="1859"/></g><g><title>nfs_mt_mutex_lock@plt (166 samples, 0.16%)</title><rect width=".161%" height="15" x="1.848%" y="677" fill="#E21A05" fg:w="166" fg:x="1905"/></g><g><title>nfs_mt_mutex_unlock@plt (29 samples, 0.03%)</title><rect width=".028%" height="15" x="2.009%" y="677" fill="#F9211A" fg:w="29" fg:x="2071"/></g><g><title>nfs_service@plt (201 samples, 0.19%)</title><rect width=".195%" height="15" x="2.037%" y="677" fill="#EBB71C" fg:w="201" fg:x="2100"/></g><g><title>nfs_which_events@plt (20 samples, 0.02%)</title><rect width=".019%" height="15" x="2.232%" y="677" fill="#DD0526" fg:w="20" fg:x="2301"/></g><g><title>poll@plt (39 samples, 0.04%)</title><rect width=".038%" height="15" x="2.252%" y="677" fill="#F7122A" fg:w="39" fg:x="2321"/></g><g><title>pthread_mutex_lock@plt (212 samples, 0.21%)</title><rect width=".206%" height="15" x="2.289%" y="677" fill="#F1832D" fg:w="212" fg:x="2360"/></g><g><title>pthread_mutex_unlock@plt (11 samples, 0.01%)</title><rect width=".011%" height="15" x="2.495%" y="677" fill="#F91F1D" fg:w="11" fg:x="2572"/></g><g><title>recv@plt (179 samples, 0.17%)</title><rect width=".174%" height="15" x="2.506%" y="677" fill="#E16F35" fg:w="179" fg:x="2583"/></g><g><title>rpc_current_time@plt (40 samples, 0.04%)</title><rect width=".039%" height="15" x="2.679%" y="677" fill="#EEA011" fg:w="40" fg:x="2762"/></g><g><title>rpc_free_pdu@plt (129 samples, 0.13%)</title><rect width=".125%" height="15" x="2.718%" y="677" fill="#D69430" fg:w="129" fg:x="2802"/></g><g><title>rpc_get_fd@plt (16 samples, 0.02%)</title><rect width=".015%" height="15" x="2.843%" y="677" fill="#E82431" fg:w="16" fg:x="2931"/></g><g><title>rpc_get_pdu_size@plt (48 samples, 0.05%)</title><rect width=".047%" height="15" x="2.859%" y="677" fill="#D16718" fg:w="48" fg:x="2947"/></g><g><title>rpc_hash_xid@plt (139 samples, 0.13%)</title><rect width=".135%" height="15" x="2.905%" y="677" fill="#E55808" fg:w="139" fg:x="2995"/></g><g><title>rpc_process_pdu@plt (76 samples, 0.07%)</title><rect width=".074%" height="15" x="3.04%" y="677" fill="#D5B513" fg:w="76" fg:x="3134"/></g><g><title>rpc_service@plt (127 samples, 0.12%)</title><rect width=".123%" height="15" x="3.114%" y="677" fill="#FEBF36" fg:w="127" fg:x="3210"/></g><g><title>rpc_which_events@plt (160 samples, 0.16%)</title><rect width=".155%" height="15" x="3.237%" y="677" fill="#F15325" fg:w="160" fg:x="3337"/></g><g><title>nfs_service (224 samples, 0.22%)</title><rect width=".217%" height="15" x="3.638%" y="629" fill="#E92427" fg:w="224" fg:x="3750"/></g><g><title>nfs_which_events (54 samples, 0.05%)</title><rect width=".052%" height="15" x="3.855%" y="629" fill="#E20336" fg:w="54" fg:x="3974"/></g><g><title>__libc_disable_asynccancel (232 samples, 0.23%)</title><rect width=".225%" height="15" x="4.938%" y="597" fill="#F5C028" fg:w="232" fg:x="5090"/></g><g><title>__libc_enable_asynccancel (248 samples, 0.24%)</title><rect width=".241%" height="15" x="5.163%" y="597" fill="#EEA71D" fg:w="248" fg:x="5322"/></g><g><title>__arm64_sys_ppoll (92 samples, 0.09%)</title><rect width=".089%" height="15" x="5.405%" y="565" fill="#E8B633" fg:w="92" fg:x="5572"/></g><g><title>__arch_copy_from_user (205 samples, 0.20%)</title><rect width=".199%" height="15" x="7.133%" y="533" fill="#E73C27" fg:w="205" fg:x="7353"/></g><g><title>__fdget (110 samples, 0.11%)</title><rect width=".107%" height="15" x="7.34%" y="533" fill="#D0450C" fg:w="110" fg:x="7566"/></g><g><title>__check_object_size (92 samples, 0.09%)</title><rect width=".089%" height="15" x="9.192%" y="517" fill="#EB5D25" fg:w="92" fg:x="9476"/></g><g><title>check_stack_object (43 samples, 0.04%)</title><rect width=".042%" height="15" x="9.24%" y="501" fill="#D57427" fg:w="43" fg:x="9525"/></g><g><title>__rcu_read_lock (40 samples, 0.04%)</title><rect width=".039%" height="15" x="10.349%" y="469" fill="#DECF1D" fg:w="40" fg:x="10668"/></g><g><title>__rcu_read_unlock (38 samples, 0.04%)</title><rect width=".037%" height="15" x="10.387%" y="469" fill="#CE601E" fg:w="38" fg:x="10708"/></g><g><title>__fget (962 samples, 0.93%)</title><rect width=".933%" height="15" x="9.494%" y="485" fill="#DA8A04" fg:w="962" fg:x="9787"/></g><g><title>__rcu_read_lock (14 samples, 0.01%)</title><rect width=".014%" height="15" x="10.427%" y="485" fill="#FABF0E" fg:w="14" fg:x="10749"/></g><g><title>__fdget (2,419 samples, 2.35%)</title><rect width="2.347%" height="15" x="9.282%" y="517" fill="#EF3C28" fg:w="2419" fg:x="9568"/><text x="9.532%" y="527.5">_..</text></g><g><title>__fget_light (2,392 samples, 2.32%)</title><rect width="2.32%" height="15" x="9.308%" y="501" fill="#CE1B30" fg:w="2392" fg:x="9595"/><text x="9.558%" y="511.5">_..</text></g><g><title>f_dupfd (1,222 samples, 1.19%)</title><rect width="1.185%" height="15" x="10.443%" y="485" fill="#E12308" fg:w="1222" fg:x="10765"/></g><g><title>__fget_light (90 samples, 0.09%)</title><rect width=".087%" height="15" x="11.628%" y="517" fill="#FAD518" fg:w="90" fg:x="11987"/></g><g><title>net_rx_action (11 samples, 0.01%)</title><rect width=".011%" height="15" x="11.722%" y="437" fill="#F77B16" fg:w="11" fg:x="12084"/></g><g><title>mlx5e_napi_poll (11 samples, 0.01%)</title><rect width=".011%" height="15" x="11.722%" y="421" fill="#E78A26" fg:w="11" fg:x="12084"/></g><g><title>__softirqentry_text_start (18 samples, 0.02%)</title><rect width=".018%" height="15" x="11.718%" y="453" fill="#E7912E" fg:w="18" fg:x="12080"/></g><g><title>el1_irq (19 samples, 0.02%)</title><rect width=".018%" height="15" x="11.718%" y="517" fill="#FB760B" fg:w="19" fg:x="12080"/></g><g><title>gic_handle_irq (19 samples, 0.02%)</title><rect width=".018%" height="15" x="11.718%" y="501" fill="#D99319" fg:w="19" fg:x="12080"/></g><g><title>__handle_domain_irq (19 samples, 0.02%)</title><rect width=".018%" height="15" x="11.718%" y="485" fill="#F75125" fg:w="19" fg:x="12080"/></g><g><title>irq_exit (19 samples, 0.02%)</title><rect width=".018%" height="15" x="11.718%" y="469" fill="#D10C26" fg:w="19" fg:x="12080"/></g><g><title>fput (311 samples, 0.30%)</title><rect width=".302%" height="15" x="11.798%" y="501" fill="#E30109" fg:w="311" fg:x="12162"/></g><g><title>fput (438 samples, 0.42%)</title><rect width=".425%" height="15" x="11.737%" y="517" fill="#F82F2B" fg:w="438" fg:x="12099"/></g><g><title>fput_many (64 samples, 0.06%)</title><rect width=".062%" height="15" x="12.1%" y="501" fill="#DD0A1E" fg:w="64" fg:x="12473"/></g><g><title>fput_many (77 samples, 0.07%)</title><rect width=".075%" height="15" x="12.162%" y="517" fill="#D2E501" fg:w="77" fg:x="12537"/></g><g><title>_raw_spin_lock_irqsave (36 samples, 0.03%)</title><rect width=".035%" height="15" x="12.377%" y="501" fill="#DE9425" fg:w="36" fg:x="12759"/></g><g><title>fput (106 samples, 0.10%)</title><rect width=".103%" height="15" x="12.423%" y="485" fill="#EA4321" fg:w="106" fg:x="12806"/></g><g><title>fput (129 samples, 0.13%)</title><rect width=".125%" height="15" x="12.413%" y="501" fill="#F76223" fg:w="129" fg:x="12796"/></g><g><title>fput_many (13 samples, 0.01%)</title><rect width=".013%" height="15" x="12.525%" y="485" fill="#F78A34" fg:w="13" fg:x="12912"/></g><g><title>_raw_spin_lock_irqsave (116 samples, 0.11%)</title><rect width=".113%" height="15" x="12.556%" y="485" fill="#D54F1E" fg:w="116" fg:x="12944"/></g><g><title>poll_freewait (1,562 samples, 1.52%)</title><rect width="1.515%" height="15" x="12.241%" y="517" fill="#F6B117" fg:w="1562" fg:x="12619"/></g><g><title>remove_wait_queue (1,255 samples, 1.22%)</title><rect width="1.217%" height="15" x="12.539%" y="501" fill="#E63E1B" fg:w="1255" fg:x="12926"/></g><g><title>_raw_spin_unlock_irqrestore (1,121 samples, 1.09%)</title><rect width="1.087%" height="15" x="12.669%" y="485" fill="#D89A08" fg:w="1121" fg:x="13060"/></g><g><title>remove_wait_queue (101 samples, 0.10%)</title><rect width=".098%" height="15" x="13.757%" y="517" fill="#F4232D" fg:w="101" fg:x="14181"/></g><g><title>hrtimer_init_sleeper (105 samples, 0.10%)</title><rect width=".102%" height="15" x="13.9%" y="501" fill="#FB730C" fg:w="105" fg:x="14329"/></g><g><title>hrtimer_start_range_ns (56 samples, 0.05%)</title><rect width=".054%" height="15" x="14.002%" y="501" fill="#F03632" fg:w="56" fg:x="14434"/></g><g><title>schedule (14 samples, 0.01%)</title><rect width=".014%" height="15" x="14.063%" y="501" fill="#E95434" fg:w="14" fg:x="14497"/></g><g><title>__hrtimer_init (109 samples, 0.11%)</title><rect width=".106%" height="15" x="14.21%" y="485" fill="#CF752F" fg:w="109" fg:x="14649"/></g><g><title>__schedule (53 samples, 0.05%)</title><rect width=".051%" height="15" x="14.316%" y="485" fill="#F92B27" fg:w="53" fg:x="14758"/></g><g><title>hrtimer_init_sleeper (213 samples, 0.21%)</title><rect width=".207%" height="15" x="14.37%" y="485" fill="#D1262C" fg:w="213" fg:x="14814"/></g><g><title>__hrtimer_init (161 samples, 0.16%)</title><rect width=".156%" height="15" x="14.421%" y="469" fill="#ECD417" fg:w="161" fg:x="14866"/></g><g><title>ip_rcv_finish (11 samples, 0.01%)</title><rect width=".011%" height="15" x="16.551%" y="245" fill="#F24F15" fg:w="11" fg:x="17062"/></g><g><title>__netif_receive_skb_core (12 samples, 0.01%)</title><rect width=".012%" height="15" x="16.551%" y="277" fill="#D36023" fg:w="12" fg:x="17062"/></g><g><title>ip_rcv (12 samples, 0.01%)</title><rect width=".012%" height="15" x="16.551%" y="261" fill="#FDD728" fg:w="12" fg:x="17062"/></g><g><title>net_rx_action (17 samples, 0.02%)</title><rect width=".017%" height="15" x="16.547%" y="373" fill="#D35115" fg:w="17" fg:x="17058"/></g><g><title>mlx5e_napi_poll (17 samples, 0.02%)</title><rect width=".017%" height="15" x="16.547%" y="357" fill="#D0BE26" fg:w="17" fg:x="17058"/></g><g><title>napi_complete_done (13 samples, 0.01%)</title><rect width=".013%" height="15" x="16.551%" y="341" fill="#EBD526" fg:w="13" fg:x="17062"/></g><g><title>gro_normal_list.part.0 (13 samples, 0.01%)</title><rect width=".013%" height="15" x="16.551%" y="325" fill="#ED7A26" fg:w="13" fg:x="17062"/></g><g><title>netif_receive_skb_list_internal (13 samples, 0.01%)</title><rect width=".013%" height="15" x="16.551%" y="309" fill="#F4DA23" fg:w="13" fg:x="17062"/></g><g><title>__netif_receive_skb_list_core (13 samples, 0.01%)</title><rect width=".013%" height="15" x="16.551%" y="293" fill="#F0442F" fg:w="13" fg:x="17062"/></g><g><title>_raw_spin_unlock_irqrestore (1,923 samples, 1.87%)</title><rect width="1.865%" height="15" x="14.699%" y="469" fill="#D21035" fg:w="1923" fg:x="15153"/><text x="14.949%" y="479.5">_..</text></g><g><title>el1_irq (22 samples, 0.02%)</title><rect width=".021%" height="15" x="16.544%" y="453" fill="#EB7C0C" fg:w="22" fg:x="17054"/></g><g><title>gic_handle_irq (22 samples, 0.02%)</title><rect width=".021%" height="15" x="16.544%" y="437" fill="#E0A90B" fg:w="22" fg:x="17054"/></g><g><title>__handle_domain_irq (22 samples, 0.02%)</title><rect width=".021%" height="15" x="16.544%" y="421" fill="#FAA602" fg:w="22" fg:x="17054"/></g><g><title>irq_exit (22 samples, 0.02%)</title><rect width=".021%" height="15" x="16.544%" y="405" fill="#F2D81D" fg:w="22" fg:x="17054"/></g><g><title>__softirqentry_text_start (22 samples, 0.02%)</title><rect width=".021%" height="15" x="16.544%" y="389" fill="#E6741B" fg:w="22" fg:x="17054"/></g><g><title>_raw_spin_lock_irqsave (125 samples, 0.12%)</title><rect width=".121%" height="15" x="16.776%" y="453" fill="#E46330" fg:w="125" fg:x="17294"/></g><g><title>hrtimer_start_range_ns (2,393 samples, 2.32%)</title><rect width="2.321%" height="15" x="14.577%" y="485" fill="#FD0B06" fg:w="2393" fg:x="15027"/><text x="14.827%" y="495.5">h..</text></g><g><title>lock_hrtimer_base (343 samples, 0.33%)</title><rect width=".333%" height="15" x="16.566%" y="469" fill="#F78F27" fg:w="343" fg:x="17077"/></g><g><title>_raw_spin_unlock_irqrestore (990 samples, 0.96%)</title><rect width=".96%" height="15" x="16.935%" y="469" fill="#EC610A" fg:w="990" fg:x="17458"/></g><g><title>hrtimer_active (99 samples, 0.10%)</title><rect width=".096%" height="15" x="17.896%" y="469" fill="#E9D013" fg:w="99" fg:x="18448"/></g><g><title>hrtimer_try_to_cancel (1,242 samples, 1.20%)</title><rect width="1.205%" height="15" x="16.898%" y="485" fill="#D8A402" fg:w="1242" fg:x="17420"/></g><g><title>lock_hrtimer_base (115 samples, 0.11%)</title><rect width=".112%" height="15" x="17.992%" y="469" fill="#DC8105" fg:w="115" fg:x="18547"/></g><g><title>_raw_spin_lock_irqsave (92 samples, 0.09%)</title><rect width=".089%" height="15" x="18.014%" y="453" fill="#F2110A" fg:w="92" fg:x="18570"/></g><g><title>lock_hrtimer_base (21 samples, 0.02%)</title><rect width=".02%" height="15" x="18.103%" y="485" fill="#F26B00" fg:w="21" fg:x="18662"/></g><g><title>cpu_cgroup_attach (332 samples, 0.32%)</title><rect width=".322%" height="15" x="18.463%" y="453" fill="#FB1C1F" fg:w="332" fg:x="19033"/></g><g><title>net_rx_action (17 samples, 0.02%)</title><rect width=".017%" height="15" x="23.781%" y="341" fill="#E9DF0A" fg:w="17" fg:x="24515"/></g><g><title>mlx5e_napi_poll (16 samples, 0.02%)</title><rect width=".015%" height="15" x="23.782%" y="325" fill="#D7151B" fg:w="16" fg:x="24516"/></g><g><title>run_rebalance_domains (16 samples, 0.02%)</title><rect width=".015%" height="15" x="23.8%" y="341" fill="#E81715" fg:w="16" fg:x="24535"/></g><g><title>update_blocked_averages (14 samples, 0.01%)</title><rect width=".014%" height="15" x="23.802%" y="325" fill="#F40517" fg:w="14" fg:x="24537"/></g><g><title>_raw_spin_unlock_irqrestore (13 samples, 0.01%)</title><rect width=".013%" height="15" x="23.803%" y="309" fill="#E2512E" fg:w="13" fg:x="24538"/></g><g><title>__softirqentry_text_start (70 samples, 0.07%)</title><rect width=".068%" height="15" x="23.754%" y="357" fill="#F7461E" fg:w="70" fg:x="24487"/></g><g><title>_raw_spin_unlock_irq (5,056 samples, 4.90%)</title><rect width="4.905%" height="15" x="18.918%" y="437" fill="#D44413" fg:w="5056" fg:x="19502"/><text x="19.168%" y="447.5">_raw_s..</text></g><g><title>el1_irq (71 samples, 0.07%)</title><rect width=".069%" height="15" x="23.754%" y="421" fill="#F0BB0D" fg:w="71" fg:x="24487"/></g><g><title>gic_handle_irq (71 samples, 0.07%)</title><rect width=".069%" height="15" x="23.754%" y="405" fill="#DF711A" fg:w="71" fg:x="24487"/></g><g><title>__handle_domain_irq (71 samples, 0.07%)</title><rect width=".069%" height="15" x="23.754%" y="389" fill="#CEC002" fg:w="71" fg:x="24487"/></g><g><title>irq_exit (71 samples, 0.07%)</title><rect width=".069%" height="15" x="23.754%" y="373" fill="#F16C04" fg:w="71" fg:x="24487"/></g><g><title>__schedule (5,714 samples, 5.54%)</title><rect width="5.543%" height="15" x="18.282%" y="469" fill="#F7AD31" fg:w="5714" fg:x="18846"/><text x="18.532%" y="479.5">__sched..</text></g><g><title>finish_task_switch (5,195 samples, 5.04%)</title><rect width="5.04%" height="15" x="18.785%" y="453" fill="#E07223" fg:w="5195" fg:x="19365"/><text x="19.035%" y="463.5">finish..</text></g><g><title>schedule_hrtimeout_range (10,280 samples, 9.97%)</title><rect width="9.972%" height="15" x="13.854%" y="517" fill="#F59F1B" fg:w="10280" fg:x="14282"/><text x="14.104%" y="527.5">schedule_hrtim..</text></g><g><title>schedule_hrtimeout_range_clock (10,051 samples, 9.75%)</title><rect width="9.75%" height="15" x="14.077%" y="501" fill="#F5AC2C" fg:w="10051" fg:x="14511"/><text x="14.327%" y="511.5">schedule_hrtim..</text></g><g><title>schedule (5,879 samples, 5.70%)</title><rect width="5.703%" height="15" x="18.124%" y="485" fill="#EC170B" fg:w="5879" fg:x="18683"/><text x="18.374%" y="495.5">schedule</text></g><g><title>schedule_hrtimeout_range_clock (60 samples, 0.06%)</title><rect width=".058%" height="15" x="23.827%" y="517" fill="#CD7526" fg:w="60" fg:x="24562"/></g><g><title>arch_counter_get_cntpct (199 samples, 0.19%)</title><rect width=".193%" height="15" x="24.203%" y="485" fill="#ED4819" fg:w="199" fg:x="24950"/></g><g><title>ktime_get_ts64 (327 samples, 0.32%)</title><rect width=".317%" height="15" x="24.088%" y="501" fill="#F44609" fg:w="327" fg:x="24831"/></g><g><title>select_estimate_accuracy (575 samples, 0.56%)</title><rect width=".558%" height="15" x="23.885%" y="517" fill="#D97D27" fg:w="575" fg:x="24622"/></g><g><title>set_normalized_timespec64 (39 samples, 0.04%)</title><rect width=".038%" height="15" x="24.405%" y="501" fill="#EB240A" fg:w="39" fg:x="25158"/></g><g><title>__pollwait (65 samples, 0.06%)</title><rect width=".063%" height="15" x="25.195%" y="501" fill="#FB7B2F" fg:w="65" fg:x="25972"/></g><g><title>__arm64_sys_pselect6 (238 samples, 0.23%)</title><rect width=".231%" height="15" x="26.501%" y="485" fill="#DD0D0D" fg:w="238" fg:x="27319"/></g><g><title>_raw_spin_lock_irqsave (116 samples, 0.11%)</title><rect width=".113%" height="15" x="27.016%" y="469" fill="#EE8309" fg:w="116" fg:x="27850"/></g><g><title>_raw_spin_lock_irqsave (134 samples, 0.13%)</title><rect width=".13%" height="15" x="27.21%" y="453" fill="#D33208" fg:w="134" fg:x="28050"/></g><g><title>_raw_spin_unlock_irqrestore (700 samples, 0.68%)</title><rect width=".679%" height="15" x="27.34%" y="453" fill="#F5B618" fg:w="700" fg:x="28184"/></g><g><title>add_wait_queue (920 samples, 0.89%)</title><rect width=".892%" height="15" x="27.129%" y="469" fill="#F20E25" fg:w="920" fg:x="27966"/></g><g><title>__pollwait (1,333 samples, 1.29%)</title><rect width="1.293%" height="15" x="26.732%" y="485" fill="#F6E40C" fg:w="1333" fg:x="27557"/></g><g><title>add_wait_queue (42 samples, 0.04%)</title><rect width=".041%" height="15" x="28.025%" y="485" fill="#D5370F" fg:w="42" fg:x="28890"/></g><g><title>tcp_poll (2,894 samples, 2.81%)</title><rect width="2.807%" height="15" x="25.264%" y="501" fill="#D10903" fg:w="2894" fg:x="26044"/><text x="25.514%" y="511.5">tc..</text></g><g><title>sock_poll (3,911 samples, 3.79%)</title><rect width="3.794%" height="15" x="24.447%" y="517" fill="#E63B1E" fg:w="3911" fg:x="25201"/><text x="24.697%" y="527.5">sock..</text></g><g><title>tcp_stream_memory_free (174 samples, 0.17%)</title><rect width=".169%" height="15" x="28.072%" y="501" fill="#D17915" fg:w="174" fg:x="28938"/></g><g><title>do_sys_poll (21,507 samples, 20.86%)</title><rect width="20.863%" height="15" x="7.446%" y="533" fill="#DC6D0D" fg:w="21507" fg:x="7676"/><text x="7.696%" y="543.5">do_sys_poll</text></g><g><title>tcp_poll (71 samples, 0.07%)</title><rect width=".069%" height="15" x="28.241%" y="517" fill="#E81201" fg:w="71" fg:x="29112"/></g><g><title>fput (36 samples, 0.03%)</title><rect width=".035%" height="15" x="28.31%" y="533" fill="#D7292A" fg:w="36" fg:x="29184"/></g><g><title>get_timespec64 (237 samples, 0.23%)</title><rect width=".23%" height="15" x="28.345%" y="533" fill="#E07B24" fg:w="237" fg:x="29220"/></g><g><title>ktime_get_ts64 (101 samples, 0.10%)</title><rect width=".098%" height="15" x="28.575%" y="533" fill="#F07D03" fg:w="101" fg:x="29457"/></g><g><title>poll_freewait (77 samples, 0.07%)</title><rect width=".075%" height="15" x="28.673%" y="533" fill="#CD6232" fg:w="77" fg:x="29558"/></g><g><title>__arch_copy_to_user (336 samples, 0.33%)</title><rect width=".326%" height="15" x="29.457%" y="517" fill="#CDB925" fg:w="336" fg:x="30366"/></g><g><title>arch_counter_get_cntpct (174 samples, 0.17%)</title><rect width=".169%" height="15" x="29.924%" y="501" fill="#EECF0F" fg:w="174" fg:x="30848"/></g><g><title>ktime_get_ts64 (331 samples, 0.32%)</title><rect width=".321%" height="15" x="29.786%" y="517" fill="#D5C72A" fg:w="331" fg:x="30705"/></g><g><title>arch_counter_read (14 samples, 0.01%)</title><rect width=".014%" height="15" x="30.093%" y="501" fill="#EBC90B" fg:w="14" fg:x="31022"/></g><g><title>put_timespec64 (278 samples, 0.27%)</title><rect width=".27%" height="15" x="30.107%" y="517" fill="#CF2E0B" fg:w="278" fg:x="31036"/></g><g><title>poll_select_finish (1,727 samples, 1.68%)</title><rect width="1.675%" height="15" x="28.748%" y="533" fill="#F12323" fg:w="1727" fg:x="29635"/></g><g><title>set_normalized_timespec64 (48 samples, 0.05%)</title><rect width=".047%" height="15" x="30.377%" y="517" fill="#F3202F" fg:w="48" fg:x="31314"/></g><g><title>arch_counter_read (38 samples, 0.04%)</title><rect width=".037%" height="15" x="30.66%" y="517" fill="#F7CA17" fg:w="38" fg:x="31606"/></g><g><title>arch_counter_get_cntpct (238 samples, 0.23%)</title><rect width=".231%" height="15" x="30.908%" y="501" fill="#DB660B" fg:w="238" fg:x="31862"/></g><g><title>arch_counter_read (22 samples, 0.02%)</title><rect width=".021%" height="15" x="31.139%" y="501" fill="#F36E2C" fg:w="22" fg:x="32100"/></g><g><title>ktime_get_ts64 (478 samples, 0.46%)</title><rect width=".464%" height="15" x="30.698%" y="517" fill="#DE4A36" fg:w="478" fg:x="31645"/></g><g><title>poll_select_set_timeout (897 samples, 0.87%)</title><rect width=".87%" height="15" x="30.423%" y="533" fill="#D8630C" fg:w="897" fg:x="31362"/></g><g><title>timespec64_add_safe (136 samples, 0.13%)</title><rect width=".132%" height="15" x="31.161%" y="517" fill="#E2161A" fg:w="136" fg:x="32123"/></g><g><title>put_timespec64 (83 samples, 0.08%)</title><rect width=".081%" height="15" x="31.293%" y="533" fill="#D9A30A" fg:w="83" fg:x="32259"/></g><g><title>schedule_hrtimeout_range (32 samples, 0.03%)</title><rect width=".031%" height="15" x="31.374%" y="533" fill="#D51935" fg:w="32" fg:x="32342"/></g><g><title>select_estimate_accuracy (68 samples, 0.07%)</title><rect width=".066%" height="15" x="31.405%" y="533" fill="#FC691A" fg:w="68" fg:x="32374"/></g><g><title>set_normalized_timespec64 (27 samples, 0.03%)</title><rect width=".026%" height="15" x="31.471%" y="533" fill="#DC272B" fg:w="27" fg:x="32442"/></g><g><title>set_user_sigmask (237 samples, 0.23%)</title><rect width=".23%" height="15" x="31.497%" y="533" fill="#E54430" fg:w="237" fg:x="32469"/></g><g><title>sock_poll (17 samples, 0.02%)</title><rect width=".017%" height="15" x="31.727%" y="533" fill="#FC0820" fg:w="17" fg:x="32706"/></g><g><title>__arm64_sys_ppoll (25,840 samples, 25.07%)</title><rect width="25.066%" height="15" x="6.717%" y="549" fill="#DF142B" fg:w="25840" fg:x="6924"/><text x="6.967%" y="559.5">__arm64_sys_ppoll</text></g><g><title>timespec64_add_safe (41 samples, 0.04%)</title><rect width=".04%" height="15" x="31.743%" y="533" fill="#E55131" fg:w="41" fg:x="32723"/></g><g><title>do_sys_poll (127 samples, 0.12%)</title><rect width=".123%" height="15" x="31.783%" y="549" fill="#EC1C24" fg:w="127" fg:x="32764"/></g><g><title>get_timespec64 (82 samples, 0.08%)</title><rect width=".08%" height="15" x="31.913%" y="549" fill="#F9B91A" fg:w="82" fg:x="32898"/></g><g><title>poll_select_finish (90 samples, 0.09%)</title><rect width=".087%" height="15" x="31.993%" y="549" fill="#F9AE21" fg:w="90" fg:x="32980"/></g><g><title>poll_select_set_timeout (88 samples, 0.09%)</title><rect width=".085%" height="15" x="32.08%" y="549" fill="#E9C925" fg:w="88" fg:x="33070"/></g><g><title>el0_svc (27,741 samples, 26.91%)</title><rect width="26.91%" height="15" x="5.405%" y="597" fill="#DD4E1A" fg:w="27741" fg:x="5572"/><text x="5.655%" y="607.5">el0_svc</text></g><g><title>el0_svc_handler (27,741 samples, 26.91%)</title><rect width="26.91%" height="15" x="5.405%" y="581" fill="#FA7F1E" fg:w="27741" fg:x="5572"/><text x="5.655%" y="591.5">el0_svc_handler</text></g><g><title>el0_svc_common.constprop.0 (27,649 samples, 26.82%)</title><rect width="26.821%" height="15" x="5.494%" y="565" fill="#E6312C" fg:w="27649" fg:x="5664"/><text x="5.744%" y="575.5">el0_svc_common.constprop.0</text></g><g><title>set_user_sigmask (155 samples, 0.15%)</title><rect width=".15%" height="15" x="32.165%" y="549" fill="#E54317" fg:w="155" fg:x="33158"/></g><g><title>do_notify_resume (59 samples, 0.06%)</title><rect width=".057%" height="15" x="32.316%" y="581" fill="#F9532F" fg:w="59" fg:x="33313"/></g><g><title>poll (29,345 samples, 28.47%)</title><rect width="28.466%" height="15" x="3.907%" y="629" fill="#D72B03" fg:w="29345" fg:x="4028"/><text x="4.157%" y="639.5">poll</text></g><g><title>__GI___poll (29,345 samples, 28.47%)</title><rect width="28.466%" height="15" x="3.907%" y="613" fill="#EE9A0D" fg:w="29345" fg:x="4028"/><text x="4.157%" y="623.5">__GI___poll</text></g><g><title>work_pending (60 samples, 0.06%)</title><rect width=".058%" height="15" x="32.316%" y="597" fill="#DB3802" fg:w="60" fg:x="33313"/></g><g><title>rpc_get_fd (74 samples, 0.07%)</title><rect width=".072%" height="15" x="32.374%" y="629" fill="#E90004" fg:w="74" fg:x="33373"/></g><g><title>__errno_location (102 samples, 0.10%)</title><rect width=".099%" height="15" x="33.751%" y="597" fill="#EB1E07" fg:w="102" fg:x="34792"/></g><g><title>__pthread_disable_asynccancel (460 samples, 0.45%)</title><rect width=".446%" height="15" x="35.643%" y="549" fill="#FA4F0D" fg:w="460" fg:x="36743"/></g><g><title>__pthread_enable_asynccancel (441 samples, 0.43%)</title><rect width=".428%" height="15" x="36.089%" y="549" fill="#D39222" fg:w="441" fg:x="37203"/></g><g><title>__arm64_sys_recvfrom (144 samples, 0.14%)</title><rect width=".14%" height="15" x="36.527%" y="517" fill="#E41626" fg:w="144" fg:x="37654"/></g><g><title>__fdget (57 samples, 0.06%)</title><rect width=".055%" height="15" x="39.991%" y="469" fill="#EBA805" fg:w="57" fg:x="41225"/></g><g><title>fput (362 samples, 0.35%)</title><rect width=".351%" height="15" x="40.131%" y="453" fill="#DD9B10" fg:w="362" fg:x="41369"/></g><g><title>fput (492 samples, 0.48%)</title><rect width=".477%" height="15" x="40.051%" y="469" fill="#D7D735" fg:w="492" fg:x="41287"/></g><g><title>fput_many (48 samples, 0.05%)</title><rect width=".047%" height="15" x="40.482%" y="453" fill="#DF040A" fg:w="48" fg:x="41731"/></g><g><title>fput_many (56 samples, 0.05%)</title><rect width=".054%" height="15" x="40.528%" y="469" fill="#EA6706" fg:w="56" fg:x="41779"/></g><g><title>import_single_range (22 samples, 0.02%)</title><rect width=".021%" height="15" x="40.583%" y="469" fill="#E36100" fg:w="22" fg:x="41835"/></g><g><title>inet_recvmsg (32 samples, 0.03%)</title><rect width=".031%" height="15" x="40.604%" y="469" fill="#EA9635" fg:w="32" fg:x="41857"/></g><g><title>iov_iter_init (151 samples, 0.15%)</title><rect width=".146%" height="15" x="40.635%" y="469" fill="#E4C936" fg:w="151" fg:x="41889"/></g><g><title>security_socket_recvmsg (89 samples, 0.09%)</title><rect width=".086%" height="15" x="40.782%" y="469" fill="#DE1625" fg:w="89" fg:x="42040"/></g><g><title>apparmor_socket_recvmsg (99 samples, 0.10%)</title><rect width=".096%" height="15" x="40.934%" y="453" fill="#ED3520" fg:w="99" fg:x="42197"/></g><g><title>__kfree_skb (70 samples, 0.07%)</title><rect width=".068%" height="15" x="41.317%" y="437" fill="#E91935" fg:w="70" fg:x="42592"/></g><g><title>lock_sock_nested (144 samples, 0.14%)</title><rect width=".14%" height="15" x="41.385%" y="437" fill="#D22822" fg:w="144" fg:x="42662"/></g><g><title>ns_to_timespec64 (100 samples, 0.10%)</title><rect width=".097%" height="15" x="41.525%" y="437" fill="#F1DC2C" fg:w="100" fg:x="42806"/></g><g><title>release_sock (22 samples, 0.02%)</title><rect width=".021%" height="15" x="41.622%" y="437" fill="#EB1C23" fg:w="22" fg:x="42906"/></g><g><title>skb_copy_datagram_iter (86 samples, 0.08%)</title><rect width=".083%" height="15" x="41.643%" y="437" fill="#D23811" fg:w="86" fg:x="42928"/></g><g><title>tcp_cleanup_rbuf (27 samples, 0.03%)</title><rect width=".026%" height="15" x="41.726%" y="437" fill="#E0821D" fg:w="27" fg:x="43014"/></g><g><title>tcp_rcv_space_adjust (66 samples, 0.06%)</title><rect width=".064%" height="15" x="41.752%" y="437" fill="#EBD408" fg:w="66" fg:x="43041"/></g><g><title>tcp_recv_timestamp (65 samples, 0.06%)</title><rect width=".063%" height="15" x="41.816%" y="437" fill="#DF2132" fg:w="65" fg:x="43107"/></g><g><title>__slab_free (22 samples, 0.02%)</title><rect width=".021%" height="15" x="45.226%" y="389" fill="#DB950D" fg:w="22" fg:x="46622"/></g><g><title>__slab_free (81 samples, 0.08%)</title><rect width=".079%" height="15" x="45.881%" y="373" fill="#FA9C1D" fg:w="81" fg:x="47297"/></g><g><title>kmem_cache_free (1,259 samples, 1.22%)</title><rect width="1.221%" height="15" x="45.252%" y="389" fill="#D8C113" fg:w="1259" fg:x="46648"/></g><g><title>slabinfo_write (520 samples, 0.50%)</title><rect width=".504%" height="15" x="45.968%" y="373" fill="#D8870E" fg:w="520" fg:x="47387"/></g><g><title>kfree_skbmem (1,450 samples, 1.41%)</title><rect width="1.407%" height="15" x="45.083%" y="405" fill="#F12F05" fg:w="1450" fg:x="46474"/></g><g><title>slabinfo_write (17 samples, 0.02%)</title><rect width=".017%" height="15" x="46.473%" y="389" fill="#E92A23" fg:w="17" fg:x="47907"/></g><g><title>kmem_cache_free (50 samples, 0.05%)</title><rect width=".049%" height="15" x="46.489%" y="405" fill="#E70D06" fg:w="50" fg:x="47924"/></g><g><title>skb_free_head (11 samples, 0.01%)</title><rect width=".011%" height="15" x="46.554%" y="389" fill="#CFB528" fg:w="11" fg:x="47991"/></g><g><title>__sched_text_start (16 samples, 0.02%)</title><rect width=".015%" height="15" x="46.713%" y="357" fill="#FEAD31" fg:w="16" fg:x="48155"/></g><g><title>preempt_schedule_irq (16 samples, 0.02%)</title><rect width=".015%" height="15" x="46.713%" y="341" fill="#DD0126" fg:w="16" fg:x="48155"/></g><g><title>__schedule (16 samples, 0.02%)</title><rect width=".015%" height="15" x="46.713%" y="325" fill="#CE7C2E" fg:w="16" fg:x="48155"/></g><g><title>finish_task_switch (15 samples, 0.01%)</title><rect width=".015%" height="15" x="46.714%" y="309" fill="#F9150B" fg:w="15" fg:x="48156"/></g><g><title>_raw_spin_unlock_irq (15 samples, 0.01%)</title><rect width=".015%" height="15" x="46.714%" y="293" fill="#DEC928" fg:w="15" fg:x="48156"/></g><g><title>el1_irq (17 samples, 0.02%)</title><rect width=".017%" height="15" x="46.713%" y="373" fill="#EB3D1D" fg:w="17" fg:x="48155"/></g><g><title>kfree (12 samples, 0.01%)</title><rect width=".012%" height="15" x="46.73%" y="373" fill="#DBCF03" fg:w="12" fg:x="48172"/></g><g><title>__my_cpu_offset (22 samples, 0.02%)</title><rect width=".021%" height="15" x="46.755%" y="357" fill="#DE382E" fg:w="22" fg:x="48198"/></g><g><title>__slab_free (62 samples, 0.06%)</title><rect width=".06%" height="15" x="46.776%" y="357" fill="#EF4C36" fg:w="62" fg:x="48220"/></g><g><title>__slab_free (155 samples, 0.15%)</title><rect width=".15%" height="15" x="47.106%" y="341" fill="#E77C1B" fg:w="155" fg:x="48560"/></g><g><title>slab_free_freelist_hook.isra.0 (436 samples, 0.42%)</title><rect width=".423%" height="15" x="47.263%" y="341" fill="#F9C306" fg:w="436" fg:x="48721"/></g><g><title>kfree (1,358 samples, 1.32%)</title><rect width="1.317%" height="15" x="46.838%" y="357" fill="#EDAE2F" fg:w="1358" fg:x="48283"/></g><g><title>slabinfo_write (484 samples, 0.47%)</title><rect width=".469%" height="15" x="47.685%" y="341" fill="#CEC91F" fg:w="484" fg:x="49157"/></g><g><title>slab_free_freelist_hook.isra.0 (22 samples, 0.02%)</title><rect width=".021%" height="15" x="48.155%" y="357" fill="#E73934" fg:w="22" fg:x="49641"/></g><g><title>skb_release_data (1,675 samples, 1.62%)</title><rect width="1.625%" height="15" x="46.565%" y="389" fill="#F8B116" fg:w="1675" fg:x="48002"/></g><g><title>skb_free_head (1,493 samples, 1.45%)</title><rect width="1.448%" height="15" x="46.742%" y="373" fill="#D7D325" fg:w="1493" fg:x="48184"/></g><g><title>slabinfo_write (14 samples, 0.01%)</title><rect width=".014%" height="15" x="48.176%" y="357" fill="#F18033" fg:w="14" fg:x="49663"/></g><g><title>sock_getsockopt (397 samples, 0.39%)</title><rect width=".385%" height="15" x="48.279%" y="373" fill="#E3A51F" fg:w="397" fg:x="49769"/></g><g><title>skb_release_head_state (548 samples, 0.53%)</title><rect width=".532%" height="15" x="48.19%" y="389" fill="#E4A718" fg:w="548" fg:x="49677"/></g><g><title>sock_rfree (59 samples, 0.06%)</title><rect width=".057%" height="15" x="48.664%" y="373" fill="#E48F0C" fg:w="59" fg:x="50166"/></g><g><title>skb_segment (1,393 samples, 1.35%)</title><rect width="1.351%" height="15" x="48.721%" y="389" fill="#F99508" fg:w="1393" fg:x="50225"/></g><g><title>el1_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="50.06%" y="373" fill="#F3232C" fg:w="13" fg:x="51605"/></g><g><title>gic_handle_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="50.06%" y="357" fill="#F65909" fg:w="13" fg:x="51605"/></g><g><title>__handle_domain_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="50.06%" y="341" fill="#E9D50D" fg:w="13" fg:x="51605"/></g><g><title>irq_exit (13 samples, 0.01%)</title><rect width=".013%" height="15" x="50.06%" y="325" fill="#E98D29" fg:w="13" fg:x="51605"/></g><g><title>__softirqentry_text_start (13 samples, 0.01%)</title><rect width=".013%" height="15" x="50.06%" y="309" fill="#EFA704" fg:w="13" fg:x="51605"/></g><g><title>skb_release_all (3,706 samples, 3.60%)</title><rect width="3.595%" height="15" x="46.538%" y="405" fill="#D1D910" fg:w="3706" fg:x="47974"/><text x="46.788%" y="415.5">skb_..</text></g><g><title>sock_rfree (62 samples, 0.06%)</title><rect width=".06%" height="15" x="50.073%" y="389" fill="#DB5823" fg:w="62" fg:x="51618"/></g><g><title>skb_release_data (35 samples, 0.03%)</title><rect width=".034%" height="15" x="50.133%" y="405" fill="#DCC117" fg:w="35" fg:x="51680"/></g><g><title>__kfree_skb (5,354 samples, 5.19%)</title><rect width="5.194%" height="15" x="45.062%" y="421" fill="#E65A34" fg:w="5354" fg:x="46453"/><text x="45.312%" y="431.5">__kfre..</text></g><g><title>skb_release_head_state (92 samples, 0.09%)</title><rect width=".089%" height="15" x="50.167%" y="405" fill="#FC6A13" fg:w="92" fg:x="51715"/></g><g><title>__skb_datagram_iter (73 samples, 0.07%)</title><rect width=".071%" height="15" x="50.271%" y="421" fill="#CE4A14" fg:w="73" fg:x="51822"/></g><g><title>_raw_spin_lock_bh (155 samples, 0.15%)</title><rect width=".15%" height="15" x="50.342%" y="421" fill="#E68A2C" fg:w="155" fg:x="51895"/></g><g><title>_raw_spin_unlock_bh (82 samples, 0.08%)</title><rect width=".08%" height="15" x="50.492%" y="421" fill="#EBB62B" fg:w="82" fg:x="52050"/></g><g><title>el1_irq (21 samples, 0.02%)</title><rect width=".02%" height="15" x="50.571%" y="421" fill="#F21033" fg:w="21" fg:x="52132"/></g><g><title>gic_handle_irq (19 samples, 0.02%)</title><rect width=".018%" height="15" x="50.573%" y="405" fill="#F80904" fg:w="19" fg:x="52134"/></g><g><title>__handle_domain_irq (19 samples, 0.02%)</title><rect width=".018%" height="15" x="50.573%" y="389" fill="#D21F16" fg:w="19" fg:x="52134"/></g><g><title>irq_exit (19 samples, 0.02%)</title><rect width=".018%" height="15" x="50.573%" y="373" fill="#EF3627" fg:w="19" fg:x="52134"/></g><g><title>__softirqentry_text_start (19 samples, 0.02%)</title><rect width=".018%" height="15" x="50.573%" y="357" fill="#E66329" fg:w="19" fg:x="52134"/></g><g><title>kfree_skbmem (48 samples, 0.05%)</title><rect width=".047%" height="15" x="50.592%" y="421" fill="#FD6A0C" fg:w="48" fg:x="52153"/></g><g><title>__local_bh_enable_ip (291 samples, 0.28%)</title><rect width=".282%" height="15" x="50.751%" y="405" fill="#D52E29" fg:w="291" fg:x="52317"/></g><g><title>__lock_text_start (366 samples, 0.36%)</title><rect width=".355%" height="15" x="51.036%" y="405" fill="#D78523" fg:w="366" fg:x="52611"/></g><g><title>_raw_read_lock_irqsave (827 samples, 0.80%)</title><rect width=".802%" height="15" x="51.391%" y="405" fill="#D51C05" fg:w="827" fg:x="52977"/></g><g><title>_raw_spin_lock_bh (123 samples, 0.12%)</title><rect width=".119%" height="15" x="52.193%" y="405" fill="#D74D31" fg:w="123" fg:x="53804"/></g><g><title>lock_sock_nested (1,727 samples, 1.68%)</title><rect width="1.675%" height="15" x="50.638%" y="421" fill="#F86416" fg:w="1727" fg:x="52201"/></g><g><title>ns_to_timespec64 (117 samples, 0.11%)</title><rect width=".114%" height="15" x="52.314%" y="421" fill="#D04309" fg:w="117" fg:x="53928"/></g><g><title>__local_bh_enable_ip (112 samples, 0.11%)</title><rect width=".109%" height="15" x="52.59%" y="405" fill="#DB8515" fg:w="112" fg:x="54213"/></g><g><title>tcp_clean_rtx_queue (17 samples, 0.02%)</title><rect width=".017%" height="15" x="52.728%" y="341" fill="#F62E1D" fg:w="17" fg:x="54355"/></g><g><title>tcp_ack (32 samples, 0.03%)</title><rect width=".031%" height="15" x="52.716%" y="357" fill="#F6B934" fg:w="32" fg:x="54343"/></g><g><title>__release_sock (57 samples, 0.06%)</title><rect width=".055%" height="15" x="52.699%" y="405" fill="#FC880B" fg:w="57" fg:x="54325"/></g><g><title>tcp_v4_do_rcv (55 samples, 0.05%)</title><rect width=".053%" height="15" x="52.701%" y="389" fill="#DB8A35" fg:w="55" fg:x="54327"/></g><g><title>tcp_rcv_established (51 samples, 0.05%)</title><rect width=".05%" height="15" x="52.705%" y="373" fill="#D33317" fg:w="51" fg:x="54331"/></g><g><title>_raw_read_lock_irqsave (284 samples, 0.28%)</title><rect width=".276%" height="15" x="52.757%" y="405" fill="#F7DD1C" fg:w="284" fg:x="54385"/></g><g><title>_raw_spin_lock_bh (50 samples, 0.05%)</title><rect width=".049%" height="15" x="53.032%" y="405" fill="#FBDE2D" fg:w="50" fg:x="54669"/></g><g><title>_raw_spin_unlock_bh (353 samples, 0.34%)</title><rect width=".342%" height="15" x="53.081%" y="405" fill="#D9A235" fg:w="353" fg:x="54719"/></g><g><title>__local_bh_enable_ip (302 samples, 0.29%)</title><rect width=".293%" height="15" x="53.13%" y="389" fill="#E55D0E" fg:w="302" fg:x="54770"/></g><g><title>release_sock (1,170 samples, 1.13%)</title><rect width="1.135%" height="15" x="52.427%" y="421" fill="#D14331" fg:w="1170" fg:x="54045"/></g><g><title>tcp_release_cb (143 samples, 0.14%)</title><rect width=".139%" height="15" x="53.423%" y="405" fill="#D5571D" fg:w="143" fg:x="55072"/></g><g><title>__check_object_size (46 samples, 0.04%)</title><rect width=".045%" height="15" x="54.603%" y="389" fill="#CD9734" fg:w="46" fg:x="56288"/></g><g><title>_copy_to_iter (108 samples, 0.10%)</title><rect width=".105%" height="15" x="54.648%" y="389" fill="#FDD727" fg:w="108" fg:x="56334"/></g><g><title>__check_heap_object (21 samples, 0.02%)</title><rect width=".02%" height="15" x="54.87%" y="373" fill="#DDDC29" fg:w="21" fg:x="56563"/></g><g><title>__check_heap_object (303 samples, 0.29%)</title><rect width=".294%" height="15" x="55.859%" y="357" fill="#DA8515" fg:w="303" fg:x="57583"/></g><g><title>check_stack_object (87 samples, 0.08%)</title><rect width=".084%" height="15" x="56.153%" y="357" fill="#DDC12B" fg:w="87" fg:x="57886"/></g><g><title>__check_object_size (2,167 samples, 2.10%)</title><rect width="2.102%" height="15" x="54.89%" y="373" fill="#F08034" fg:w="2167" fg:x="56584"/><text x="55.14%" y="383.5">_..</text></g><g><title>pfn_valid (768 samples, 0.75%)</title><rect width=".745%" height="15" x="56.247%" y="357" fill="#FD720C" fg:w="768" fg:x="57983"/></g><g><title>memblock_is_map_memory (243 samples, 0.24%)</title><rect width=".236%" height="15" x="56.757%" y="341" fill="#D7DF2F" fg:w="243" fg:x="58508"/></g><g><title>mlx5e_poll_rx_cq (14 samples, 0.01%)</title><rect width=".014%" height="15" x="65.446%" y="229" fill="#F8E117" fg:w="14" fg:x="67466"/></g><g><title>raw_rcv_skb (12 samples, 0.01%)</title><rect width=".012%" height="15" x="65.468%" y="37" fill="#FA6C00" fg:w="12" fg:x="67488"/></g><g><title>raw_rcv (13 samples, 0.01%)</title><rect width=".013%" height="15" x="65.468%" y="53" fill="#E4D007" fg:w="13" fg:x="67488"/></g><g><title>raw_local_deliver (17 samples, 0.02%)</title><rect width=".017%" height="15" x="65.466%" y="69" fill="#F42D0A" fg:w="17" fg:x="67486"/></g><g><title>ip_local_deliver_finish (21 samples, 0.02%)</title><rect width=".02%" height="15" x="65.465%" y="101" fill="#CF7D19" fg:w="21" fg:x="67485"/></g><g><title>ip_protocol_deliver_rcu (21 samples, 0.02%)</title><rect width=".02%" height="15" x="65.465%" y="85" fill="#D2C312" fg:w="21" fg:x="67485"/></g><g><title>ip_local_deliver (23 samples, 0.02%)</title><rect width=".022%" height="15" x="65.465%" y="117" fill="#F9500C" fg:w="23" fg:x="67485"/></g><g><title>ip_rcv_finish (28 samples, 0.03%)</title><rect width=".027%" height="15" x="65.465%" y="133" fill="#DD4109" fg:w="28" fg:x="67485"/></g><g><title>ip_rcv (40 samples, 0.04%)</title><rect width=".039%" height="15" x="65.462%" y="149" fill="#EB3124" fg:w="40" fg:x="67482"/></g><g><title>__netif_receive_skb_core (42 samples, 0.04%)</title><rect width=".041%" height="15" x="65.461%" y="165" fill="#E12014" fg:w="42" fg:x="67481"/></g><g><title>net_rx_action (63 samples, 0.06%)</title><rect width=".061%" height="15" x="65.442%" y="261" fill="#D78D2E" fg:w="63" fg:x="67461"/></g><g><title>mlx5e_napi_poll (63 samples, 0.06%)</title><rect width=".061%" height="15" x="65.442%" y="245" fill="#FAA02F" fg:w="63" fg:x="67461"/></g><g><title>napi_complete_done (44 samples, 0.04%)</title><rect width=".043%" height="15" x="65.46%" y="229" fill="#D8DE28" fg:w="44" fg:x="67480"/></g><g><title>gro_normal_list.part.0 (44 samples, 0.04%)</title><rect width=".043%" height="15" x="65.46%" y="213" fill="#EAD927" fg:w="44" fg:x="67480"/></g><g><title>netif_receive_skb_list_internal (44 samples, 0.04%)</title><rect width=".043%" height="15" x="65.46%" y="197" fill="#CFB228" fg:w="44" fg:x="67480"/></g><g><title>__netif_receive_skb_list_core (44 samples, 0.04%)</title><rect width=".043%" height="15" x="65.46%" y="181" fill="#DD880D" fg:w="44" fg:x="67480"/></g><g><title>__softirqentry_text_start (87 samples, 0.08%)</title><rect width=".084%" height="15" x="65.433%" y="277" fill="#F9C70A" fg:w="87" fg:x="67452"/></g><g><title>__arch_copy_to_user (8,503 samples, 8.25%)</title><rect width="8.248%" height="15" x="57.271%" y="357" fill="#F9DE0D" fg:w="8503" fg:x="59038"/><text x="57.521%" y="367.5">__arch_copy..</text></g><g><title>el1_irq (90 samples, 0.09%)</title><rect width=".087%" height="15" x="65.432%" y="341" fill="#F4B926" fg:w="90" fg:x="67451"/></g><g><title>gic_handle_irq (89 samples, 0.09%)</title><rect width=".086%" height="15" x="65.433%" y="325" fill="#ECCA09" fg:w="89" fg:x="67452"/></g><g><title>__handle_domain_irq (89 samples, 0.09%)</title><rect width=".086%" height="15" x="65.433%" y="309" fill="#FAE525" fg:w="89" fg:x="67452"/></g><g><title>irq_exit (89 samples, 0.09%)</title><rect width=".086%" height="15" x="65.433%" y="293" fill="#CEAE17" fg:w="89" fg:x="67452"/></g><g><title>copyout (75 samples, 0.07%)</title><rect width=".073%" height="15" x="65.519%" y="357" fill="#D3212B" fg:w="75" fg:x="67541"/></g><g><title>_copy_to_iter (8,867 samples, 8.60%)</title><rect width="8.602%" height="15" x="56.992%" y="373" fill="#F53A32" fg:w="8867" fg:x="58751"/><text x="57.242%" y="383.5">_copy_to_iter</text></g><g><title>check_stack_object (57 samples, 0.06%)</title><rect width=".055%" height="15" x="65.594%" y="373" fill="#F44424" fg:w="57" fg:x="67618"/></g><g><title>copyout (165 samples, 0.16%)</title><rect width=".16%" height="15" x="65.649%" y="373" fill="#E8E50F" fg:w="165" fg:x="67675"/></g><g><title>__skb_datagram_iter (12,527 samples, 12.15%)</title><rect width="12.152%" height="15" x="53.678%" y="405" fill="#FE1E17" fg:w="12527" fg:x="55335"/><text x="53.928%" y="415.5">__skb_datagram_iter</text></g><g><title>simple_copy_to_iter (11,413 samples, 11.07%)</title><rect width="11.071%" height="15" x="54.759%" y="389" fill="#EBA00E" fg:w="11413" fg:x="56449"/><text x="55.009%" y="399.5">simple_copy_to_i..</text></g><g><title>pfn_valid (21 samples, 0.02%)</title><rect width=".02%" height="15" x="65.81%" y="373" fill="#D49B2C" fg:w="21" fg:x="67841"/></g><g><title>skb_copy_datagram_iter (12,675 samples, 12.30%)</title><rect width="12.296%" height="15" x="53.562%" y="421" fill="#E20232" fg:w="12675" fg:x="55215"/><text x="53.812%" y="431.5">skb_copy_datagram_..</text></g><g><title>simple_copy_to_iter (26 samples, 0.03%)</title><rect width=".025%" height="15" x="65.832%" y="405" fill="#EAB106" fg:w="26" fg:x="67864"/></g><g><title>skb_release_all (39 samples, 0.04%)</title><rect width=".038%" height="15" x="65.858%" y="421" fill="#D91809" fg:w="39" fg:x="67890"/></g><g><title>tcp_cleanup_rbuf (442 samples, 0.43%)</title><rect width=".429%" height="15" x="65.895%" y="421" fill="#DC0D2E" fg:w="442" fg:x="67929"/></g><g><title>tcp_mstamp_refresh (76 samples, 0.07%)</title><rect width=".074%" height="15" x="66.324%" y="421" fill="#EFDD1B" fg:w="76" fg:x="68371"/></g><g><title>ktime_get (38 samples, 0.04%)</title><rect width=".037%" height="15" x="66.624%" y="405" fill="#DEC619" fg:w="38" fg:x="68680"/></g><g><title>arch_counter_get_cntpct (332 samples, 0.32%)</title><rect width=".322%" height="15" x="66.93%" y="373" fill="#D3630D" fg:w="332" fg:x="68996"/></g><g><title>arch_counter_read (22 samples, 0.02%)</title><rect width=".021%" height="15" x="67.253%" y="373" fill="#E86F1F" fg:w="22" fg:x="69328"/></g><g><title>tcp_rcv_space_adjust (904 samples, 0.88%)</title><rect width=".877%" height="15" x="66.398%" y="421" fill="#F55225" fg:w="904" fg:x="68447"/></g><g><title>tcp_mstamp_refresh (633 samples, 0.61%)</title><rect width=".614%" height="15" x="66.661%" y="405" fill="#E3952E" fg:w="633" fg:x="68718"/></g><g><title>ktime_get (564 samples, 0.55%)</title><rect width=".547%" height="15" x="66.728%" y="389" fill="#DA2432" fg:w="564" fg:x="68787"/></g><g><title>tcp_recv_timestamp (567 samples, 0.55%)</title><rect width=".55%" height="15" x="67.275%" y="421" fill="#E25030" fg:w="567" fg:x="69351"/></g><g><title>inet_recvmsg (27,706 samples, 26.88%)</title><rect width="26.877%" height="15" x="41.03%" y="453" fill="#EEE00F" fg:w="27706" fg:x="42296"/><text x="41.28%" y="463.5">inet_recvmsg</text></g><g><title>tcp_recvmsg (26,830 samples, 26.03%)</title><rect width="26.027%" height="15" x="41.88%" y="437" fill="#F1880A" fg:w="26830" fg:x="43172"/><text x="42.13%" y="447.5">tcp_recvmsg</text></g><g><title>tcp_release_cb (84 samples, 0.08%)</title><rect width=".082%" height="15" x="67.825%" y="421" fill="#D0202D" fg:w="84" fg:x="69918"/></g><g><title>aa_sk_perm (48 samples, 0.05%)</title><rect width=".047%" height="15" x="68.185%" y="437" fill="#CF8709" fg:w="48" fg:x="70289"/></g><g><title>apparmor_socket_recvmsg (880 samples, 0.85%)</title><rect width=".854%" height="15" x="68.231%" y="437" fill="#CE562C" fg:w="880" fg:x="70337"/></g><g><title>aa_sk_perm (763 samples, 0.74%)</title><rect width=".74%" height="15" x="68.345%" y="421" fill="#F5B10F" fg:w="763" fg:x="70454"/></g><g><title>security_socket_recvmsg (1,217 samples, 1.18%)</title><rect width="1.181%" height="15" x="67.906%" y="453" fill="#CE4032" fg:w="1217" fg:x="70002"/></g><g><title>sock_recvmsg (29,143 samples, 28.27%)</title><rect width="28.271%" height="15" x="40.868%" y="469" fill="#EA2428" fg:w="29143" fg:x="42129"/><text x="41.118%" y="479.5">sock_recvmsg</text></g><g><title>tcp_recvmsg (53 samples, 0.05%)</title><rect width=".051%" height="15" x="69.087%" y="453" fill="#D54008" fg:w="53" fg:x="71219"/></g><g><title>__rcu_read_lock (51 samples, 0.05%)</title><rect width=".05%" height="15" x="69.846%" y="405" fill="#D24B24" fg:w="51" fg:x="72001"/></g><g><title>__fget (403 samples, 0.39%)</title><rect width=".391%" height="15" x="69.546%" y="421" fill="#E55815" fg:w="403" fg:x="71692"/></g><g><title>__rcu_read_unlock (43 samples, 0.04%)</title><rect width=".042%" height="15" x="69.895%" y="405" fill="#FCCC2F" fg:w="43" fg:x="72052"/></g><g><title>__fdget (1,234 samples, 1.20%)</title><rect width="1.197%" height="15" x="69.253%" y="453" fill="#D04D1B" fg:w="1234" fg:x="71390"/></g><g><title>__fget_light (1,195 samples, 1.16%)</title><rect width="1.159%" height="15" x="69.291%" y="437" fill="#DD4C1A" fg:w="1195" fg:x="71429"/></g><g><title>f_dupfd (527 samples, 0.51%)</title><rect width=".511%" height="15" x="69.939%" y="421" fill="#E18B12" fg:w="527" fg:x="72097"/></g><g><title>__sys_recvfrom (31,802 samples, 30.85%)</title><rect width="30.85%" height="15" x="39.627%" y="485" fill="#E6890B" fg:w="31802" fg:x="40850"/><text x="39.877%" y="495.5">__sys_recvfrom</text></g><g><title>sockfd_lookup_light (1,380 samples, 1.34%)</title><rect width="1.339%" height="15" x="69.138%" y="469" fill="#D41C01" fg:w="1380" fg:x="71272"/></g><g><title>__fget_light (28 samples, 0.03%)</title><rect width=".027%" height="15" x="70.45%" y="453" fill="#F8A411" fg:w="28" fg:x="72624"/></g><g><title>fput (36 samples, 0.03%)</title><rect width=".035%" height="15" x="70.477%" y="485" fill="#DEAB2A" fg:w="36" fg:x="72652"/></g><g><title>import_single_range (238 samples, 0.23%)</title><rect width=".231%" height="15" x="70.512%" y="485" fill="#F3542D" fg:w="238" fg:x="72688"/></g><g><title>sock_recvmsg (57 samples, 0.06%)</title><rect width=".055%" height="15" x="70.743%" y="485" fill="#FC3117" fg:w="57" fg:x="72926"/></g><g><title>__arm64_sys_recvfrom (32,341 samples, 31.37%)</title><rect width="31.373%" height="15" x="39.519%" y="501" fill="#D71307" fg:w="32341" fg:x="40739"/><text x="39.769%" y="511.5">__arm64_sys_recvfrom</text></g><g><title>sockfd_lookup_light (97 samples, 0.09%)</title><rect width=".094%" height="15" x="70.798%" y="485" fill="#EE5129" fg:w="97" fg:x="72983"/></g><g><title>__sys_recvfrom (64 samples, 0.06%)</title><rect width=".062%" height="15" x="70.892%" y="501" fill="#D2C725" fg:w="64" fg:x="73080"/></g><g><title>el0_svc (35,503 samples, 34.44%)</title><rect width="34.44%" height="15" x="36.527%" y="549" fill="#F4C031" fg:w="35503" fg:x="37654"/><text x="36.777%" y="559.5">el0_svc</text></g><g><title>el0_svc_handler (35,503 samples, 34.44%)</title><rect width="34.44%" height="15" x="36.527%" y="533" fill="#E2D30B" fg:w="35503" fg:x="37654"/><text x="36.777%" y="543.5">el0_svc_handler</text></g><g><title>el0_svc_common.constprop.0 (35,359 samples, 34.30%)</title><rect width="34.3%" height="15" x="36.666%" y="517" fill="#ECA236" fg:w="35359" fg:x="37798"/><text x="36.916%" y="527.5">el0_svc_common.constprop.0</text></g><g><title>el1_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="70.954%" y="501" fill="#DCE509" fg:w="13" fg:x="73144"/></g><g><title>gic_handle_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="70.954%" y="485" fill="#FA5716" fg:w="13" fg:x="73144"/></g><g><title>__handle_domain_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="70.954%" y="469" fill="#EF2B11" fg:w="13" fg:x="73144"/></g><g><title>irq_exit (13 samples, 0.01%)</title><rect width=".013%" height="15" x="70.954%" y="453" fill="#E7B119" fg:w="13" fg:x="73144"/></g><g><title>__softirqentry_text_start (13 samples, 0.01%)</title><rect width=".013%" height="15" x="70.954%" y="437" fill="#DBB301" fg:w="13" fg:x="73144"/></g><g><title>recv (38,280 samples, 37.13%)</title><rect width="37.134%" height="15" x="33.849%" y="597" fill="#EEDB35" fg:w="38280" fg:x="34894"/><text x="34.099%" y="607.5">recv</text></g><g><title>__libc_recv (38,252 samples, 37.11%)</title><rect width="37.107%" height="15" x="33.877%" y="581" fill="#E8A724" fg:w="38252" fg:x="34922"/><text x="34.127%" y="591.5">__libc_recv</text></g><g><title>__libc_recv (37,944 samples, 36.81%)</title><rect width="36.808%" height="15" x="34.175%" y="565" fill="#F41333" fg:w="37944" fg:x="35230"/><text x="34.425%" y="575.5">__libc_recv</text></g><g><title>work_pending (17 samples, 0.02%)</title><rect width=".017%" height="15" x="70.967%" y="549" fill="#E00616" fg:w="17" fg:x="73157"/></g><g><title>do_notify_resume (17 samples, 0.02%)</title><rect width=".017%" height="15" x="70.967%" y="533" fill="#E09105" fg:w="17" fg:x="73157"/></g><g><title>rpc_get_pdu_size (49 samples, 0.05%)</title><rect width=".048%" height="15" x="70.984%" y="597" fill="#EA8231" fg:w="49" fg:x="73174"/></g><g><title>__bswap_32 (48 samples, 0.05%)</title><rect width=".047%" height="15" x="70.984%" y="581" fill="#FE0602" fg:w="48" fg:x="73175"/></g><g><title>__GI___libc_free (95 samples, 0.09%)</title><rect width=".092%" height="15" x="73.226%" y="581" fill="#D0602E" fg:w="95" fg:x="75486"/></g><g><title>__GI___pthread_mutex_lock (1,393 samples, 1.35%)</title><rect width="1.351%" height="15" x="73.318%" y="581" fill="#EF0327" fg:w="1393" fg:x="75581"/></g><g><title>__pthread_mutex_unlock_usercnt (915 samples, 0.89%)</title><rect width=".888%" height="15" x="74.671%" y="581" fill="#E9D201" fg:w="915" fg:x="76975"/></g><g><title>futex_wait_setup (11 samples, 0.01%)</title><rect width=".011%" height="15" x="79.168%" y="453" fill="#F48925" fg:w="11" fg:x="81611"/></g><g><title>futex_wait (31 samples, 0.03%)</title><rect width=".03%" height="15" x="79.154%" y="469" fill="#F08802" fg:w="31" fg:x="81597"/></g><g><title>do_futex (37 samples, 0.04%)</title><rect width=".036%" height="15" x="79.152%" y="485" fill="#EF1225" fg:w="37" fg:x="81595"/></g><g><title>__arm64_sys_futex (41 samples, 0.04%)</title><rect width=".04%" height="15" x="79.15%" y="501" fill="#DAB916" fg:w="41" fg:x="81593"/></g><g><title>__lll_lock_wait_private (57 samples, 0.06%)</title><rect width=".055%" height="15" x="79.136%" y="565" fill="#E1DA04" fg:w="57" fg:x="81578"/></g><g><title>el0_svc (48 samples, 0.05%)</title><rect width=".047%" height="15" x="79.145%" y="549" fill="#E6B620" fg:w="48" fg:x="81587"/></g><g><title>el0_svc_handler (48 samples, 0.05%)</title><rect width=".047%" height="15" x="79.145%" y="533" fill="#F2382B" fg:w="48" fg:x="81587"/></g><g><title>el0_svc_common.constprop.0 (46 samples, 0.04%)</title><rect width=".045%" height="15" x="79.147%" y="517" fill="#E96318" fg:w="46" fg:x="81589"/></g><g><title>net_rx_action (11 samples, 0.01%)</title><rect width=".011%" height="15" x="79.195%" y="485" fill="#EAD12A" fg:w="11" fg:x="81639"/></g><g><title>mlx5e_napi_poll (11 samples, 0.01%)</title><rect width=".011%" height="15" x="79.195%" y="469" fill="#E3070C" fg:w="11" fg:x="81639"/></g><g><title>el0_irq_naked (16 samples, 0.02%)</title><rect width=".015%" height="15" x="79.191%" y="565" fill="#F5CB2B" fg:w="16" fg:x="81635"/></g><g><title>gic_handle_irq (16 samples, 0.02%)</title><rect width=".015%" height="15" x="79.191%" y="549" fill="#EECD21" fg:w="16" fg:x="81635"/></g><g><title>__handle_domain_irq (16 samples, 0.02%)</title><rect width=".015%" height="15" x="79.191%" y="533" fill="#E73807" fg:w="16" fg:x="81635"/></g><g><title>irq_exit (16 samples, 0.02%)</title><rect width=".015%" height="15" x="79.191%" y="517" fill="#F4BA1D" fg:w="16" fg:x="81635"/></g><g><title>__softirqentry_text_start (16 samples, 0.02%)</title><rect width=".015%" height="15" x="79.191%" y="501" fill="#EA6F1F" fg:w="16" fg:x="81635"/></g><g><title>futex_wake (28 samples, 0.03%)</title><rect width=".027%" height="15" x="79.209%" y="485" fill="#F1950A" fg:w="28" fg:x="81653"/></g><g><title>wake_up_q (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.221%" y="469" fill="#F9CE2C" fg:w="15" fg:x="81666"/></g><g><title>try_to_wake_up (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.221%" y="453" fill="#FB991E" fg:w="15" fg:x="81666"/></g><g><title>_raw_spin_unlock_irqrestore (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.221%" y="437" fill="#EF9826" fg:w="15" fg:x="81666"/></g><g><title>do_futex (34 samples, 0.03%)</title><rect width=".033%" height="15" x="79.208%" y="501" fill="#F98B2F" fg:w="34" fg:x="81652"/></g><g><title>el0_svc (36 samples, 0.03%)</title><rect width=".035%" height="15" x="79.207%" y="565" fill="#F44023" fg:w="36" fg:x="81651"/></g><g><title>el0_svc_handler (36 samples, 0.03%)</title><rect width=".035%" height="15" x="79.207%" y="549" fill="#D82E0F" fg:w="36" fg:x="81651"/></g><g><title>el0_svc_common.constprop.0 (35 samples, 0.03%)</title><rect width=".034%" height="15" x="79.208%" y="533" fill="#FA4A13" fg:w="35" fg:x="81652"/></g><g><title>__arm64_sys_futex (35 samples, 0.03%)</title><rect width=".034%" height="15" x="79.208%" y="517" fill="#F92A21" fg:w="35" fg:x="81652"/></g><g><title>unlink_chunk (154 samples, 0.15%)</title><rect width=".149%" height="15" x="79.255%" y="565" fill="#F29511" fg:w="154" fg:x="81701"/></g><g><title>_int_free (4,010 samples, 3.89%)</title><rect width="3.89%" height="15" x="75.558%" y="581" fill="#F41D15" fg:w="4010" fg:x="77890"/><text x="75.808%" y="591.5">_int..</text></g><g><title>work_pending (45 samples, 0.04%)</title><rect width=".044%" height="15" x="79.405%" y="565" fill="#DC8225" fg:w="45" fg:x="81855"/></g><g><title>do_notify_resume (45 samples, 0.04%)</title><rect width=".044%" height="15" x="79.405%" y="549" fill="#D34302" fg:w="45" fg:x="81855"/></g><g><title>schedule (17 samples, 0.02%)</title><rect width=".017%" height="15" x="79.432%" y="533" fill="#EB4434" fg:w="17" fg:x="81883"/></g><g><title>__schedule (17 samples, 0.02%)</title><rect width=".017%" height="15" x="79.432%" y="517" fill="#F68E03" fg:w="17" fg:x="81883"/></g><g><title>finish_task_switch (16 samples, 0.02%)</title><rect width=".015%" height="15" x="79.433%" y="501" fill="#F11907" fg:w="16" fg:x="81884"/></g><g><title>_raw_spin_unlock_irq (16 samples, 0.02%)</title><rect width=".015%" height="15" x="79.433%" y="485" fill="#F27727" fg:w="16" fg:x="81884"/></g><g><title>el0_irq_naked (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.448%" y="581" fill="#F1622D" fg:w="15" fg:x="81900"/></g><g><title>gic_handle_irq (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.448%" y="565" fill="#FE1C1E" fg:w="15" fg:x="81900"/></g><g><title>__handle_domain_irq (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.448%" y="549" fill="#F18E36" fg:w="15" fg:x="81900"/></g><g><title>irq_exit (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.448%" y="533" fill="#DE550F" fg:w="15" fg:x="81900"/></g><g><title>__softirqentry_text_start (15 samples, 0.01%)</title><rect width=".015%" height="15" x="79.448%" y="517" fill="#D2552F" fg:w="15" fg:x="81900"/></g><g><title>__GI___libc_free (973 samples, 0.94%)</title><rect width=".944%" height="15" x="79.514%" y="565" fill="#E0CE19" fg:w="973" fg:x="81968"/></g><g><title>_int_free (311 samples, 0.30%)</title><rect width=".302%" height="15" x="80.458%" y="565" fill="#F3C913" fg:w="311" fg:x="82941"/></g><g><title>tcache_put (85 samples, 0.08%)</title><rect width=".083%" height="15" x="80.677%" y="549" fill="#EC3B04" fg:w="85" fg:x="83167"/></g><g><title>libnfs_zdr_destroy (1,339 samples, 1.30%)</title><rect width="1.299%" height="15" x="79.463%" y="581" fill="#FEB32D" fg:w="1339" fg:x="81915"/></g><g><title>libnfs_zdr_getpos (16 samples, 0.02%)</title><rect width=".015%" height="15" x="80.762%" y="581" fill="#E20E0A" fg:w="16" fg:x="83254"/></g><g><title>libnfs_zdr_int (47 samples, 0.05%)</title><rect width=".046%" height="15" x="80.777%" y="581" fill="#F41B29" fg:w="47" fg:x="83270"/></g><g><title>__bswap_32 (48 samples, 0.05%)</title><rect width=".047%" height="15" x="80.957%" y="565" fill="#EB2320" fg:w="48" fg:x="83455"/></g><g><title>libnfs_zdr_u_int (185 samples, 0.18%)</title><rect width=".179%" height="15" x="80.826%" y="581" fill="#DA441F" fg:w="185" fg:x="83320"/></g><g><title>libnfs_zdrmem_create (226 samples, 0.22%)</title><rect width=".219%" height="15" x="81.005%" y="581" fill="#CF7825" fg:w="226" fg:x="83505"/></g><g><title>memset (12 samples, 0.01%)</title><rect width=".012%" height="15" x="81.224%" y="581" fill="#E36200" fg:w="12" fg:x="83731"/></g><g><title>nfs_mt_mutex_lock (70 samples, 0.07%)</title><rect width=".068%" height="15" x="81.236%" y="581" fill="#CF0703" fg:w="70" fg:x="83743"/></g><g><title>libnfs_zdr_destroy (18 samples, 0.02%)</title><rect width=".018%" height="15" x="81.547%" y="565" fill="#CE6213" fg:w="18" fg:x="84064"/></g><g><title>libnfs_zdr_free (29 samples, 0.03%)</title><rect width=".028%" height="15" x="81.565%" y="565" fill="#D9051A" fg:w="29" fg:x="84082"/></g><g><title>rpc_free_pdu (293 samples, 0.28%)</title><rect width=".284%" height="15" x="81.31%" y="581" fill="#EBBE26" fg:w="293" fg:x="83819"/></g><g><title>rpc_hash_xid (15 samples, 0.01%)</title><rect width=".015%" height="15" x="81.594%" y="581" fill="#F75618" fg:w="15" fg:x="84112"/></g><g><title>ck_pr_md_load_uint (873 samples, 0.85%)</title><rect width=".847%" height="15" x="84.422%" y="517" fill="#CD6510" fg:w="873" fg:x="87027"/></g><g><title>ck_ring_enqueue_spsc (889 samples, 0.86%)</title><rect width=".862%" height="15" x="84.411%" y="549" fill="#F6A821" fg:w="889" fg:x="87016"/></g><g><title>_ck_ring_enqueue_sp (889 samples, 0.86%)</title><rect width=".862%" height="15" x="84.411%" y="533" fill="#E77201" fg:w="889" fg:x="87016"/></g><g><title>el0_irq_naked (15 samples, 0.01%)</title><rect width=".015%" height="15" x="85.273%" y="549" fill="#CFB835" fg:w="15" fg:x="87905"/></g><g><title>gic_handle_irq (15 samples, 0.01%)</title><rect width=".015%" height="15" x="85.273%" y="533" fill="#E05F33" fg:w="15" fg:x="87905"/></g><g><title>__handle_domain_irq (15 samples, 0.01%)</title><rect width=".015%" height="15" x="85.273%" y="517" fill="#D4BC2D" fg:w="15" fg:x="87905"/></g><g><title>irq_exit (15 samples, 0.01%)</title><rect width=".015%" height="15" x="85.273%" y="501" fill="#DF9A26" fg:w="15" fg:x="87905"/></g><g><title>__softirqentry_text_start (15 samples, 0.01%)</title><rect width=".015%" height="15" x="85.273%" y="485" fill="#FB1634" fg:w="15" fg:x="87905"/></g><g><title>fs_dev_io_comp_cb (2,915 samples, 2.83%)</title><rect width="2.828%" height="15" x="82.478%" y="565" fill="#E5D116" fg:w="2915" fg:x="85023"/><text x="82.728%" y="575.5">fs..</text></g><g><title>work_pending (18 samples, 0.02%)</title><rect width=".018%" height="15" x="85.288%" y="549" fill="#EA8A22" fg:w="18" fg:x="87920"/></g><g><title>do_notify_resume (18 samples, 0.02%)</title><rect width=".018%" height="15" x="85.288%" y="533" fill="#D45F0B" fg:w="18" fg:x="87920"/></g><g><title>mpool2_free (20 samples, 0.02%)</title><rect width=".019%" height="15" x="86.351%" y="549" fill="#F0B32F" fg:w="20" fg:x="89016"/></g><g><title>ck_ring_enqueue_spsc (15 samples, 0.01%)</title><rect width=".015%" height="15" x="86.356%" y="533" fill="#F0A30B" fg:w="15" fg:x="89021"/></g><g><title>_ck_ring_enqueue_sp (15 samples, 0.01%)</title><rect width=".015%" height="15" x="86.356%" y="517" fill="#EC250C" fg:w="15" fg:x="89021"/></g><g><title>__bswap_32 (15 samples, 0.01%)</title><rect width=".015%" height="15" x="86.637%" y="533" fill="#E8A410" fg:w="15" fg:x="89311"/></g><g><title>__ctype_b_loc (132 samples, 0.13%)</title><rect width=".128%" height="15" x="86.872%" y="517" fill="#F4CD0F" fg:w="132" fg:x="89553"/></g><g><title>nfs_get_ugid (361 samples, 0.35%)</title><rect width=".35%" height="15" x="86.653%" y="533" fill="#DF752F" fg:w="361" fg:x="89327"/></g><g><title>nfs_pntoh64 (39 samples, 0.04%)</title><rect width=".038%" height="15" x="87.003%" y="533" fill="#F46B23" fg:w="39" fg:x="89688"/></g><g><title>__bswap_32 (38 samples, 0.04%)</title><rect width=".037%" height="15" x="87.004%" y="517" fill="#CD8C08" fg:w="38" fg:x="89689"/></g><g><title>nfs_parse_attributes (695 samples, 0.67%)</title><rect width=".674%" height="15" x="86.371%" y="549" fill="#E4542E" fg:w="695" fg:x="89036"/></g><g><title>getattr_cb (1,802 samples, 1.75%)</title><rect width="1.748%" height="15" x="85.305%" y="565" fill="#FEBC09" fg:w="1802" fg:x="87938"/></g><g><title>libnfs_rpc_call_body (73 samples, 0.07%)</title><rect width=".071%" height="15" x="87.198%" y="533" fill="#CE7036" fg:w="73" fg:x="89889"/></g><g><title>libnfs_zdr_u_int (35 samples, 0.03%)</title><rect width=".034%" height="15" x="88.026%" y="453" fill="#D85431" fg:w="35" fg:x="90743"/></g><g><title>do_notify_resume (20 samples, 0.02%)</title><rect width=".019%" height="15" x="88.061%" y="437" fill="#D6C223" fg:w="20" fg:x="90778"/></g><g><title>schedule (15 samples, 0.01%)</title><rect width=".015%" height="15" x="88.065%" y="421" fill="#F91C03" fg:w="15" fg:x="90783"/></g><g><title>__schedule (15 samples, 0.01%)</title><rect width=".015%" height="15" x="88.065%" y="405" fill="#DE3834" fg:w="15" fg:x="90783"/></g><g><title>finish_task_switch (15 samples, 0.01%)</title><rect width=".015%" height="15" x="88.065%" y="389" fill="#F5D932" fg:w="15" fg:x="90783"/></g><g><title>_raw_spin_unlock_irq (14 samples, 0.01%)</title><rect width=".014%" height="15" x="88.066%" y="373" fill="#D5C918" fg:w="14" fg:x="90784"/></g><g><title>libnfs_opaque_auth (464 samples, 0.45%)</title><rect width=".45%" height="15" x="87.631%" y="485" fill="#F8741C" fg:w="464" fg:x="90335"/></g><g><title>libnfs_zdr_bytes (461 samples, 0.45%)</title><rect width=".447%" height="15" x="87.634%" y="469" fill="#DB482B" fg:w="461" fg:x="90338"/></g><g><title>work_pending (21 samples, 0.02%)</title><rect width=".02%" height="15" x="88.061%" y="453" fill="#D18A0E" fg:w="21" fg:x="90778"/></g><g><title>libnfs_zdr_u_int (27 samples, 0.03%)</title><rect width=".026%" height="15" x="88.081%" y="485" fill="#DE1221" fg:w="27" fg:x="90799"/></g><g><title>libnfs_opaque_auth (579 samples, 0.56%)</title><rect width=".562%" height="15" x="87.548%" y="501" fill="#D5C707" fg:w="579" fg:x="90250"/></g><g><title>libnfs_zdr_u_int (26 samples, 0.03%)</title><rect width=".025%" height="15" x="88.11%" y="501" fill="#FA6E0A" fg:w="26" fg:x="90829"/></g><g><title>libnfs_zdr_u_int (19 samples, 0.02%)</title><rect width=".018%" height="15" x="88.638%" y="469" fill="#F87B06" fg:w="19" fg:x="91373"/></g><g><title>__GI___memset_generic (341 samples, 0.33%)</title><rect width=".331%" height="15" x="88.674%" y="453" fill="#CE5B1F" fg:w="341" fg:x="91410"/></g><g><title>memset (360 samples, 0.35%)</title><rect width=".349%" height="15" x="88.656%" y="469" fill="#D39A0D" fg:w="360" fg:x="91392"/></g><g><title>tcache_get (140 samples, 0.14%)</title><rect width=".136%" height="15" x="89.444%" y="437" fill="#E19407" fg:w="140" fg:x="92204"/></g><g><title>zdr_malloc (592 samples, 0.57%)</title><rect width=".574%" height="15" x="89.007%" y="469" fill="#DCA02B" fg:w="592" fg:x="91754"/></g><g><title>__GI___libc_malloc (571 samples, 0.55%)</title><rect width=".554%" height="15" x="89.028%" y="453" fill="#D53427" fg:w="571" fg:x="91775"/></g><g><title>zdr_nfs_opnum4 (210 samples, 0.20%)</title><rect width=".204%" height="15" x="89.783%" y="453" fill="#F38907" fg:w="210" fg:x="92554"/></g><g><title>libnfs_zdr_enum (158 samples, 0.15%)</title><rect width=".153%" height="15" x="89.834%" y="437" fill="#E64F0D" fg:w="158" fg:x="92606"/></g><g><title>libnfs_zdr_u_int (45 samples, 0.04%)</title><rect width=".044%" height="15" x="89.943%" y="421" fill="#F76917" fg:w="45" fg:x="92719"/></g><g><title>libnfs_zdr_u_int (76 samples, 0.07%)</title><rect width=".074%" height="15" x="90.68%" y="341" fill="#DFB329" fg:w="76" fg:x="93478"/></g><g><title>zdr_bitmap4 (225 samples, 0.22%)</title><rect width=".218%" height="15" x="90.603%" y="373" fill="#DA0922" fg:w="225" fg:x="93399"/></g><g><title>libnfs_zdr_array (193 samples, 0.19%)</title><rect width=".187%" height="15" x="90.634%" y="357" fill="#DE6A08" fg:w="193" fg:x="93431"/></g><g><title>zdr_malloc (66 samples, 0.06%)</title><rect width=".064%" height="15" x="90.757%" y="341" fill="#D3DC00" fg:w="66" fg:x="93558"/></g><g><title>__GI___libc_malloc (55 samples, 0.05%)</title><rect width=".053%" height="15" x="90.768%" y="325" fill="#E53410" fg:w="55" fg:x="93569"/></g><g><title>tcache_get (29 samples, 0.03%)</title><rect width=".028%" height="15" x="90.793%" y="309" fill="#D49B12" fg:w="29" fg:x="93595"/></g><g><title>zdr_GETATTR4res (433 samples, 0.42%)</title><rect width=".42%" height="15" x="90.496%" y="421" fill="#F2150E" fg:w="433" fg:x="93289"/></g><g><title>zdr_GETATTR4resok (429 samples, 0.42%)</title><rect width=".416%" height="15" x="90.5%" y="405" fill="#DE1330" fg:w="429" fg:x="93293"/></g><g><title>zdr_fattr4 (413 samples, 0.40%)</title><rect width=".401%" height="15" x="90.516%" y="389" fill="#E82D1B" fg:w="413" fg:x="93309"/></g><g><title>zdr_fattr4 (98 samples, 0.10%)</title><rect width=".095%" height="15" x="90.821%" y="373" fill="#F9672A" fg:w="98" fg:x="93624"/></g><g><title>zdr_attrlist4 (77 samples, 0.07%)</title><rect width=".075%" height="15" x="90.842%" y="357" fill="#F65121" fg:w="77" fg:x="93645"/></g><g><title>libnfs_zdr_bytes (35 samples, 0.03%)</title><rect width=".034%" height="15" x="90.882%" y="341" fill="#FC212A" fg:w="35" fg:x="93687"/></g><g><title>zdr_GETATTR4res (516 samples, 0.50%)</title><rect width=".501%" height="15" x="90.439%" y="437" fill="#D1D429" fg:w="516" fg:x="93230"/></g><g><title>zdr_nfsstat4 (24 samples, 0.02%)</title><rect width=".023%" height="15" x="90.916%" y="421" fill="#CF9A06" fg:w="24" fg:x="93722"/></g><g><title>libnfs_zdr_enum (21 samples, 0.02%)</title><rect width=".02%" height="15" x="90.919%" y="405" fill="#DF402F" fg:w="21" fg:x="93725"/></g><g><title>zdr_PUTFH4res (151 samples, 0.15%)</title><rect width=".146%" height="15" x="90.94%" y="437" fill="#D3A126" fg:w="151" fg:x="93746"/></g><g><title>zdr_nfsstat4 (75 samples, 0.07%)</title><rect width=".073%" height="15" x="91.013%" y="421" fill="#DB8A28" fg:w="75" fg:x="93822"/></g><g><title>libnfs_zdr_enum (68 samples, 0.07%)</title><rect width=".066%" height="15" x="91.02%" y="405" fill="#F1E42E" fg:w="68" fg:x="93829"/></g><g><title>libnfs_zdr_u_int (18 samples, 0.02%)</title><rect width=".018%" height="15" x="91.069%" y="389" fill="#DFD126" fg:w="18" fg:x="93879"/></g><g><title>libnfs_zdr_u_int (11 samples, 0.01%)</title><rect width=".011%" height="15" x="91.197%" y="389" fill="#ECA42D" fg:w="11" fg:x="94011"/></g><g><title>zdr_READ4res (116 samples, 0.11%)</title><rect width=".113%" height="15" x="91.149%" y="421" fill="#E70F05" fg:w="116" fg:x="93962"/></g><g><title>zdr_READ4resok (108 samples, 0.10%)</title><rect width=".105%" height="15" x="91.157%" y="405" fill="#FC230F" fg:w="108" fg:x="93970"/></g><g><title>zdr_READ4resok (56 samples, 0.05%)</title><rect width=".054%" height="15" x="91.207%" y="389" fill="#F8B512" fg:w="56" fg:x="94022"/></g><g><title>libnfs_zdr_bytes (54 samples, 0.05%)</title><rect width=".052%" height="15" x="91.209%" y="373" fill="#E9272A" fg:w="54" fg:x="94024"/></g><g><title>libnfs_zdr_array (3,012 samples, 2.92%)</title><rect width="2.922%" height="15" x="88.377%" y="485" fill="#EE6E21" fg:w="3012" fg:x="91104"/><text x="88.627%" y="495.5">li..</text></g><g><title>zdr_nfs_resop4 (1,770 samples, 1.72%)</title><rect width="1.717%" height="15" x="89.582%" y="469" fill="#E9C30A" fg:w="1770" fg:x="92346"/></g><g><title>zdr_nfs_resop4 (1,352 samples, 1.31%)</title><rect width="1.312%" height="15" x="89.987%" y="453" fill="#FE6903" fg:w="1352" fg:x="92764"/></g><g><title>zdr_READ4res (219 samples, 0.21%)</title><rect width=".212%" height="15" x="91.086%" y="437" fill="#DDE109" fg:w="219" fg:x="93897"/></g><g><title>zdr_nfsstat4 (38 samples, 0.04%)</title><rect width=".037%" height="15" x="91.262%" y="421" fill="#E0E32D" fg:w="38" fg:x="94078"/></g><g><title>libnfs_zdr_enum (31 samples, 0.03%)</title><rect width=".03%" height="15" x="91.269%" y="405" fill="#E5C62B" fg:w="31" fg:x="94085"/></g><g><title>libnfs_zdr_u_int (30 samples, 0.03%)</title><rect width=".029%" height="15" x="92.04%" y="453" fill="#CED123" fg:w="30" fg:x="94880"/></g><g><title>zdr_nfsstat4 (795 samples, 0.77%)</title><rect width=".771%" height="15" x="91.299%" y="485" fill="#F5C335" fg:w="795" fg:x="94117"/></g><g><title>libnfs_zdr_enum (731 samples, 0.71%)</title><rect width=".709%" height="15" x="91.362%" y="469" fill="#F05C1A" fg:w="731" fg:x="94181"/></g><g><title>zdr_utf8str_cis (488 samples, 0.47%)</title><rect width=".473%" height="15" x="92.071%" y="485" fill="#CF2817" fg:w="488" fg:x="94912"/></g><g><title>zdr_utf8string (479 samples, 0.46%)</title><rect width=".465%" height="15" x="92.079%" y="469" fill="#DF6F23" fg:w="479" fg:x="94921"/></g><g><title>libnfs_zdr_bytes (468 samples, 0.45%)</title><rect width=".454%" height="15" x="92.09%" y="453" fill="#E5931C" fg:w="468" fg:x="94932"/></g><g><title>libnfs_zdr_u_int (14 samples, 0.01%)</title><rect width=".014%" height="15" x="92.531%" y="437" fill="#D31D1C" fg:w="14" fg:x="95386"/></g><g><title>libnfs_accepted_reply (5,426 samples, 5.26%)</title><rect width="5.264%" height="15" x="87.285%" y="517" fill="#E44821" fg:w="5426" fg:x="89979"/><text x="87.535%" y="527.5">libnfs..</text></g><g><title>zdr_COMPOUND4res (4,550 samples, 4.41%)</title><rect width="4.414%" height="15" x="88.135%" y="501" fill="#CDD61F" fg:w="4550" fg:x="90855"/><text x="88.385%" y="511.5">zdr_C..</text></g><g><title>libnfs_rpc_msg (5,554 samples, 5.39%)</title><rect width="5.388%" height="15" x="87.177%" y="549" fill="#E06F0F" fg:w="5554" fg:x="89867"/><text x="87.427%" y="559.5">libnfs_..</text></g><g><title>libnfs_rpc_reply_body (5,459 samples, 5.30%)</title><rect width="5.296%" height="15" x="87.269%" y="533" fill="#FD151A" fg:w="5459" fg:x="89962"/><text x="87.519%" y="543.5">libnfs..</text></g><g><title>libnfs_zdr_u_int (16 samples, 0.02%)</title><rect width=".015%" height="15" x="92.549%" y="517" fill="#F58B2B" fg:w="16" fg:x="95405"/></g><g><title>libnfs_rpc_msg (5,739 samples, 5.57%)</title><rect width="5.567%" height="15" x="87.053%" y="565" fill="#FCAA07" fg:w="5739" fg:x="89740"/><text x="87.303%" y="575.5">libnfs_..</text></g><g><title>libnfs_zdr_u_int (58 samples, 0.06%)</title><rect width=".056%" height="15" x="92.564%" y="549" fill="#E7760E" fg:w="58" fg:x="95421"/></g><g><title>net_rx_action (11 samples, 0.01%)</title><rect width=".011%" height="15" x="97.7%" y="421" fill="#EE5300" fg:w="11" fg:x="100715"/></g><g><title>mlx5e_napi_poll (11 samples, 0.01%)</title><rect width=".011%" height="15" x="97.7%" y="405" fill="#DD2727" fg:w="11" fg:x="100715"/></g><g><title>el0_irq_naked (16 samples, 0.02%)</title><rect width=".015%" height="15" x="97.697%" y="501" fill="#DE772E" fg:w="16" fg:x="100712"/></g><g><title>gic_handle_irq (16 samples, 0.02%)</title><rect width=".015%" height="15" x="97.697%" y="485" fill="#DEA531" fg:w="16" fg:x="100712"/></g><g><title>__handle_domain_irq (16 samples, 0.02%)</title><rect width=".015%" height="15" x="97.697%" y="469" fill="#DB7134" fg:w="16" fg:x="100712"/></g><g><title>irq_exit (16 samples, 0.02%)</title><rect width=".015%" height="15" x="97.697%" y="453" fill="#D6070F" fg:w="16" fg:x="100712"/></g><g><title>__softirqentry_text_start (16 samples, 0.02%)</title><rect width=".015%" height="15" x="97.697%" y="437" fill="#EB2004" fg:w="16" fg:x="100712"/></g><g><title>net_rx_action (11 samples, 0.01%)</title><rect width=".011%" height="15" x="97.725%" y="389" fill="#EE5A36" fg:w="11" fg:x="100741"/></g><g><title>mlx5e_napi_poll (11 samples, 0.01%)</title><rect width=".011%" height="15" x="97.725%" y="373" fill="#D5D013" fg:w="11" fg:x="100741"/></g><g><title>__GI_memcpy (2,831 samples, 2.75%)</title><rect width="2.746%" height="15" x="94.991%" y="517" fill="#E99C04" fg:w="2831" fg:x="97922"/><text x="95.241%" y="527.5">__..</text></g><g><title>work_pending (25 samples, 0.02%)</title><rect width=".024%" height="15" x="97.713%" y="501" fill="#CFC205" fg:w="25" fg:x="100728"/></g><g><title>do_notify_resume (25 samples, 0.02%)</title><rect width=".024%" height="15" x="97.713%" y="485" fill="#CE6F1E" fg:w="25" fg:x="100728"/></g><g><title>el1_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="97.724%" y="469" fill="#F34636" fg:w="13" fg:x="100740"/></g><g><title>gic_handle_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="97.724%" y="453" fill="#F21C08" fg:w="13" fg:x="100740"/></g><g><title>__handle_domain_irq (13 samples, 0.01%)</title><rect width=".013%" height="15" x="97.724%" y="437" fill="#DB6A12" fg:w="13" fg:x="100740"/></g><g><title>irq_exit (13 samples, 0.01%)</title><rect width=".013%" height="15" x="97.724%" y="421" fill="#F4DE0A" fg:w="13" fg:x="100740"/></g><g><title>__softirqentry_text_start (13 samples, 0.01%)</title><rect width=".013%" height="15" x="97.724%" y="405" fill="#ECB334" fg:w="13" fg:x="100740"/></g><g><title>iovec_write_buf (3,727 samples, 3.62%)</title><rect width="3.615%" height="15" x="94.13%" y="549" fill="#D51727" fg:w="3727" fg:x="97035"/><text x="94.38%" y="559.5">iove..</text></g><g><title>memcpy (3,717 samples, 3.61%)</title><rect width="3.606%" height="15" x="94.14%" y="533" fill="#EE300A" fg:w="3717" fg:x="97045"/><text x="94.39%" y="543.5">memc..</text></g><g><title>mpool2_free (81 samples, 0.08%)</title><rect width=".079%" height="15" x="97.746%" y="549" fill="#FBC417" fg:w="81" fg:x="100762"/></g><g><title>ck_ring_enqueue_spsc (81 samples, 0.08%)</title><rect width=".079%" height="15" x="97.746%" y="533" fill="#FA9818" fg:w="81" fg:x="100762"/></g><g><title>_ck_ring_enqueue_sp (81 samples, 0.08%)</title><rect width=".079%" height="15" x="97.746%" y="517" fill="#D19611" fg:w="81" fg:x="100762"/></g><g><title>ck_pr_md_load_uint (70 samples, 0.07%)</title><rect width=".068%" height="15" x="97.756%" y="501" fill="#EACA22" fg:w="70" fg:x="100773"/></g><g><title>vread_cb (5,369 samples, 5.21%)</title><rect width="5.208%" height="15" x="92.629%" y="565" fill="#FD9435" fg:w="5369" fg:x="95488"/><text x="92.879%" y="575.5">vread_..</text></g><g><title>work_pending (14 samples, 0.01%)</title><rect width=".014%" height="15" x="97.824%" y="549" fill="#DA8110" fg:w="14" fg:x="100843"/></g><g><title>do_notify_resume (14 samples, 0.01%)</title><rect width=".014%" height="15" x="97.824%" y="533" fill="#D85513" fg:w="14" fg:x="100843"/></g><g><title>rpc_process_reply (16,732 samples, 16.23%)</title><rect width="16.231%" height="15" x="81.609%" y="581" fill="#EBE407" fg:w="16732" fg:x="84127"/><text x="81.859%" y="591.5">rpc_process_reply</text></g><g><title>rpc_process_pdu (27,651 samples, 26.82%)</title><rect width="26.823%" height="15" x="71.031%" y="597" fill="#F5AF00" fg:w="27651" fg:x="73223"/><text x="71.281%" y="607.5">rpc_process_pdu</text></g><g><title>work_pending (15 samples, 0.01%)</title><rect width=".015%" height="15" x="97.84%" y="581" fill="#D0A824" fg:w="15" fg:x="100859"/></g><g><title>do_notify_resume (15 samples, 0.01%)</title><rect width=".015%" height="15" x="97.84%" y="565" fill="#F6AB18" fg:w="15" fg:x="100859"/></g><g><title>rpc_read_from_socket (66,851 samples, 64.85%)</title><rect width="64.85%" height="15" x="33.01%" y="613" fill="#D78E18" fg:w="66851" fg:x="34029"/><text x="33.26%" y="623.5">rpc_read_from_socket</text></g><g><title>rpc_timeout_scan (341 samples, 0.33%)</title><rect width=".331%" height="15" x="97.86%" y="613" fill="#FABB07" fg:w="341" fg:x="100880"/></g><g><title>rpc_current_time (321 samples, 0.31%)</title><rect width=".311%" height="15" x="97.879%" y="597" fill="#E44221" fg:w="321" fg:x="100900"/></g><g><title>__GI___clock_gettime (169 samples, 0.16%)</title><rect width=".164%" height="15" x="98.027%" y="581" fill="#EAD715" fg:w="169" fg:x="101052"/></g><g><title>rpc_service (67,776 samples, 65.75%)</title><rect width="65.747%" height="15" x="32.446%" y="629" fill="#DEBF14" fg:w="67776" fg:x="33447"/><text x="32.696%" y="639.5">rpc_service</text></g><g><title>__GI___pthread_mutex_lock (212 samples, 0.21%)</title><rect width=".206%" height="15" x="98.368%" y="613" fill="#F54F36" fg:w="212" fg:x="101404"/></g><g><title>__pthread_mutex_unlock_usercnt (171 samples, 0.17%)</title><rect width=".166%" height="15" x="98.579%" y="613" fill="#F00A25" fg:w="171" fg:x="101621"/></g><g><title>rpc_which_events (583 samples, 0.57%)</title><rect width=".566%" height="15" x="98.193%" y="629" fill="#D6C020" fg:w="583" fg:x="101223"/></g><g><title>nfs_mt_mutex_lock (14 samples, 0.01%)</title><rect width=".014%" height="15" x="98.745%" y="613" fill="#D12436" fg:w="14" fg:x="101792"/></g><g><title>thread_start (98,310 samples, 95.37%)</title><rect width="95.367%" height="15" x="3.392%" y="677" fill="#DC0A0B" fg:w="98310" fg:x="3497"/><text x="3.642%" y="687.5">thread_start</text></g><g><title>start_thread (98,310 samples, 95.37%)</title><rect width="95.367%" height="15" x="3.392%" y="661" fill="#DD6A11" fg:w="98310" fg:x="3497"/><text x="3.642%" y="671.5">start_thread</text></g><g><title>nfs_mt_service_thread (98,310 samples, 95.37%)</title><rect width="95.367%" height="15" x="3.392%" y="645" fill="#FB8E2C" fg:w="98310" fg:x="3497"/><text x="3.642%" y="655.5">nfs_mt_service_thread</text></g><g><title>zdr_GETATTR4res@plt (44 samples, 0.04%)</title><rect width=".043%" height="15" x="98.759%" y="677" fill="#EE0D0F" fg:w="44" fg:x="101807"/></g><g><title>zdr_GETATTR4resok@plt (52 samples, 0.05%)</title><rect width=".05%" height="15" x="98.802%" y="677" fill="#D06B1B" fg:w="52" fg:x="101851"/></g><g><title>zdr_PUTFH4res@plt (155 samples, 0.15%)</title><rect width=".15%" height="15" x="98.852%" y="677" fill="#CD8825" fg:w="155" fg:x="101903"/></g><g><title>zdr_READ4res@plt (140 samples, 0.14%)</title><rect width=".136%" height="15" x="99.003%" y="677" fill="#FACD1B" fg:w="140" fg:x="102058"/></g><g><title>zdr_READ4resok@plt (119 samples, 0.12%)</title><rect width=".115%" height="15" x="99.139%" y="677" fill="#D2502B" fg:w="119" fg:x="102198"/></g><g><title>zdr_attrlist4@plt (72 samples, 0.07%)</title><rect width=".07%" height="15" x="99.254%" y="677" fill="#F7A024" fg:w="72" fg:x="102317"/></g><g><title>zdr_bitmap4@plt (35 samples, 0.03%)</title><rect width=".034%" height="15" x="99.324%" y="677" fill="#EA0D31" fg:w="35" fg:x="102389"/></g><g><title>zdr_fattr4@plt (48 samples, 0.05%)</title><rect width=".047%" height="15" x="99.358%" y="677" fill="#EA7A00" fg:w="48" fg:x="102424"/></g><g><title>zdr_malloc@plt (135 samples, 0.13%)</title><rect width=".131%" height="15" x="99.404%" y="677" fill="#CF9226" fg:w="135" fg:x="102472"/></g><g><title>zdr_nfs_opnum4@plt (171 samples, 0.17%)</title><rect width=".166%" height="15" x="99.535%" y="677" fill="#CFB119" fg:w="171" fg:x="102607"/></g><g><title>zdr_nfsstat4@plt (185 samples, 0.18%)</title><rect width=".179%" height="15" x="99.701%" y="677" fill="#D3B22A" fg:w="185" fg:x="102778"/></g><g><title>zdr_utf8str_cs@plt (56 samples, 0.05%)</title><rect width=".054%" height="15" x="99.881%" y="677" fill="#E64536" fg:w="56" fg:x="102963"/></g><g><title>all (103,086 samples, 100%)</title><rect width="100%" height="15" x="0%" y="709" fill="#D68729" fg:w="103086" fg:x="0"/></g><g><title>virtionfs (103,086 samples, 100.00%)</title><rect width="100%" height="15" x="0%" y="693" fill="#ED4319" fg:w="103086" fg:x="0"/><text x=".25%" y="703.5">virtionfs</text></g><g><title>zdr_utf8string@plt (67 samples, 0.06%)</title><rect width=".065%" height="15" x="99.935%" y="677" fill="#DEBD32" fg:w="67" fg:x="103019"/></g></svg></svg>
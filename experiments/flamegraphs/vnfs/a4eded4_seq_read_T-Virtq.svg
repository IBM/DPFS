<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="885.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="885.00"> </text><svg id="frames" x="10" width="1180" total_samples="212575"><g><title>__GI_memcpy (381 samples, 0.18%)</title><rect x="1.0537%" y="661" width="0.1792%" height="15" fill="rgb(227,0,7)" fg:x="2240" fg:w="381"/><text x="1.3037%" y="671.50"></text></g><g><title>snap_virtio_ctrl_bar_copy (400 samples, 0.19%)</title><rect x="1.0481%" y="677" width="0.1882%" height="15" fill="rgb(217,0,24)" fg:x="2228" fg:w="400"/><text x="1.2981%" y="687.50"></text></g><g><title>__GI___libc_free (24 samples, 0.01%)</title><rect x="1.2824%" y="661" width="0.0113%" height="15" fill="rgb(221,193,54)" fg:x="2726" fg:w="24"/><text x="1.5324%" y="671.50"></text></g><g><title>__GI___memset_generic (103 samples, 0.05%)</title><rect x="1.3473%" y="645" width="0.0485%" height="15" fill="rgb(248,212,6)" fg:x="2864" fg:w="103"/><text x="1.5973%" y="655.50"></text></g><g><title>_int_malloc (114 samples, 0.05%)</title><rect x="1.3976%" y="645" width="0.0536%" height="15" fill="rgb(208,68,35)" fg:x="2971" fg:w="114"/><text x="1.6476%" y="655.50"></text></g><g><title>unlink_chunk (52 samples, 0.02%)</title><rect x="1.4268%" y="629" width="0.0245%" height="15" fill="rgb(232,128,0)" fg:x="3033" fg:w="52"/><text x="1.6768%" y="639.50"></text></g><g><title>__libc_calloc (345 samples, 0.16%)</title><rect x="1.2937%" y="661" width="0.1623%" height="15" fill="rgb(207,160,47)" fg:x="2750" fg:w="345"/><text x="1.5437%" y="671.50"></text></g><g><title>_int_free (143 samples, 0.07%)</title><rect x="1.4560%" y="661" width="0.0673%" height="15" fill="rgb(228,23,34)" fg:x="3095" fg:w="143"/><text x="1.7060%" y="671.50"></text></g><g><title>snap_update_pci_bdf (28 samples, 0.01%)</title><rect x="1.5293%" y="661" width="0.0132%" height="15" fill="rgb(218,30,26)" fg:x="3251" fg:w="28"/><text x="1.7793%" y="671.50"></text></g><g><title>_devx_get64 (233 samples, 0.11%)</title><rect x="1.5580%" y="645" width="0.1096%" height="15" fill="rgb(220,122,19)" fg:x="3312" fg:w="233"/><text x="1.8080%" y="655.50"></text></g><g><title>__bswap_64 (233 samples, 0.11%)</title><rect x="1.5580%" y="629" width="0.1096%" height="15" fill="rgb(250,228,42)" fg:x="3312" fg:w="233"/><text x="1.8080%" y="639.50"></text></g><g><title>snap_virtio_get_queue_attr (253 samples, 0.12%)</title><rect x="1.5491%" y="661" width="0.1190%" height="15" fill="rgb(240,193,28)" fg:x="3293" fg:w="253"/><text x="1.7991%" y="671.50"></text></g><g><title>__fget (25 samples, 0.01%)</title><rect x="1.7758%" y="485" width="0.0118%" height="15" fill="rgb(216,20,37)" fg:x="3775" fg:w="25"/><text x="2.0258%" y="495.50"></text></g><g><title>__fdget (48 samples, 0.02%)</title><rect x="1.7730%" y="517" width="0.0226%" height="15" fill="rgb(206,188,39)" fg:x="3769" fg:w="48"/><text x="2.0230%" y="527.50"></text></g><g><title>__fget_light (48 samples, 0.02%)</title><rect x="1.7730%" y="501" width="0.0226%" height="15" fill="rgb(217,207,13)" fg:x="3769" fg:w="48"/><text x="2.0230%" y="511.50"></text></g><g><title>__srcu_read_lock (53 samples, 0.02%)</title><rect x="1.8535%" y="485" width="0.0249%" height="15" fill="rgb(231,73,38)" fg:x="3940" fg:w="53"/><text x="2.1035%" y="495.50"></text></g><g><title>__check_object_size (40 samples, 0.02%)</title><rect x="1.9814%" y="469" width="0.0188%" height="15" fill="rgb(225,20,46)" fg:x="4212" fg:w="40"/><text x="2.2314%" y="479.50"></text></g><g><title>__kmalloc_node (83 samples, 0.04%)</title><rect x="2.0087%" y="437" width="0.0390%" height="15" fill="rgb(210,31,41)" fg:x="4270" fg:w="83"/><text x="2.2587%" y="447.50"></text></g><g><title>_uverbs_alloc (116 samples, 0.05%)</title><rect x="2.0002%" y="469" width="0.0546%" height="15" fill="rgb(221,200,47)" fg:x="4252" fg:w="116"/><text x="2.2502%" y="479.50"></text></g><g><title>kvmalloc_node (101 samples, 0.05%)</title><rect x="2.0073%" y="453" width="0.0475%" height="15" fill="rgb(226,26,5)" fg:x="4267" fg:w="101"/><text x="2.2573%" y="463.50"></text></g><g><title>kvfree (29 samples, 0.01%)</title><rect x="2.0609%" y="469" width="0.0136%" height="15" fill="rgb(249,33,26)" fg:x="4381" fg:w="29"/><text x="2.3109%" y="479.50"></text></g><g><title>__arch_copy_to_user (61 samples, 0.03%)</title><rect x="2.1150%" y="453" width="0.0287%" height="15" fill="rgb(235,183,28)" fg:x="4496" fg:w="61"/><text x="2.3650%" y="463.50"></text></g><g><title>memcg_kmem_put_cache (22 samples, 0.01%)</title><rect x="2.1583%" y="405" width="0.0103%" height="15" fill="rgb(221,5,38)" fg:x="4588" fg:w="22"/><text x="2.4083%" y="415.50"></text></g><g><title>__kmalloc_node (61 samples, 0.03%)</title><rect x="2.1437%" y="421" width="0.0287%" height="15" fill="rgb(247,18,42)" fg:x="4557" fg:w="61"/><text x="2.3937%" y="431.50"></text></g><g><title>memset (62 samples, 0.03%)</title><rect x="2.1734%" y="421" width="0.0292%" height="15" fill="rgb(241,131,45)" fg:x="4620" fg:w="62"/><text x="2.4234%" y="431.50"></text></g><g><title>_uverbs_alloc (137 samples, 0.06%)</title><rect x="2.1437%" y="453" width="0.0644%" height="15" fill="rgb(249,31,29)" fg:x="4557" fg:w="137"/><text x="2.3937%" y="463.50"></text></g><g><title>kvmalloc_node (137 samples, 0.06%)</title><rect x="2.1437%" y="437" width="0.0644%" height="15" fill="rgb(225,111,53)" fg:x="4557" fg:w="137"/><text x="2.3937%" y="447.50"></text></g><g><title>devx_is_valid_obj_id (51 samples, 0.02%)</title><rect x="2.2218%" y="453" width="0.0240%" height="15" fill="rgb(238,160,17)" fg:x="4723" fg:w="51"/><text x="2.4718%" y="463.50"></text></g><g><title>_mlx5_tout_ms (33 samples, 0.02%)</title><rect x="2.3441%" y="421" width="0.0155%" height="15" fill="rgb(214,148,48)" fg:x="4983" fg:w="33"/><text x="2.5941%" y="431.50"></text></g><g><title>_raw_spin_unlock_irq (152 samples, 0.07%)</title><rect x="2.3662%" y="421" width="0.0715%" height="15" fill="rgb(232,36,49)" fg:x="5030" fg:w="152"/><text x="2.6162%" y="431.50"></text></g><g><title>cmd_ent_put (140 samples, 0.07%)</title><rect x="2.4377%" y="421" width="0.0659%" height="15" fill="rgb(209,103,24)" fg:x="5182" fg:w="140"/><text x="2.6877%" y="431.50"></text></g><g><title>_raw_spin_unlock_irqrestore (139 samples, 0.07%)</title><rect x="2.4382%" y="405" width="0.0654%" height="15" fill="rgb(229,88,8)" fg:x="5183" fg:w="139"/><text x="2.6882%" y="415.50"></text></g><g><title>free_msg (29 samples, 0.01%)</title><rect x="2.5055%" y="421" width="0.0136%" height="15" fill="rgb(213,181,19)" fg:x="5326" fg:w="29"/><text x="2.7555%" y="431.50"></text></g><g><title>_raw_spin_unlock_irqrestore (28 samples, 0.01%)</title><rect x="2.5059%" y="405" width="0.0132%" height="15" fill="rgb(254,191,54)" fg:x="5327" fg:w="28"/><text x="2.7559%" y="415.50"></text></g><g><title>kmem_cache_alloc_trace (32 samples, 0.02%)</title><rect x="2.5229%" y="421" width="0.0151%" height="15" fill="rgb(241,83,37)" fg:x="5363" fg:w="32"/><text x="2.7729%" y="431.50"></text></g><g><title>memcpy (89 samples, 0.04%)</title><rect x="2.5379%" y="421" width="0.0419%" height="15" fill="rgb(233,36,39)" fg:x="5395" fg:w="89"/><text x="2.7879%" y="431.50"></text></g><g><title>dma_pool_alloc (225 samples, 0.11%)</title><rect x="2.5925%" y="405" width="0.1058%" height="15" fill="rgb(226,3,54)" fg:x="5511" fg:w="225"/><text x="2.8425%" y="415.50"></text></g><g><title>_raw_spin_unlock_irqrestore (158 samples, 0.07%)</title><rect x="2.6240%" y="389" width="0.0743%" height="15" fill="rgb(245,192,40)" fg:x="5578" fg:w="158"/><text x="2.8740%" y="399.50"></text></g><g><title>kmem_cache_alloc_trace (51 samples, 0.02%)</title><rect x="2.6983%" y="405" width="0.0240%" height="15" fill="rgb(238,167,29)" fg:x="5736" fg:w="51"/><text x="2.9483%" y="415.50"></text></g><g><title>mlx5_alloc_cmd_msg (370 samples, 0.17%)</title><rect x="2.5798%" y="421" width="0.1741%" height="15" fill="rgb(232,182,51)" fg:x="5484" fg:w="370"/><text x="2.8298%" y="431.50"></text></g><g><title>slabinfo_write (50 samples, 0.02%)</title><rect x="2.7303%" y="405" width="0.0235%" height="15" fill="rgb(231,60,39)" fg:x="5804" fg:w="50"/><text x="2.9803%" y="415.50"></text></g><g><title>dma_pool_free (116 samples, 0.05%)</title><rect x="2.7600%" y="405" width="0.0546%" height="15" fill="rgb(208,69,12)" fg:x="5867" fg:w="116"/><text x="3.0100%" y="415.50"></text></g><g><title>_raw_spin_unlock_irqrestore (100 samples, 0.05%)</title><rect x="2.7675%" y="389" width="0.0470%" height="15" fill="rgb(235,93,37)" fg:x="5883" fg:w="100"/><text x="3.0175%" y="399.50"></text></g><g><title>kfree (42 samples, 0.02%)</title><rect x="2.8145%" y="405" width="0.0198%" height="15" fill="rgb(213,116,39)" fg:x="5983" fg:w="42"/><text x="3.0645%" y="415.50"></text></g><g><title>mlx5_free_cmd_msg (176 samples, 0.08%)</title><rect x="2.7567%" y="421" width="0.0828%" height="15" fill="rgb(222,207,29)" fg:x="5860" fg:w="176"/><text x="3.0067%" y="431.50"></text></g><g><title>queue_work_on (978 samples, 0.46%)</title><rect x="2.8395%" y="421" width="0.4601%" height="15" fill="rgb(206,96,30)" fg:x="6036" fg:w="978"/><text x="3.0895%" y="431.50"></text></g><g><title>_raw_spin_unlock_irq (107 samples, 0.05%)</title><rect x="3.3033%" y="405" width="0.0503%" height="15" fill="rgb(218,138,4)" fg:x="7022" fg:w="107"/><text x="3.5533%" y="415.50"></text></g><g><title>_raw_spin_unlock_irqrestore (176 samples, 0.08%)</title><rect x="3.3630%" y="389" width="0.0828%" height="15" fill="rgb(250,191,14)" fg:x="7149" fg:w="176"/><text x="3.6130%" y="399.50"></text></g><g><title>_raw_spin_unlock_irqrestore (31 samples, 0.01%)</title><rect x="3.4473%" y="357" width="0.0146%" height="15" fill="rgb(239,60,40)" fg:x="7328" fg:w="31"/><text x="3.6973%" y="367.50"></text></g><g><title>del_timer_sync (44 samples, 0.02%)</title><rect x="3.4458%" y="389" width="0.0207%" height="15" fill="rgb(206,27,48)" fg:x="7325" fg:w="44"/><text x="3.6958%" y="399.50"></text></g><g><title>try_to_del_timer_sync (42 samples, 0.02%)</title><rect x="3.4468%" y="373" width="0.0198%" height="15" fill="rgb(225,35,8)" fg:x="7327" fg:w="42"/><text x="3.6968%" y="383.50"></text></g><g><title>cpu_cgroup_attach (24 samples, 0.01%)</title><rect x="3.4896%" y="357" width="0.0113%" height="15" fill="rgb(250,213,24)" fg:x="7418" fg:w="24"/><text x="3.7396%" y="367.50"></text></g><g><title>schedule (425 samples, 0.20%)</title><rect x="3.4755%" y="389" width="0.1999%" height="15" fill="rgb(247,123,22)" fg:x="7388" fg:w="425"/><text x="3.7255%" y="399.50"></text></g><g><title>__schedule (410 samples, 0.19%)</title><rect x="3.4825%" y="373" width="0.1929%" height="15" fill="rgb(231,138,38)" fg:x="7403" fg:w="410"/><text x="3.7325%" y="383.50"></text></g><g><title>finish_task_switch (371 samples, 0.17%)</title><rect x="3.5009%" y="357" width="0.1745%" height="15" fill="rgb(231,145,46)" fg:x="7442" fg:w="371"/><text x="3.7509%" y="367.50"></text></g><g><title>_raw_spin_unlock_irq (364 samples, 0.17%)</title><rect x="3.5042%" y="341" width="0.1712%" height="15" fill="rgb(251,118,11)" fg:x="7449" fg:w="364"/><text x="3.7542%" y="351.50"></text></g><g><title>cmd_exec (3,011 samples, 1.42%)</title><rect x="2.2599%" y="437" width="1.4164%" height="15" fill="rgb(217,147,25)" fg:x="4804" fg:w="3011"/><text x="2.5099%" y="447.50"></text></g><g><title>wait_for_completion_timeout (798 samples, 0.38%)</title><rect x="3.3010%" y="421" width="0.3754%" height="15" fill="rgb(247,81,37)" fg:x="7017" fg:w="798"/><text x="3.5510%" y="431.50"></text></g><g><title>schedule_timeout (673 samples, 0.32%)</title><rect x="3.3598%" y="405" width="0.3166%" height="15" fill="rgb(209,12,38)" fg:x="7142" fg:w="673"/><text x="3.6098%" y="415.50"></text></g><g><title>memcpy (33 samples, 0.02%)</title><rect x="3.6825%" y="437" width="0.0155%" height="15" fill="rgb(227,1,9)" fg:x="7828" fg:w="33"/><text x="3.9325%" y="447.50"></text></g><g><title>mlx5_cmd_do (3,096 samples, 1.46%)</title><rect x="2.2458%" y="453" width="1.4564%" height="15" fill="rgb(248,47,43)" fg:x="4774" fg:w="3096"/><text x="2.4958%" y="463.50"></text></g><g><title>__check_object_size (55 samples, 0.03%)</title><rect x="3.7093%" y="437" width="0.0259%" height="15" fill="rgb(221,10,30)" fg:x="7885" fg:w="55"/><text x="3.9593%" y="447.50"></text></g><g><title>uverbs_copy_to (84 samples, 0.04%)</title><rect x="3.7022%" y="453" width="0.0395%" height="15" fill="rgb(210,229,1)" fg:x="7870" fg:w="84"/><text x="3.9522%" y="463.50"></text></g><g><title>mlx5_ib_handler_MLX5_IB_METHOD_DEVX_OBJ_QUERY (3,531 samples, 1.66%)</title><rect x="2.0811%" y="469" width="1.6611%" height="15" fill="rgb(222,148,37)" fg:x="4424" fg:w="3531"/><text x="2.3311%" y="479.50"></text></g><g><title>uverbs_finalize_object (35 samples, 0.02%)</title><rect x="3.7511%" y="469" width="0.0165%" height="15" fill="rgb(234,67,33)" fg:x="7974" fg:w="35"/><text x="4.0011%" y="479.50"></text></g><g><title>xas_load (58 samples, 0.03%)</title><rect x="3.7987%" y="405" width="0.0273%" height="15" fill="rgb(247,98,35)" fg:x="8075" fg:w="58"/><text x="4.0487%" y="415.50"></text></g><g><title>xa_load (107 samples, 0.05%)</title><rect x="3.7968%" y="421" width="0.0503%" height="15" fill="rgb(247,138,52)" fg:x="8071" fg:w="107"/><text x="4.0468%" y="431.50"></text></g><g><title>xas_start (45 samples, 0.02%)</title><rect x="3.8259%" y="405" width="0.0212%" height="15" fill="rgb(213,79,30)" fg:x="8133" fg:w="45"/><text x="4.0759%" y="415.50"></text></g><g><title>lookup_get_idr_uobject.part.0 (119 samples, 0.06%)</title><rect x="3.7944%" y="437" width="0.0560%" height="15" fill="rgb(246,177,23)" fg:x="8066" fg:w="119"/><text x="4.0444%" y="447.50"></text></g><g><title>ib_uverbs_cmd_verbs (4,207 samples, 1.98%)</title><rect x="1.8906%" y="485" width="1.9791%" height="15" fill="rgb(230,62,27)" fg:x="4019" fg:w="4207"/><text x="2.1406%" y="495.50">i..</text></g><g><title>uverbs_get_uobject_from_file (217 samples, 0.10%)</title><rect x="3.7676%" y="469" width="0.1021%" height="15" fill="rgb(216,154,8)" fg:x="8009" fg:w="217"/><text x="4.0176%" y="479.50"></text></g><g><title>rdma_lookup_get_uobject (191 samples, 0.09%)</title><rect x="3.7798%" y="453" width="0.0899%" height="15" fill="rgb(244,35,45)" fg:x="8035" fg:w="191"/><text x="4.0298%" y="463.50"></text></g><g><title>radix_tree_next_chunk (69 samples, 0.03%)</title><rect x="3.8815%" y="485" width="0.0325%" height="15" fill="rgb(251,115,12)" fg:x="8251" fg:w="69"/><text x="4.1315%" y="495.50"></text></g><g><title>do_vfs_ioctl (4,517 samples, 2.12%)</title><rect x="1.7956%" y="517" width="2.1249%" height="15" fill="rgb(240,54,50)" fg:x="3817" fg:w="4517"/><text x="2.0456%" y="527.50">d..</text></g><g><title>ib_uverbs_ioctl (4,457 samples, 2.10%)</title><rect x="1.8238%" y="501" width="2.0967%" height="15" fill="rgb(233,84,52)" fg:x="3877" fg:w="4457"/><text x="2.0738%" y="511.50">i..</text></g><g><title>ksys_ioctl (4,606 samples, 2.17%)</title><rect x="1.7683%" y="533" width="2.1668%" height="15" fill="rgb(207,117,47)" fg:x="3759" fg:w="4606"/><text x="2.0183%" y="543.50">k..</text></g><g><title>__arm64_sys_ioctl (4,628 samples, 2.18%)</title><rect x="1.7598%" y="549" width="2.1771%" height="15" fill="rgb(249,43,39)" fg:x="3741" fg:w="4628"/><text x="2.0098%" y="559.50">_..</text></g><g><title>el0_svc (4,678 samples, 2.20%)</title><rect x="1.7387%" y="597" width="2.2006%" height="15" fill="rgb(209,38,44)" fg:x="3696" fg:w="4678"/><text x="1.9887%" y="607.50">e..</text></g><g><title>el0_svc_handler (4,678 samples, 2.20%)</title><rect x="1.7387%" y="581" width="2.2006%" height="15" fill="rgb(236,212,23)" fg:x="3696" fg:w="4678"/><text x="1.9887%" y="591.50">e..</text></g><g><title>el0_svc_common.constprop.0 (4,671 samples, 2.20%)</title><rect x="1.7420%" y="565" width="2.1973%" height="15" fill="rgb(242,79,21)" fg:x="3703" fg:w="4671"/><text x="1.9920%" y="575.50">e..</text></g><g><title>[libmlx5.so.1.23.40.0] (4,797 samples, 2.26%)</title><rect x="1.6973%" y="645" width="2.2566%" height="15" fill="rgb(211,96,35)" fg:x="3608" fg:w="4797"/><text x="1.9473%" y="655.50">[..</text></g><g><title>execute_ioctl (4,786 samples, 2.25%)</title><rect x="1.7025%" y="629" width="2.2514%" height="15" fill="rgb(253,215,40)" fg:x="3619" fg:w="4786"/><text x="1.9525%" y="639.50">e..</text></g><g><title>__ioctl (4,725 samples, 2.22%)</title><rect x="1.7312%" y="613" width="2.2227%" height="15" fill="rgb(211,81,21)" fg:x="3680" fg:w="4725"/><text x="1.9812%" y="623.50">_..</text></g><g><title>work_pending (31 samples, 0.01%)</title><rect x="3.9393%" y="597" width="0.0146%" height="15" fill="rgb(208,190,38)" fg:x="8374" fg:w="31"/><text x="4.1893%" y="607.50"></text></g><g><title>do_notify_resume (31 samples, 0.01%)</title><rect x="3.9393%" y="581" width="0.0146%" height="15" fill="rgb(235,213,38)" fg:x="8374" fg:w="31"/><text x="4.1893%" y="591.50"></text></g><g><title>snap_virtio_ctrl_bar_update (6,273 samples, 2.95%)</title><rect x="1.0467%" y="693" width="2.9510%" height="15" fill="rgb(237,122,38)" fg:x="2225" fg:w="6273"/><text x="1.2967%" y="703.50">sna..</text></g><g><title>snap_virtio_fs_query_device (5,869 samples, 2.76%)</title><rect x="1.2367%" y="677" width="2.7609%" height="15" fill="rgb(244,218,35)" fg:x="2629" fg:w="5869"/><text x="1.4867%" y="687.50">sn..</text></g><g><title>snap_virtio_query_device (4,952 samples, 2.33%)</title><rect x="1.6681%" y="661" width="2.3295%" height="15" fill="rgb(240,68,47)" fg:x="3546" fg:w="4952"/><text x="1.9181%" y="671.50">s..</text></g><g><title>mlx5dv_devx_obj_query (79 samples, 0.04%)</title><rect x="3.9605%" y="645" width="0.0372%" height="15" fill="rgb(210,16,53)" fg:x="8419" fg:w="79"/><text x="4.2105%" y="655.50"></text></g><g><title>[libmlx5.so.1.23.40.0] (48 samples, 0.02%)</title><rect x="3.9751%" y="629" width="0.0226%" height="15" fill="rgb(235,124,12)" fg:x="8450" fg:w="48"/><text x="4.2251%" y="639.50"></text></g><g><title>snap_virtio_ctrl_progress (6,305 samples, 2.97%)</title><rect x="1.0378%" y="709" width="2.9660%" height="15" fill="rgb(224,169,11)" fg:x="2206" fg:w="6305"/><text x="1.2878%" y="719.50">sna..</text></g><g><title>snap_virtio_ctrl_pg_io_progress (201 samples, 0.09%)</title><rect x="4.7056%" y="693" width="0.0946%" height="15" fill="rgb(250,166,2)" fg:x="10003" fg:w="201"/><text x="4.9556%" y="703.50"></text></g><g><title>pthread_spin_lock (33,292 samples, 15.66%)</title><rect x="8.4874%" y="677" width="15.6613%" height="15" fill="rgb(242,216,29)" fg:x="18042" fg:w="33292"/><text x="8.7374%" y="687.50">pthread_spin_lock</text></g><g><title>el0_irq_naked (58 samples, 0.03%)</title><rect x="24.1214%" y="661" width="0.0273%" height="15" fill="rgb(230,116,27)" fg:x="51276" fg:w="58"/><text x="24.3714%" y="671.50"></text></g><g><title>gic_handle_irq (58 samples, 0.03%)</title><rect x="24.1214%" y="645" width="0.0273%" height="15" fill="rgb(228,99,48)" fg:x="51276" fg:w="58"/><text x="24.3714%" y="655.50"></text></g><g><title>__handle_domain_irq (58 samples, 0.03%)</title><rect x="24.1214%" y="629" width="0.0273%" height="15" fill="rgb(253,11,6)" fg:x="51276" fg:w="58"/><text x="24.3714%" y="639.50"></text></g><g><title>irq_exit (58 samples, 0.03%)</title><rect x="24.1214%" y="613" width="0.0273%" height="15" fill="rgb(247,143,39)" fg:x="51276" fg:w="58"/><text x="24.3714%" y="623.50"></text></g><g><title>__softirqentry_text_start (58 samples, 0.03%)</title><rect x="24.1214%" y="597" width="0.0273%" height="15" fill="rgb(236,97,10)" fg:x="51276" fg:w="58"/><text x="24.3714%" y="607.50"></text></g><g><title>snap_virtio_fs_ctrl_queue_progress (5,690 samples, 2.68%)</title><rect x="28.2959%" y="661" width="2.6767%" height="15" fill="rgb(233,208,19)" fg:x="60150" fg:w="5690"/><text x="28.5459%" y="671.50">sn..</text></g><g><title>to_fs_ctx (764 samples, 0.36%)</title><rect x="30.6132%" y="645" width="0.3594%" height="15" fill="rgb(216,164,2)" fg:x="65076" fg:w="764"/><text x="30.8632%" y="655.50"></text></g><g><title>el0_irq_naked (24 samples, 0.01%)</title><rect x="38.7962%" y="645" width="0.0113%" height="15" fill="rgb(220,129,5)" fg:x="82471" fg:w="24"/><text x="39.0462%" y="655.50"></text></g><g><title>gic_handle_irq (24 samples, 0.01%)</title><rect x="38.7962%" y="629" width="0.0113%" height="15" fill="rgb(242,17,10)" fg:x="82471" fg:w="24"/><text x="39.0462%" y="639.50"></text></g><g><title>__handle_domain_irq (24 samples, 0.01%)</title><rect x="38.7962%" y="613" width="0.0113%" height="15" fill="rgb(242,107,0)" fg:x="82471" fg:w="24"/><text x="39.0462%" y="623.50"></text></g><g><title>irq_exit (24 samples, 0.01%)</title><rect x="38.7962%" y="597" width="0.0113%" height="15" fill="rgb(251,28,31)" fg:x="82471" fg:w="24"/><text x="39.0462%" y="607.50"></text></g><g><title>__softirqentry_text_start (24 samples, 0.01%)</title><rect x="38.7962%" y="581" width="0.0113%" height="15" fill="rgb(233,223,10)" fg:x="82471" fg:w="24"/><text x="39.0462%" y="591.50"></text></g><g><title>dv_dma_q_get_rx_comp (37 samples, 0.02%)</title><rect x="48.2710%" y="613" width="0.0174%" height="15" fill="rgb(215,21,27)" fg:x="102612" fg:w="37"/><text x="48.5210%" y="623.50"></text></g><g><title>fs_virtq_clear_status (56 samples, 0.03%)</title><rect x="48.4403%" y="581" width="0.0263%" height="15" fill="rgb(232,23,21)" fg:x="102972" fg:w="56"/><text x="48.6903%" y="591.50"></text></g><g><title>fs_virtq_rx_cb (371 samples, 0.17%)</title><rect x="48.2931%" y="613" width="0.1745%" height="15" fill="rgb(244,5,23)" fg:x="102659" fg:w="371"/><text x="48.5431%" y="623.50"></text></g><g><title>virtq_rx_cb_common_set (363 samples, 0.17%)</title><rect x="48.2968%" y="597" width="0.1708%" height="15" fill="rgb(226,81,46)" fg:x="102667" fg:w="363"/><text x="48.5468%" y="607.50"></text></g><g><title>mlx5dv_get_cqe_owner (6,838 samples, 3.22%)</title><rect x="49.4320%" y="597" width="3.2167%" height="15" fill="rgb(247,70,30)" fg:x="105080" fg:w="6838"/><text x="49.6820%" y="607.50">mlx..</text></g><g><title>snap_dv_poll_cq (11,688 samples, 5.50%)</title><rect x="48.4676%" y="613" width="5.4983%" height="15" fill="rgb(212,68,19)" fg:x="103030" fg:w="11688"/><text x="48.7176%" y="623.50">snap_dv..</text></g><g><title>snap_dv_get_cqe (2,800 samples, 1.32%)</title><rect x="52.6487%" y="597" width="1.3172%" height="15" fill="rgb(240,187,13)" fg:x="111918" fg:w="2800"/><text x="52.8987%" y="607.50"></text></g><g><title>memcpy (302 samples, 0.14%)</title><rect x="54.0120%" y="597" width="0.1421%" height="15" fill="rgb(223,113,26)" fg:x="114816" fg:w="302"/><text x="54.2620%" y="607.50"></text></g><g><title>__GI_memcpy (302 samples, 0.14%)</title><rect x="54.0120%" y="581" width="0.1421%" height="15" fill="rgb(206,192,2)" fg:x="114816" fg:w="302"/><text x="54.2620%" y="591.50"></text></g><g><title>snap_dv_ring_tx_db (211 samples, 0.10%)</title><rect x="54.3639%" y="517" width="0.0993%" height="15" fill="rgb(241,108,4)" fg:x="115564" fg:w="211"/><text x="54.6139%" y="527.50"></text></g><g><title>snap_dv_set_comp (104 samples, 0.05%)</title><rect x="54.4631%" y="517" width="0.0489%" height="15" fill="rgb(247,173,49)" fg:x="115775" fg:w="104"/><text x="54.7131%" y="527.50"></text></g><g><title>fs_virtq_sm_read_header (715 samples, 0.34%)</title><rect x="54.1790%" y="581" width="0.3364%" height="15" fill="rgb(224,114,35)" fg:x="115171" fg:w="715"/><text x="54.4290%" y="591.50"></text></g><g><title>snap_dma_q_read (374 samples, 0.18%)</title><rect x="54.3394%" y="565" width="0.1759%" height="15" fill="rgb(245,159,27)" fg:x="115512" fg:w="374"/><text x="54.5894%" y="575.50"></text></g><g><title>gga_dma_q_read (361 samples, 0.17%)</title><rect x="54.3455%" y="549" width="0.1698%" height="15" fill="rgb(245,172,44)" fg:x="115525" fg:w="361"/><text x="54.5955%" y="559.50"></text></g><g><title>do_gga_xfer (361 samples, 0.17%)</title><rect x="54.3455%" y="533" width="0.1698%" height="15" fill="rgb(236,23,11)" fg:x="115525" fg:w="361"/><text x="54.5955%" y="543.50"></text></g><g><title>dv_dma_q_progress_rx (20,583 samples, 9.68%)</title><rect x="44.9512%" y="629" width="9.6827%" height="15" fill="rgb(205,117,38)" fg:x="95555" fg:w="20583"/><text x="45.2012%" y="639.50">dv_dma_q_progr..</text></g><g><title>virtq_rx_cb_common_proc (1,400 samples, 0.66%)</title><rect x="53.9753%" y="613" width="0.6586%" height="15" fill="rgb(237,72,25)" fg:x="114738" fg:w="1400"/><text x="54.2253%" y="623.50"></text></g><g><title>virtq_cmd_progress (1,020 samples, 0.48%)</title><rect x="54.1541%" y="597" width="0.4798%" height="15" fill="rgb(244,70,9)" fg:x="115118" fg:w="1020"/><text x="54.4041%" y="607.50"></text></g><g><title>virtq_sm_fetch_cmd_descs (252 samples, 0.12%)</title><rect x="54.5153%" y="581" width="0.1185%" height="15" fill="rgb(217,125,39)" fg:x="115886" fg:w="252"/><text x="54.7653%" y="591.50"></text></g><g><title>fs_virtq_proc_desc (170 samples, 0.08%)</title><rect x="54.5539%" y="565" width="0.0800%" height="15" fill="rgb(235,36,10)" fg:x="115968" fg:w="170"/><text x="54.8039%" y="575.50"></text></g><g><title>fs_virtq_check_fs_req_format (26 samples, 0.01%)</title><rect x="54.6217%" y="549" width="0.0122%" height="15" fill="rgb(251,123,47)" fg:x="116112" fg:w="26"/><text x="54.8717%" y="559.50"></text></g><g><title>dv_dma_q_get_comp (59 samples, 0.03%)</title><rect x="58.5596%" y="613" width="0.0278%" height="15" fill="rgb(221,13,13)" fg:x="124483" fg:w="59"/><text x="58.8096%" y="623.50"></text></g><g><title>fs_sm_dma_cb (50 samples, 0.02%)</title><rect x="58.5939%" y="613" width="0.0235%" height="15" fill="rgb(238,131,9)" fg:x="124556" fg:w="50"/><text x="58.8439%" y="623.50"></text></g><g><title>mlx5dv_get_cqe_owner (11,986 samples, 5.64%)</title><rect x="59.6044%" y="597" width="5.6385%" height="15" fill="rgb(211,50,8)" fg:x="126704" fg:w="11986"/><text x="59.8544%" y="607.50">mlx5dv_..</text></g><g><title>snap_dv_poll_cq (17,523 samples, 8.24%)</title><rect x="58.6174%" y="613" width="8.2432%" height="15" fill="rgb(245,182,24)" fg:x="124606" fg:w="17523"/><text x="58.8674%" y="623.50">snap_dv_pol..</text></g><g><title>snap_dv_get_cqe (3,439 samples, 1.62%)</title><rect x="65.2429%" y="597" width="1.6178%" height="15" fill="rgb(242,14,37)" fg:x="138690" fg:w="3439"/><text x="65.4929%" y="607.50"></text></g><g><title>fuse_ll_getattr (35 samples, 0.02%)</title><rect x="66.9223%" y="581" width="0.0165%" height="15" fill="rgb(246,228,12)" fg:x="142260" fg:w="35"/><text x="67.1723%" y="591.50"></text></g><g><title>fuse_ll_read (109 samples, 0.05%)</title><rect x="66.9387%" y="581" width="0.0513%" height="15" fill="rgb(213,55,15)" fg:x="142295" fg:w="109"/><text x="67.1887%" y="591.50"></text></g><g><title>mpool2_alloc (80 samples, 0.04%)</title><rect x="67.0074%" y="565" width="0.0376%" height="15" fill="rgb(209,9,3)" fg:x="142441" fg:w="80"/><text x="67.2574%" y="575.50"></text></g><g><title>ck_ring_dequeue_spsc (77 samples, 0.04%)</title><rect x="67.0088%" y="549" width="0.0362%" height="15" fill="rgb(230,59,30)" fg:x="142444" fg:w="77"/><text x="67.2588%" y="559.50"></text></g><g><title>_ck_ring_dequeue_sc (77 samples, 0.04%)</title><rect x="67.0088%" y="533" width="0.0362%" height="15" fill="rgb(209,121,21)" fg:x="142444" fg:w="77"/><text x="67.2588%" y="543.50"></text></g><g><title>memcpy (61 samples, 0.03%)</title><rect x="67.0163%" y="517" width="0.0287%" height="15" fill="rgb(220,109,13)" fg:x="142460" fg:w="61"/><text x="67.2663%" y="527.50"></text></g><g><title>nfs4_op_putfh (78 samples, 0.04%)</title><rect x="67.0479%" y="565" width="0.0367%" height="15" fill="rgb(232,18,1)" fg:x="142527" fg:w="78"/><text x="67.2979%" y="575.50"></text></g><g><title>inode_table_get (74 samples, 0.03%)</title><rect x="67.0497%" y="549" width="0.0348%" height="15" fill="rgb(215,41,42)" fg:x="142531" fg:w="74"/><text x="67.2997%" y="559.50"></text></g><g><title>inode_table_hash (33 samples, 0.02%)</title><rect x="67.0690%" y="533" width="0.0155%" height="15" fill="rgb(224,123,36)" fg:x="142572" fg:w="33"/><text x="67.3190%" y="543.50"></text></g><g><title>__GI___libc_malloc (270 samples, 0.13%)</title><rect x="67.1269%" y="533" width="0.1270%" height="15" fill="rgb(240,125,3)" fg:x="142695" fg:w="270"/><text x="67.3769%" y="543.50"></text></g><g><title>_int_malloc (118 samples, 0.06%)</title><rect x="67.1984%" y="517" width="0.0555%" height="15" fill="rgb(205,98,50)" fg:x="142847" fg:w="118"/><text x="67.4484%" y="527.50"></text></g><g><title>__GI___pthread_mutex_lock (51 samples, 0.02%)</title><rect x="67.2539%" y="533" width="0.0240%" height="15" fill="rgb(205,185,37)" fg:x="142965" fg:w="51"/><text x="67.5039%" y="543.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (74 samples, 0.03%)</title><rect x="67.2788%" y="533" width="0.0348%" height="15" fill="rgb(238,207,15)" fg:x="143018" fg:w="74"/><text x="67.5288%" y="543.50"></text></g><g><title>libnfs_opaque_auth (137 samples, 0.06%)</title><rect x="67.3438%" y="469" width="0.0644%" height="15" fill="rgb(213,199,42)" fg:x="143156" fg:w="137"/><text x="67.5938%" y="479.50"></text></g><g><title>libnfs_zdr_bytes (133 samples, 0.06%)</title><rect x="67.3456%" y="453" width="0.0626%" height="15" fill="rgb(235,201,11)" fg:x="143160" fg:w="133"/><text x="67.5956%" y="463.50"></text></g><g><title>memcpy (63 samples, 0.03%)</title><rect x="67.3786%" y="437" width="0.0296%" height="15" fill="rgb(207,46,11)" fg:x="143230" fg:w="63"/><text x="67.6286%" y="447.50"></text></g><g><title>__GI_memcpy (49 samples, 0.02%)</title><rect x="67.3852%" y="421" width="0.0231%" height="15" fill="rgb(241,35,35)" fg:x="143244" fg:w="49"/><text x="67.6352%" y="431.50"></text></g><g><title>libnfs_opaque_auth (170 samples, 0.08%)</title><rect x="67.3334%" y="485" width="0.0800%" height="15" fill="rgb(243,32,47)" fg:x="143134" fg:w="170"/><text x="67.5834%" y="495.50"></text></g><g><title>libnfs_rpc_msg (213 samples, 0.10%)</title><rect x="67.3235%" y="517" width="0.1002%" height="15" fill="rgb(247,202,23)" fg:x="143113" fg:w="213"/><text x="67.5735%" y="527.50"></text></g><g><title>libnfs_rpc_call_body (213 samples, 0.10%)</title><rect x="67.3235%" y="501" width="0.1002%" height="15" fill="rgb(219,102,11)" fg:x="143113" fg:w="213"/><text x="67.5735%" y="511.50"></text></g><g><title>libnfs_zdr_u_int (22 samples, 0.01%)</title><rect x="67.4134%" y="485" width="0.0103%" height="15" fill="rgb(243,110,44)" fg:x="143304" fg:w="22"/><text x="67.6634%" y="495.50"></text></g><g><title>libnfs_rpc_msg (264 samples, 0.12%)</title><rect x="67.3137%" y="533" width="0.1242%" height="15" fill="rgb(222,74,54)" fg:x="143092" fg:w="264"/><text x="67.5637%" y="543.50"></text></g><g><title>libnfs_zdr_u_int (30 samples, 0.01%)</title><rect x="67.4237%" y="517" width="0.0141%" height="15" fill="rgb(216,99,12)" fg:x="143326" fg:w="30"/><text x="67.6737%" y="527.50"></text></g><g><title>memset (49 samples, 0.02%)</title><rect x="67.4402%" y="533" width="0.0231%" height="15" fill="rgb(226,22,26)" fg:x="143361" fg:w="49"/><text x="67.6902%" y="543.50"></text></g><g><title>__GI___memset_generic (47 samples, 0.02%)</title><rect x="67.4411%" y="517" width="0.0221%" height="15" fill="rgb(217,163,10)" fg:x="143363" fg:w="47"/><text x="67.6911%" y="527.50"></text></g><g><title>rpc_allocate_pdu2 (799 samples, 0.38%)</title><rect x="67.0897%" y="549" width="0.3759%" height="15" fill="rgb(213,25,53)" fg:x="142616" fg:w="799"/><text x="67.3397%" y="559.50"></text></g><g><title>__GI___pthread_mutex_lock (23 samples, 0.01%)</title><rect x="67.4821%" y="533" width="0.0108%" height="15" fill="rgb(252,105,26)" fg:x="143450" fg:w="23"/><text x="67.7321%" y="543.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (33 samples, 0.02%)</title><rect x="67.4929%" y="533" width="0.0155%" height="15" fill="rgb(220,39,43)" fg:x="143473" fg:w="33"/><text x="67.7429%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (32 samples, 0.02%)</title><rect x="67.5329%" y="517" width="0.0151%" height="15" fill="rgb(229,68,48)" fg:x="143558" fg:w="32"/><text x="67.7829%" y="527.50"></text></g><g><title>__pthread_enable_asynccancel (35 samples, 0.02%)</title><rect x="67.6241%" y="469" width="0.0165%" height="15" fill="rgb(252,8,32)" fg:x="143752" fg:w="35"/><text x="67.8741%" y="479.50"></text></g><g><title>fput (24 samples, 0.01%)</title><rect x="67.7958%" y="389" width="0.0113%" height="15" fill="rgb(223,20,43)" fg:x="144117" fg:w="24"/><text x="68.0458%" y="399.50"></text></g><g><title>iov_iter_init (26 samples, 0.01%)</title><rect x="67.8227%" y="389" width="0.0122%" height="15" fill="rgb(229,81,49)" fg:x="144174" fg:w="26"/><text x="68.0727%" y="399.50"></text></g><g><title>_raw_read_lock_irqsave (31 samples, 0.01%)</title><rect x="67.8998%" y="325" width="0.0146%" height="15" fill="rgb(236,28,36)" fg:x="144338" fg:w="31"/><text x="68.1498%" y="335.50"></text></g><g><title>lock_sock_nested (75 samples, 0.04%)</title><rect x="67.8815%" y="341" width="0.0353%" height="15" fill="rgb(249,185,26)" fg:x="144299" fg:w="75"/><text x="68.1315%" y="351.50"></text></g><g><title>_raw_read_lock_irqsave (22 samples, 0.01%)</title><rect x="67.9257%" y="325" width="0.0103%" height="15" fill="rgb(249,174,33)" fg:x="144393" fg:w="22"/><text x="68.1757%" y="335.50"></text></g><g><title>_raw_spin_unlock_bh (23 samples, 0.01%)</title><rect x="67.9370%" y="325" width="0.0108%" height="15" fill="rgb(233,201,37)" fg:x="144417" fg:w="23"/><text x="68.1870%" y="335.50"></text></g><g><title>release_sock (79 samples, 0.04%)</title><rect x="67.9167%" y="341" width="0.0372%" height="15" fill="rgb(221,78,26)" fg:x="144374" fg:w="79"/><text x="68.1667%" y="351.50"></text></g><g><title>tcp_get_timestamping_opt_stats (23 samples, 0.01%)</title><rect x="67.9713%" y="341" width="0.0108%" height="15" fill="rgb(250,127,30)" fg:x="144490" fg:w="23"/><text x="68.2213%" y="351.50"></text></g><g><title>__check_object_size (128 samples, 0.06%)</title><rect x="68.1303%" y="325" width="0.0602%" height="15" fill="rgb(230,49,44)" fg:x="144828" fg:w="128"/><text x="68.3803%" y="335.50"></text></g><g><title>pfn_valid (83 samples, 0.04%)</title><rect x="68.1515%" y="309" width="0.0390%" height="15" fill="rgb(229,67,23)" fg:x="144873" fg:w="83"/><text x="68.4015%" y="319.50"></text></g><g><title>memblock_is_map_memory (28 samples, 0.01%)</title><rect x="68.1773%" y="293" width="0.0132%" height="15" fill="rgb(249,83,47)" fg:x="144928" fg:w="28"/><text x="68.4273%" y="303.50"></text></g><g><title>__arch_copy_from_user (69 samples, 0.03%)</title><rect x="68.2013%" y="309" width="0.0325%" height="15" fill="rgb(215,43,3)" fg:x="144979" fg:w="69"/><text x="68.4513%" y="319.50"></text></g><g><title>_copy_from_iter_full (113 samples, 0.05%)</title><rect x="68.1962%" y="325" width="0.0532%" height="15" fill="rgb(238,154,13)" fg:x="144968" fg:w="113"/><text x="68.4462%" y="335.50"></text></g><g><title>iov_iter_advance (29 samples, 0.01%)</title><rect x="68.2357%" y="309" width="0.0136%" height="15" fill="rgb(219,56,2)" fg:x="145052" fg:w="29"/><text x="68.4857%" y="319.50"></text></g><g><title>sk_page_frag_refill (31 samples, 0.01%)</title><rect x="68.2686%" y="325" width="0.0146%" height="15" fill="rgb(233,0,4)" fg:x="145122" fg:w="31"/><text x="68.5186%" y="335.50"></text></g><g><title>skb_page_frag_refill (27 samples, 0.01%)</title><rect x="68.2705%" y="309" width="0.0127%" height="15" fill="rgb(235,30,7)" fg:x="145126" fg:w="27"/><text x="68.5205%" y="319.50"></text></g><g><title>__slab_alloc.isra.0 (54 samples, 0.03%)</title><rect x="68.4069%" y="261" width="0.0254%" height="15" fill="rgb(250,79,13)" fg:x="145416" fg:w="54"/><text x="68.6569%" y="271.50"></text></g><g><title>kmalloc_slab (26 samples, 0.01%)</title><rect x="68.4323%" y="261" width="0.0122%" height="15" fill="rgb(211,146,34)" fg:x="145470" fg:w="26"/><text x="68.6823%" y="271.50"></text></g><g><title>memcg_kmem_put_cache (127 samples, 0.06%)</title><rect x="68.4445%" y="261" width="0.0597%" height="15" fill="rgb(228,22,38)" fg:x="145496" fg:w="127"/><text x="68.6945%" y="271.50"></text></g><g><title>__kmalloc_node_track_caller (324 samples, 0.15%)</title><rect x="68.3608%" y="277" width="0.1524%" height="15" fill="rgb(235,168,5)" fg:x="145318" fg:w="324"/><text x="68.6108%" y="287.50"></text></g><g><title>memset (28 samples, 0.01%)</title><rect x="68.5203%" y="277" width="0.0132%" height="15" fill="rgb(221,155,16)" fg:x="145657" fg:w="28"/><text x="68.7703%" y="287.50"></text></g><g><title>__kmalloc_reserve.isra.0 (398 samples, 0.19%)</title><rect x="68.3547%" y="293" width="0.1872%" height="15" fill="rgb(215,215,53)" fg:x="145305" fg:w="398"/><text x="68.6047%" y="303.50"></text></g><g><title>memcg_kmem_put_cache (104 samples, 0.05%)</title><rect x="68.6163%" y="277" width="0.0489%" height="15" fill="rgb(223,4,10)" fg:x="145861" fg:w="104"/><text x="68.8663%" y="287.50"></text></g><g><title>kmem_cache_alloc_node (294 samples, 0.14%)</title><rect x="68.5466%" y="293" width="0.1383%" height="15" fill="rgb(234,103,6)" fg:x="145713" fg:w="294"/><text x="68.7966%" y="303.50"></text></g><g><title>slab_pre_alloc_hook (40 samples, 0.02%)</title><rect x="68.6661%" y="277" width="0.0188%" height="15" fill="rgb(227,97,0)" fg:x="145967" fg:w="40"/><text x="68.9161%" y="287.50"></text></g><g><title>ksize (47 samples, 0.02%)</title><rect x="68.6849%" y="293" width="0.0221%" height="15" fill="rgb(234,150,53)" fg:x="146007" fg:w="47"/><text x="68.9349%" y="303.50"></text></g><g><title>__ksize (44 samples, 0.02%)</title><rect x="68.6863%" y="277" width="0.0207%" height="15" fill="rgb(228,201,54)" fg:x="146010" fg:w="44"/><text x="68.9363%" y="287.50"></text></g><g><title>memset (46 samples, 0.02%)</title><rect x="68.7160%" y="293" width="0.0216%" height="15" fill="rgb(222,22,37)" fg:x="146073" fg:w="46"/><text x="68.9660%" y="303.50"></text></g><g><title>__alloc_skb (917 samples, 0.43%)</title><rect x="68.3251%" y="309" width="0.4314%" height="15" fill="rgb(237,53,32)" fg:x="145242" fg:w="917"/><text x="68.5751%" y="319.50"></text></g><g><title>slabinfo_write (37 samples, 0.02%)</title><rect x="68.7390%" y="293" width="0.0174%" height="15" fill="rgb(233,25,53)" fg:x="146122" fg:w="37"/><text x="68.9890%" y="303.50"></text></g><g><title>sk_stream_alloc_skb (1,021 samples, 0.48%)</title><rect x="68.2832%" y="325" width="0.4803%" height="15" fill="rgb(210,40,34)" fg:x="145153" fg:w="1021"/><text x="68.5332%" y="335.50"></text></g><g><title>skb_entail (55 samples, 0.03%)</title><rect x="68.7635%" y="325" width="0.0259%" height="15" fill="rgb(241,220,44)" fg:x="146174" fg:w="55"/><text x="69.0135%" y="335.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 0.01%)</title><rect x="68.8689%" y="277" width="0.0103%" height="15" fill="rgb(235,28,35)" fg:x="146398" fg:w="22"/><text x="69.1189%" y="287.50"></text></g><g><title>ktime_get (54 samples, 0.03%)</title><rect x="68.8792%" y="277" width="0.0254%" height="15" fill="rgb(210,56,17)" fg:x="146420" fg:w="54"/><text x="69.1292%" y="287.50"></text></g><g><title>arch_counter_get_cntpct (23 samples, 0.01%)</title><rect x="68.8938%" y="261" width="0.0108%" height="15" fill="rgb(224,130,29)" fg:x="146451" fg:w="23"/><text x="69.1438%" y="271.50"></text></g><g><title>tcp_push (239 samples, 0.11%)</title><rect x="68.7992%" y="325" width="0.1124%" height="15" fill="rgb(235,212,8)" fg:x="146250" fg:w="239"/><text x="69.0492%" y="335.50"></text></g><g><title>__tcp_push_pending_frames (202 samples, 0.10%)</title><rect x="68.8167%" y="309" width="0.0950%" height="15" fill="rgb(223,33,50)" fg:x="146287" fg:w="202"/><text x="69.0667%" y="319.50"></text></g><g><title>tcp_write_xmit (183 samples, 0.09%)</title><rect x="68.8256%" y="293" width="0.0861%" height="15" fill="rgb(219,149,13)" fg:x="146306" fg:w="183"/><text x="69.0756%" y="303.50"></text></g><g><title>tcp_rate_check_app_limited (176 samples, 0.08%)</title><rect x="68.9117%" y="325" width="0.0828%" height="15" fill="rgb(250,156,29)" fg:x="146489" fg:w="176"/><text x="69.1617%" y="335.50"></text></g><g><title>ipv4_mtu (27 samples, 0.01%)</title><rect x="69.0232%" y="293" width="0.0127%" height="15" fill="rgb(216,193,19)" fg:x="146726" fg:w="27"/><text x="69.2732%" y="303.50"></text></g><g><title>tcp_current_mss (73 samples, 0.03%)</title><rect x="69.0044%" y="309" width="0.0343%" height="15" fill="rgb(216,135,14)" fg:x="146686" fg:w="73"/><text x="69.2544%" y="319.50"></text></g><g><title>tcp_send_mss (95 samples, 0.04%)</title><rect x="68.9945%" y="325" width="0.0447%" height="15" fill="rgb(241,47,5)" fg:x="146665" fg:w="95"/><text x="69.2445%" y="335.50"></text></g><g><title>tcp_sendmsg_locked (2,221 samples, 1.04%)</title><rect x="67.9953%" y="341" width="1.0448%" height="15" fill="rgb(233,42,35)" fg:x="144541" fg:w="2221"/><text x="68.2453%" y="351.50"></text></g><g><title>tcp_stream_memory_free (24 samples, 0.01%)</title><rect x="69.0401%" y="341" width="0.0113%" height="15" fill="rgb(231,13,6)" fg:x="146762" fg:w="24"/><text x="69.2901%" y="351.50"></text></g><g><title>tcp_sendmsg (2,514 samples, 1.18%)</title><rect x="67.8716%" y="357" width="1.1826%" height="15" fill="rgb(207,181,40)" fg:x="144278" fg:w="2514"/><text x="68.1216%" y="367.50"></text></g><g><title>inet_sendmsg (2,550 samples, 1.20%)</title><rect x="67.8551%" y="373" width="1.1996%" height="15" fill="rgb(254,173,49)" fg:x="144243" fg:w="2550"/><text x="68.1051%" y="383.50"></text></g><g><title>security_socket_sendmsg (103 samples, 0.05%)</title><rect x="69.0547%" y="373" width="0.0485%" height="15" fill="rgb(221,1,38)" fg:x="146793" fg:w="103"/><text x="69.3047%" y="383.50"></text></g><g><title>apparmor_socket_sendmsg (63 samples, 0.03%)</title><rect x="69.0735%" y="357" width="0.0296%" height="15" fill="rgb(206,124,46)" fg:x="146833" fg:w="63"/><text x="69.3235%" y="367.50"></text></g><g><title>aa_sk_perm (45 samples, 0.02%)</title><rect x="69.0820%" y="341" width="0.0212%" height="15" fill="rgb(249,21,11)" fg:x="146851" fg:w="45"/><text x="69.3320%" y="351.50"></text></g><g><title>sock_sendmsg (2,681 samples, 1.26%)</title><rect x="67.8433%" y="389" width="1.2612%" height="15" fill="rgb(222,201,40)" fg:x="144218" fg:w="2681"/><text x="68.0933%" y="399.50"></text></g><g><title>__fget (48 samples, 0.02%)</title><rect x="69.1351%" y="341" width="0.0226%" height="15" fill="rgb(235,61,29)" fg:x="146964" fg:w="48"/><text x="69.3851%" y="351.50"></text></g><g><title>__rcu_read_lock (29 samples, 0.01%)</title><rect x="69.1577%" y="341" width="0.0136%" height="15" fill="rgb(219,207,3)" fg:x="147012" fg:w="29"/><text x="69.4077%" y="351.50"></text></g><g><title>__fdget (158 samples, 0.07%)</title><rect x="69.1191%" y="373" width="0.0743%" height="15" fill="rgb(222,56,46)" fg:x="146930" fg:w="158"/><text x="69.3691%" y="383.50"></text></g><g><title>__fget_light (146 samples, 0.07%)</title><rect x="69.1248%" y="357" width="0.0687%" height="15" fill="rgb(239,76,54)" fg:x="146942" fg:w="146"/><text x="69.3748%" y="367.50"></text></g><g><title>f_dupfd (44 samples, 0.02%)</title><rect x="69.1728%" y="341" width="0.0207%" height="15" fill="rgb(231,124,27)" fg:x="147044" fg:w="44"/><text x="69.4228%" y="351.50"></text></g><g><title>__sys_sendto (3,036 samples, 1.43%)</title><rect x="67.7714%" y="405" width="1.4282%" height="15" fill="rgb(249,195,6)" fg:x="144065" fg:w="3036"/><text x="68.0214%" y="415.50"></text></g><g><title>sockfd_lookup_light (202 samples, 0.10%)</title><rect x="69.1046%" y="389" width="0.0950%" height="15" fill="rgb(237,174,47)" fg:x="146899" fg:w="202"/><text x="69.3546%" y="399.50"></text></g><g><title>import_single_range (44 samples, 0.02%)</title><rect x="69.1996%" y="405" width="0.0207%" height="15" fill="rgb(206,201,31)" fg:x="147101" fg:w="44"/><text x="69.4496%" y="415.50"></text></g><g><title>__libc_send (3,573 samples, 1.68%)</title><rect x="67.5526%" y="501" width="1.6808%" height="15" fill="rgb(231,57,52)" fg:x="143600" fg:w="3573"/><text x="67.8026%" y="511.50"></text></g><g><title>__libc_send (3,532 samples, 1.66%)</title><rect x="67.5719%" y="485" width="1.6615%" height="15" fill="rgb(248,177,22)" fg:x="143641" fg:w="3532"/><text x="67.8219%" y="495.50"></text></g><g><title>el0_svc (3,386 samples, 1.59%)</title><rect x="67.6406%" y="469" width="1.5928%" height="15" fill="rgb(215,211,37)" fg:x="143787" fg:w="3386"/><text x="67.8906%" y="479.50"></text></g><g><title>el0_svc_handler (3,386 samples, 1.59%)</title><rect x="67.6406%" y="453" width="1.5928%" height="15" fill="rgb(241,128,51)" fg:x="143787" fg:w="3386"/><text x="67.8906%" y="463.50"></text></g><g><title>el0_svc_common.constprop.0 (3,376 samples, 1.59%)</title><rect x="67.6453%" y="437" width="1.5881%" height="15" fill="rgb(227,165,31)" fg:x="143797" fg:w="3376"/><text x="67.8953%" y="447.50"></text></g><g><title>__arm64_sys_sendto (3,115 samples, 1.47%)</title><rect x="67.7681%" y="421" width="1.4654%" height="15" fill="rgb(228,167,24)" fg:x="144058" fg:w="3115"/><text x="68.0181%" y="431.50"></text></g><g><title>sockfd_lookup_light (26 samples, 0.01%)</title><rect x="69.2212%" y="405" width="0.0122%" height="15" fill="rgb(228,143,12)" fg:x="147147" fg:w="26"/><text x="69.4712%" y="415.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (80 samples, 0.04%)</title><rect x="69.2334%" y="501" width="0.0376%" height="15" fill="rgb(249,149,8)" fg:x="147173" fg:w="80"/><text x="69.4834%" y="511.50"></text></g><g><title>rpc_enqueue (82 samples, 0.04%)</title><rect x="69.2711%" y="501" width="0.0386%" height="15" fill="rgb(243,35,44)" fg:x="147253" fg:w="82"/><text x="69.5211%" y="511.50"></text></g><g><title>rpc_queue_pdu (3,922 samples, 1.84%)</title><rect x="67.4656%" y="549" width="1.8450%" height="15" fill="rgb(246,89,9)" fg:x="143415" fg:w="3922"/><text x="67.7156%" y="559.50">r..</text></g><g><title>rpc_write_to_socket (3,816 samples, 1.80%)</title><rect x="67.5155%" y="533" width="1.7951%" height="15" fill="rgb(233,213,13)" fg:x="143521" fg:w="3816"/><text x="67.7655%" y="543.50">r..</text></g><g><title>rpc_write_to_socket (3,746 samples, 1.76%)</title><rect x="67.5484%" y="517" width="1.7622%" height="15" fill="rgb(233,141,41)" fg:x="143591" fg:w="3746"/><text x="67.7984%" y="527.50"></text></g><g><title>zdr_GETATTR4args (70 samples, 0.03%)</title><rect x="69.3882%" y="485" width="0.0329%" height="15" fill="rgb(239,167,4)" fg:x="147502" fg:w="70"/><text x="69.6382%" y="495.50"></text></g><g><title>zdr_bitmap4 (57 samples, 0.03%)</title><rect x="69.3943%" y="469" width="0.0268%" height="15" fill="rgb(209,217,16)" fg:x="147515" fg:w="57"/><text x="69.6443%" y="479.50"></text></g><g><title>libnfs_zdr_array (39 samples, 0.02%)</title><rect x="69.4028%" y="453" width="0.0183%" height="15" fill="rgb(219,88,35)" fg:x="147533" fg:w="39"/><text x="69.6528%" y="463.50"></text></g><g><title>libnfs_zdr_u_int (22 samples, 0.01%)</title><rect x="69.4108%" y="437" width="0.0103%" height="15" fill="rgb(220,193,23)" fg:x="147550" fg:w="22"/><text x="69.6608%" y="447.50"></text></g><g><title>zdr_nfs_argop4 (184 samples, 0.09%)</title><rect x="69.3675%" y="501" width="0.0866%" height="15" fill="rgb(230,90,52)" fg:x="147458" fg:w="184"/><text x="69.6175%" y="511.50"></text></g><g><title>zdr_PUTFH4args (70 samples, 0.03%)</title><rect x="69.4211%" y="485" width="0.0329%" height="15" fill="rgb(252,106,19)" fg:x="147572" fg:w="70"/><text x="69.6711%" y="495.50"></text></g><g><title>zdr_nfs_fh4 (48 samples, 0.02%)</title><rect x="69.4315%" y="469" width="0.0226%" height="15" fill="rgb(206,74,20)" fg:x="147594" fg:w="48"/><text x="69.6815%" y="479.50"></text></g><g><title>libnfs_zdr_bytes (46 samples, 0.02%)</title><rect x="69.4324%" y="453" width="0.0216%" height="15" fill="rgb(230,138,44)" fg:x="147596" fg:w="46"/><text x="69.6824%" y="463.50"></text></g><g><title>libnfs_zdr_array (351 samples, 0.17%)</title><rect x="69.3186%" y="533" width="0.1651%" height="15" fill="rgb(235,182,43)" fg:x="147354" fg:w="351"/><text x="69.5686%" y="543.50"></text></g><g><title>zdr_nfs_argop4 (304 samples, 0.14%)</title><rect x="69.3407%" y="517" width="0.1430%" height="15" fill="rgb(242,16,51)" fg:x="147401" fg:w="304"/><text x="69.5907%" y="527.50"></text></g><g><title>zdr_nfs_opnum4 (63 samples, 0.03%)</title><rect x="69.4541%" y="501" width="0.0296%" height="15" fill="rgb(248,9,4)" fg:x="147642" fg:w="63"/><text x="69.7041%" y="511.50"></text></g><g><title>libnfs_zdr_enum (57 samples, 0.03%)</title><rect x="69.4569%" y="485" width="0.0268%" height="15" fill="rgb(210,31,22)" fg:x="147648" fg:w="57"/><text x="69.7069%" y="495.50"></text></g><g><title>zdr_utf8str_cis (77 samples, 0.04%)</title><rect x="69.4861%" y="533" width="0.0362%" height="15" fill="rgb(239,54,39)" fg:x="147710" fg:w="77"/><text x="69.7361%" y="543.50"></text></g><g><title>zdr_utf8string (69 samples, 0.03%)</title><rect x="69.4898%" y="517" width="0.0325%" height="15" fill="rgb(230,99,41)" fg:x="147718" fg:w="69"/><text x="69.7398%" y="527.50"></text></g><g><title>libnfs_zdr_bytes (58 samples, 0.03%)</title><rect x="69.4950%" y="501" width="0.0273%" height="15" fill="rgb(253,106,12)" fg:x="147729" fg:w="58"/><text x="69.7450%" y="511.50"></text></g><g><title>memcpy (32 samples, 0.02%)</title><rect x="69.5072%" y="485" width="0.0151%" height="15" fill="rgb(213,46,41)" fg:x="147755" fg:w="32"/><text x="69.7572%" y="495.50"></text></g><g><title>__GI_memcpy (32 samples, 0.02%)</title><rect x="69.5072%" y="469" width="0.0151%" height="15" fill="rgb(215,133,35)" fg:x="147755" fg:w="32"/><text x="69.7572%" y="479.50"></text></g><g><title>getattr (5,407 samples, 2.54%)</title><rect x="66.9900%" y="581" width="2.5436%" height="15" fill="rgb(213,28,5)" fg:x="142404" fg:w="5407"/><text x="67.2400%" y="591.50">ge..</text></g><g><title>rpc_nfs4_compound_async2 (5,204 samples, 2.45%)</title><rect x="67.0855%" y="565" width="2.4481%" height="15" fill="rgb(215,77,49)" fg:x="142607" fg:w="5204"/><text x="67.3355%" y="575.50">rp..</text></g><g><title>zdr_COMPOUND4args (474 samples, 0.22%)</title><rect x="69.3106%" y="549" width="0.2230%" height="15" fill="rgb(248,100,22)" fg:x="147337" fg:w="474"/><text x="69.5606%" y="559.50"></text></g><g><title>zdr_utf8str_cs (24 samples, 0.01%)</title><rect x="69.5223%" y="533" width="0.0113%" height="15" fill="rgb(208,67,9)" fg:x="147787" fg:w="24"/><text x="69.7723%" y="543.50"></text></g><g><title>set_iovecs (90 samples, 0.04%)</title><rect x="69.5336%" y="581" width="0.0423%" height="15" fill="rgb(219,133,21)" fg:x="147811" fg:w="90"/><text x="69.7836%" y="591.50"></text></g><g><title>virtio_fs_ctrl_fs_dev_handle_req (38 samples, 0.02%)</title><rect x="69.5759%" y="581" width="0.0179%" height="15" fill="rgb(246,46,29)" fg:x="147901" fg:w="38"/><text x="69.8259%" y="591.50"></text></g><g><title>virtiofs_emu_ll_handle_fuse_req (284 samples, 0.13%)</title><rect x="69.5938%" y="581" width="0.1336%" height="15" fill="rgb(246,185,52)" fg:x="147939" fg:w="284"/><text x="69.8438%" y="591.50"></text></g><g><title>ck_pr_md_load_uint (75 samples, 0.04%)</title><rect x="69.7415%" y="517" width="0.0353%" height="15" fill="rgb(252,136,11)" fg:x="148253" fg:w="75"/><text x="69.9915%" y="527.50"></text></g><g><title>mpool2_alloc (89 samples, 0.04%)</title><rect x="69.7377%" y="565" width="0.0419%" height="15" fill="rgb(219,138,53)" fg:x="148245" fg:w="89"/><text x="69.9877%" y="575.50"></text></g><g><title>ck_ring_dequeue_spsc (88 samples, 0.04%)</title><rect x="69.7382%" y="549" width="0.0414%" height="15" fill="rgb(211,51,23)" fg:x="148246" fg:w="88"/><text x="69.9882%" y="559.50"></text></g><g><title>_ck_ring_dequeue_sc (88 samples, 0.04%)</title><rect x="69.7382%" y="533" width="0.0414%" height="15" fill="rgb(247,221,28)" fg:x="148246" fg:w="88"/><text x="69.9882%" y="543.50"></text></g><g><title>nfs4_op_putfh_open (118 samples, 0.06%)</title><rect x="69.7796%" y="565" width="0.0555%" height="15" fill="rgb(251,222,45)" fg:x="148334" fg:w="118"/><text x="70.0296%" y="575.50"></text></g><g><title>inode_table_get (115 samples, 0.05%)</title><rect x="69.7810%" y="549" width="0.0541%" height="15" fill="rgb(217,162,53)" fg:x="148337" fg:w="115"/><text x="70.0310%" y="559.50"></text></g><g><title>__GI___libc_malloc (657 samples, 0.31%)</title><rect x="69.9325%" y="533" width="0.3091%" height="15" fill="rgb(229,93,14)" fg:x="148659" fg:w="657"/><text x="70.1825%" y="543.50"></text></g><g><title>_int_malloc (351 samples, 0.17%)</title><rect x="70.0764%" y="517" width="0.1651%" height="15" fill="rgb(209,67,49)" fg:x="148965" fg:w="351"/><text x="70.3264%" y="527.50"></text></g><g><title>__GI___pthread_mutex_lock (201 samples, 0.09%)</title><rect x="70.2416%" y="533" width="0.0946%" height="15" fill="rgb(213,87,29)" fg:x="149316" fg:w="201"/><text x="70.4916%" y="543.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (77 samples, 0.04%)</title><rect x="70.3371%" y="533" width="0.0362%" height="15" fill="rgb(205,151,52)" fg:x="149519" fg:w="77"/><text x="70.5871%" y="543.50"></text></g><g><title>libnfs_opaque_auth (72 samples, 0.03%)</title><rect x="70.3921%" y="469" width="0.0339%" height="15" fill="rgb(253,215,39)" fg:x="149636" fg:w="72"/><text x="70.6421%" y="479.50"></text></g><g><title>libnfs_zdr_bytes (70 samples, 0.03%)</title><rect x="70.3930%" y="453" width="0.0329%" height="15" fill="rgb(221,220,41)" fg:x="149638" fg:w="70"/><text x="70.6430%" y="463.50"></text></g><g><title>memcpy (31 samples, 0.01%)</title><rect x="70.4114%" y="437" width="0.0146%" height="15" fill="rgb(218,133,21)" fg:x="149677" fg:w="31"/><text x="70.6614%" y="447.50"></text></g><g><title>__GI_memcpy (27 samples, 0.01%)</title><rect x="70.4133%" y="421" width="0.0127%" height="15" fill="rgb(221,193,43)" fg:x="149681" fg:w="27"/><text x="70.6633%" y="431.50"></text></g><g><title>libnfs_opaque_auth (86 samples, 0.04%)</title><rect x="70.3893%" y="485" width="0.0405%" height="15" fill="rgb(240,128,52)" fg:x="149630" fg:w="86"/><text x="70.6393%" y="495.50"></text></g><g><title>libnfs_rpc_msg (116 samples, 0.05%)</title><rect x="70.3808%" y="517" width="0.0546%" height="15" fill="rgb(253,114,12)" fg:x="149612" fg:w="116"/><text x="70.6308%" y="527.50"></text></g><g><title>libnfs_rpc_call_body (116 samples, 0.05%)</title><rect x="70.3808%" y="501" width="0.0546%" height="15" fill="rgb(215,223,47)" fg:x="149612" fg:w="116"/><text x="70.6308%" y="511.50"></text></g><g><title>libnfs_rpc_msg (145 samples, 0.07%)</title><rect x="70.3738%" y="533" width="0.0682%" height="15" fill="rgb(248,225,23)" fg:x="149597" fg:w="145"/><text x="70.6238%" y="543.50"></text></g><g><title>rpc_allocate_pdu2 (1,303 samples, 0.61%)</title><rect x="69.8441%" y="549" width="0.6130%" height="15" fill="rgb(250,108,0)" fg:x="148471" fg:w="1303"/><text x="70.0941%" y="559.50"></text></g><g><title>__GI___pthread_mutex_lock (30 samples, 0.01%)</title><rect x="70.4819%" y="533" width="0.0141%" height="15" fill="rgb(228,208,7)" fg:x="149827" fg:w="30"/><text x="70.7319%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (25 samples, 0.01%)</title><rect x="70.5215%" y="517" width="0.0118%" height="15" fill="rgb(244,45,10)" fg:x="149911" fg:w="25"/><text x="70.7715%" y="527.50"></text></g><g><title>__pthread_disable_asynccancel (34 samples, 0.02%)</title><rect x="70.6137%" y="469" width="0.0160%" height="15" fill="rgb(207,125,25)" fg:x="150107" fg:w="34"/><text x="70.8637%" y="479.50"></text></g><g><title>__pthread_enable_asynccancel (45 samples, 0.02%)</title><rect x="70.6297%" y="469" width="0.0212%" height="15" fill="rgb(210,195,18)" fg:x="150141" fg:w="45"/><text x="70.8797%" y="479.50"></text></g><g><title>fput (36 samples, 0.02%)</title><rect x="70.7731%" y="373" width="0.0169%" height="15" fill="rgb(249,80,12)" fg:x="150446" fg:w="36"/><text x="71.0231%" y="383.50"></text></g><g><title>fput (52 samples, 0.02%)</title><rect x="70.7722%" y="389" width="0.0245%" height="15" fill="rgb(221,65,9)" fg:x="150444" fg:w="52"/><text x="71.0222%" y="399.50"></text></g><g><title>_raw_read_lock_irqsave (122 samples, 0.06%)</title><rect x="70.9002%" y="325" width="0.0574%" height="15" fill="rgb(235,49,36)" fg:x="150716" fg:w="122"/><text x="71.1502%" y="335.50"></text></g><g><title>lock_sock_nested (170 samples, 0.08%)</title><rect x="70.8809%" y="341" width="0.0800%" height="15" fill="rgb(225,32,20)" fg:x="150675" fg:w="170"/><text x="71.1309%" y="351.50"></text></g><g><title>release_sock (94 samples, 0.04%)</title><rect x="70.9608%" y="341" width="0.0442%" height="15" fill="rgb(215,141,46)" fg:x="150845" fg:w="94"/><text x="71.2108%" y="351.50"></text></g><g><title>tcp_release_cb (24 samples, 0.01%)</title><rect x="70.9938%" y="325" width="0.0113%" height="15" fill="rgb(250,160,47)" fg:x="150915" fg:w="24"/><text x="71.2438%" y="335.50"></text></g><g><title>tcp_get_timestamping_opt_stats (158 samples, 0.07%)</title><rect x="71.0154%" y="341" width="0.0743%" height="15" fill="rgb(216,222,40)" fg:x="150961" fg:w="158"/><text x="71.2654%" y="351.50"></text></g><g><title>__check_object_size (48 samples, 0.02%)</title><rect x="71.2290%" y="325" width="0.0226%" height="15" fill="rgb(234,217,39)" fg:x="151415" fg:w="48"/><text x="71.4790%" y="335.50"></text></g><g><title>pfn_valid (30 samples, 0.01%)</title><rect x="71.2374%" y="309" width="0.0141%" height="15" fill="rgb(207,178,40)" fg:x="151433" fg:w="30"/><text x="71.4874%" y="319.50"></text></g><g><title>__arch_copy_from_user (23 samples, 0.01%)</title><rect x="71.2633%" y="309" width="0.0108%" height="15" fill="rgb(221,136,13)" fg:x="151488" fg:w="23"/><text x="71.5133%" y="319.50"></text></g><g><title>_copy_from_iter_full (68 samples, 0.03%)</title><rect x="71.2520%" y="325" width="0.0320%" height="15" fill="rgb(249,199,10)" fg:x="151464" fg:w="68"/><text x="71.5020%" y="335.50"></text></g><g><title>sk_page_frag_refill (166 samples, 0.08%)</title><rect x="71.2972%" y="325" width="0.0781%" height="15" fill="rgb(249,222,13)" fg:x="151560" fg:w="166"/><text x="71.5472%" y="335.50"></text></g><g><title>skb_page_frag_refill (165 samples, 0.08%)</title><rect x="71.2977%" y="309" width="0.0776%" height="15" fill="rgb(244,185,38)" fg:x="151561" fg:w="165"/><text x="71.5477%" y="319.50"></text></g><g><title>kmalloc_slab (34 samples, 0.02%)</title><rect x="71.4665%" y="261" width="0.0160%" height="15" fill="rgb(236,202,9)" fg:x="151920" fg:w="34"/><text x="71.7165%" y="271.50"></text></g><g><title>memcg_kmem_put_cache (136 samples, 0.06%)</title><rect x="71.4825%" y="261" width="0.0640%" height="15" fill="rgb(250,229,37)" fg:x="151954" fg:w="136"/><text x="71.7325%" y="271.50"></text></g><g><title>__kmalloc_node_track_caller (307 samples, 0.14%)</title><rect x="71.4073%" y="277" width="0.1444%" height="15" fill="rgb(206,174,23)" fg:x="151794" fg:w="307"/><text x="71.6573%" y="287.50"></text></g><g><title>__kmalloc_reserve.isra.0 (359 samples, 0.17%)</title><rect x="71.4049%" y="293" width="0.1689%" height="15" fill="rgb(211,33,43)" fg:x="151789" fg:w="359"/><text x="71.6549%" y="303.50"></text></g><g><title>slabinfo_write (25 samples, 0.01%)</title><rect x="71.5620%" y="277" width="0.0118%" height="15" fill="rgb(245,58,50)" fg:x="152123" fg:w="25"/><text x="71.8120%" y="287.50"></text></g><g><title>__slab_alloc.isra.0 (27 samples, 0.01%)</title><rect x="71.6265%" y="277" width="0.0127%" height="15" fill="rgb(244,68,36)" fg:x="152260" fg:w="27"/><text x="71.8765%" y="287.50"></text></g><g><title>memcg_kmem_put_cache (90 samples, 0.04%)</title><rect x="71.6397%" y="277" width="0.0423%" height="15" fill="rgb(232,229,15)" fg:x="152288" fg:w="90"/><text x="71.8897%" y="287.50"></text></g><g><title>kmem_cache_alloc_node (252 samples, 0.12%)</title><rect x="71.5776%" y="293" width="0.1185%" height="15" fill="rgb(254,30,23)" fg:x="152156" fg:w="252"/><text x="71.8276%" y="303.50"></text></g><g><title>slab_pre_alloc_hook (30 samples, 0.01%)</title><rect x="71.6820%" y="277" width="0.0141%" height="15" fill="rgb(235,160,14)" fg:x="152378" fg:w="30"/><text x="71.9320%" y="287.50"></text></g><g><title>ksize (155 samples, 0.07%)</title><rect x="71.6961%" y="293" width="0.0729%" height="15" fill="rgb(212,155,44)" fg:x="152408" fg:w="155"/><text x="71.9461%" y="303.50"></text></g><g><title>__ksize (155 samples, 0.07%)</title><rect x="71.6961%" y="277" width="0.0729%" height="15" fill="rgb(226,2,50)" fg:x="152408" fg:w="155"/><text x="71.9461%" y="287.50"></text></g><g><title>memset (56 samples, 0.03%)</title><rect x="71.7765%" y="293" width="0.0263%" height="15" fill="rgb(234,177,6)" fg:x="152579" fg:w="56"/><text x="72.0265%" y="303.50"></text></g><g><title>__alloc_skb (916 samples, 0.43%)</title><rect x="71.3880%" y="309" width="0.4309%" height="15" fill="rgb(217,24,9)" fg:x="151753" fg:w="916"/><text x="71.6380%" y="319.50"></text></g><g><title>slabinfo_write (31 samples, 0.01%)</title><rect x="71.8043%" y="293" width="0.0146%" height="15" fill="rgb(220,13,46)" fg:x="152638" fg:w="31"/><text x="72.0543%" y="303.50"></text></g><g><title>sk_stream_alloc_skb (959 samples, 0.45%)</title><rect x="71.3753%" y="325" width="0.4511%" height="15" fill="rgb(239,221,27)" fg:x="151726" fg:w="959"/><text x="71.6253%" y="335.50"></text></g><g><title>skb_entail (66 samples, 0.03%)</title><rect x="71.8264%" y="325" width="0.0310%" height="15" fill="rgb(222,198,25)" fg:x="152685" fg:w="66"/><text x="72.0764%" y="335.50"></text></g><g><title>__tcp_select_window (141 samples, 0.07%)</title><rect x="72.1590%" y="261" width="0.0663%" height="15" fill="rgb(211,99,13)" fg:x="153392" fg:w="141"/><text x="72.4090%" y="271.50"></text></g><g><title>__sk_dst_check (44 samples, 0.02%)</title><rect x="72.3222%" y="229" width="0.0207%" height="15" fill="rgb(232,111,31)" fg:x="153739" fg:w="44"/><text x="72.5722%" y="239.50"></text></g><g><title>iptable_filter_hook (47 samples, 0.02%)</title><rect x="72.3773%" y="197" width="0.0221%" height="15" fill="rgb(245,82,37)" fg:x="153856" fg:w="47"/><text x="72.6273%" y="207.50"></text></g><g><title>iptable_mangle_hook (27 samples, 0.01%)</title><rect x="72.3994%" y="197" width="0.0127%" height="15" fill="rgb(227,149,46)" fg:x="153903" fg:w="27"/><text x="72.6494%" y="207.50"></text></g><g><title>comment_mt (33 samples, 0.02%)</title><rect x="72.4732%" y="165" width="0.0155%" height="15" fill="rgb(218,36,50)" fg:x="154060" fg:w="33"/><text x="72.7232%" y="175.50"></text></g><g><title>__local_bh_enable_ip (29 samples, 0.01%)</title><rect x="72.6572%" y="149" width="0.0136%" height="15" fill="rgb(226,80,48)" fg:x="154451" fg:w="29"/><text x="72.9072%" y="159.50"></text></g><g><title>ipt_do_table (392 samples, 0.18%)</title><rect x="72.4888%" y="165" width="0.1844%" height="15" fill="rgb(238,224,15)" fg:x="154093" fg:w="392"/><text x="72.7388%" y="175.50"></text></g><g><title>iptable_filter_hook (447 samples, 0.21%)</title><rect x="72.4714%" y="181" width="0.2103%" height="15" fill="rgb(241,136,10)" fg:x="154056" fg:w="447"/><text x="72.7214%" y="191.50"></text></g><g><title>iptable_mangle_hook (275 samples, 0.13%)</title><rect x="72.6816%" y="181" width="0.1294%" height="15" fill="rgb(208,32,45)" fg:x="154503" fg:w="275"/><text x="72.9316%" y="191.50"></text></g><g><title>ipt_do_table (225 samples, 0.11%)</title><rect x="72.7052%" y="165" width="0.1058%" height="15" fill="rgb(207,135,9)" fg:x="154553" fg:w="225"/><text x="72.9552%" y="175.50"></text></g><g><title>ipv4_conntrack_defrag (24 samples, 0.01%)</title><rect x="72.8110%" y="181" width="0.0113%" height="15" fill="rgb(206,86,44)" fg:x="154778" fg:w="24"/><text x="73.0610%" y="191.50"></text></g><g><title>__nf_conntrack_find_get (224 samples, 0.11%)</title><rect x="72.9079%" y="149" width="0.1054%" height="15" fill="rgb(245,177,15)" fg:x="154984" fg:w="224"/><text x="73.1579%" y="159.50"></text></g><g><title>get_l4proto (74 samples, 0.03%)</title><rect x="73.0241%" y="149" width="0.0348%" height="15" fill="rgb(206,64,50)" fg:x="155231" fg:w="74"/><text x="73.2741%" y="159.50"></text></g><g><title>hash_conntrack_raw (57 samples, 0.03%)</title><rect x="73.0589%" y="149" width="0.0268%" height="15" fill="rgb(234,36,40)" fg:x="155305" fg:w="57"/><text x="73.3089%" y="159.50"></text></g><g><title>nf_conntrack_init_net (171 samples, 0.08%)</title><rect x="73.0857%" y="149" width="0.0804%" height="15" fill="rgb(213,64,8)" fg:x="155362" fg:w="171"/><text x="73.3357%" y="159.50"></text></g><g><title>__nf_ct_refresh_acct (30 samples, 0.01%)</title><rect x="73.3078%" y="133" width="0.0141%" height="15" fill="rgb(210,75,36)" fg:x="155834" fg:w="30"/><text x="73.5578%" y="143.50"></text></g><g><title>_raw_spin_unlock_bh (41 samples, 0.02%)</title><rect x="73.3294%" y="133" width="0.0193%" height="15" fill="rgb(229,88,21)" fg:x="155880" fg:w="41"/><text x="73.5794%" y="143.50"></text></g><g><title>__local_bh_enable_ip (36 samples, 0.02%)</title><rect x="73.3318%" y="117" width="0.0169%" height="15" fill="rgb(252,204,47)" fg:x="155885" fg:w="36"/><text x="73.5818%" y="127.50"></text></g><g><title>nf_conntrack_tcp_packet (641 samples, 0.30%)</title><rect x="73.1662%" y="149" width="0.3015%" height="15" fill="rgb(208,77,27)" fg:x="155533" fg:w="641"/><text x="73.4162%" y="159.50"></text></g><g><title>tcp_in_window (247 samples, 0.12%)</title><rect x="73.3515%" y="133" width="0.1162%" height="15" fill="rgb(221,76,26)" fg:x="155927" fg:w="247"/><text x="73.6015%" y="143.50"></text></g><g><title>nf_ct_seq_offset (25 samples, 0.01%)</title><rect x="73.4560%" y="117" width="0.0118%" height="15" fill="rgb(225,139,18)" fg:x="156149" fg:w="25"/><text x="73.7060%" y="127.50"></text></g><g><title>nf_ct_get_tuple (123 samples, 0.06%)</title><rect x="73.4677%" y="149" width="0.0579%" height="15" fill="rgb(230,137,11)" fg:x="156174" fg:w="123"/><text x="73.7177%" y="159.50"></text></g><g><title>nf_conntrack_in (1,464 samples, 0.69%)</title><rect x="72.8439%" y="165" width="0.6887%" height="15" fill="rgb(212,28,1)" fg:x="154848" fg:w="1464"/><text x="73.0939%" y="175.50"></text></g><g><title>ipv4_conntrack_local (1,535 samples, 0.72%)</title><rect x="72.8223%" y="181" width="0.7221%" height="15" fill="rgb(248,164,17)" fg:x="154802" fg:w="1535"/><text x="73.0723%" y="191.50"></text></g><g><title>nf_ct_get_tuple (23 samples, 0.01%)</title><rect x="73.5336%" y="165" width="0.0108%" height="15" fill="rgb(222,171,42)" fg:x="156314" fg:w="23"/><text x="73.7836%" y="175.50"></text></g><g><title>nf_nat_inet_fn (37 samples, 0.02%)</title><rect x="73.5896%" y="149" width="0.0174%" height="15" fill="rgb(243,84,45)" fg:x="156433" fg:w="37"/><text x="73.8396%" y="159.50"></text></g><g><title>nf_hook_slow (2,524 samples, 1.19%)</title><rect x="72.4290%" y="197" width="1.1873%" height="15" fill="rgb(252,49,23)" fg:x="153966" fg:w="2524"/><text x="72.6790%" y="207.50"></text></g><g><title>nf_nat_ipv4_local_fn (123 samples, 0.06%)</title><rect x="73.5585%" y="181" width="0.0579%" height="15" fill="rgb(215,19,7)" fg:x="156367" fg:w="123"/><text x="73.8085%" y="191.50"></text></g><g><title>nf_nat_ipv4_fn (67 samples, 0.03%)</title><rect x="73.5849%" y="165" width="0.0315%" height="15" fill="rgb(238,81,41)" fg:x="156423" fg:w="67"/><text x="73.8349%" y="175.50"></text></g><g><title>__ip_local_out (2,714 samples, 1.28%)</title><rect x="72.3533%" y="213" width="1.2767%" height="15" fill="rgb(210,199,37)" fg:x="153805" fg:w="2714"/><text x="72.6033%" y="223.50"></text></g><g><title>nf_nat_ipv4_local_fn (29 samples, 0.01%)</title><rect x="73.6164%" y="197" width="0.0136%" height="15" fill="rgb(244,192,49)" fg:x="156490" fg:w="29"/><text x="73.8664%" y="207.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (134 samples, 0.06%)</title><rect x="73.7090%" y="181" width="0.0630%" height="15" fill="rgb(226,211,11)" fg:x="156687" fg:w="134"/><text x="73.9590%" y="191.50"></text></g><g><title>__qdisc_run (60 samples, 0.03%)</title><rect x="74.0628%" y="117" width="0.0282%" height="15" fill="rgb(236,162,54)" fg:x="157439" fg:w="60"/><text x="74.3128%" y="127.50"></text></g><g><title>fq_codel_dequeue (24 samples, 0.01%)</title><rect x="74.0797%" y="101" width="0.0113%" height="15" fill="rgb(220,229,9)" fg:x="157475" fg:w="24"/><text x="74.3297%" y="111.50"></text></g><g><title>_raw_read_lock_irqsave (191 samples, 0.09%)</title><rect x="74.0910%" y="117" width="0.0899%" height="15" fill="rgb(250,87,22)" fg:x="157499" fg:w="191"/><text x="74.3410%" y="127.50"></text></g><g><title>mlx5e_select_queue (33 samples, 0.02%)</title><rect x="74.1969%" y="117" width="0.0155%" height="15" fill="rgb(239,43,17)" fg:x="157724" fg:w="33"/><text x="74.4469%" y="127.50"></text></g><g><title>__get_xps_queue_idx (64 samples, 0.03%)</title><rect x="74.2905%" y="69" width="0.0301%" height="15" fill="rgb(231,177,25)" fg:x="157923" fg:w="64"/><text x="74.5405%" y="79.50"></text></g><g><title>mlx5e_select_queue (180 samples, 0.08%)</title><rect x="74.2392%" y="101" width="0.0847%" height="15" fill="rgb(219,179,1)" fg:x="157814" fg:w="180"/><text x="74.4892%" y="111.50"></text></g><g><title>netdev_pick_tx (104 samples, 0.05%)</title><rect x="74.2750%" y="85" width="0.0489%" height="15" fill="rgb(238,219,53)" fg:x="157890" fg:w="104"/><text x="74.5250%" y="95.50"></text></g><g><title>netdev_core_pick_tx (242 samples, 0.11%)</title><rect x="74.2124%" y="117" width="0.1138%" height="15" fill="rgb(232,167,36)" fg:x="157757" fg:w="242"/><text x="74.4624%" y="127.50"></text></g><g><title>__lock_text_start (172 samples, 0.08%)</title><rect x="74.3436%" y="101" width="0.0809%" height="15" fill="rgb(244,19,51)" fg:x="158036" fg:w="172"/><text x="74.5936%" y="111.50"></text></g><g><title>_raw_read_lock_irqsave (174 samples, 0.08%)</title><rect x="74.4246%" y="101" width="0.0819%" height="15" fill="rgb(224,6,22)" fg:x="158208" fg:w="174"/><text x="74.6746%" y="111.50"></text></g><g><title>mlx5e_sq_xmit_prepare (163 samples, 0.08%)</title><rect x="74.6193%" y="69" width="0.0767%" height="15" fill="rgb(224,145,5)" fg:x="158622" fg:w="163"/><text x="74.8693%" y="79.50"></text></g><g><title>mlx5e_tx_check_stop (136 samples, 0.06%)</title><rect x="74.9058%" y="53" width="0.0640%" height="15" fill="rgb(234,130,49)" fg:x="159231" fg:w="136"/><text x="75.1558%" y="63.50"></text></g><g><title>mlx5e_sq_xmit_wqe (755 samples, 0.36%)</title><rect x="74.6960%" y="69" width="0.3552%" height="15" fill="rgb(254,6,2)" fg:x="158785" fg:w="755"/><text x="74.9460%" y="79.50"></text></g><g><title>mlx5e_txwqe_build_dsegs (173 samples, 0.08%)</title><rect x="74.9698%" y="53" width="0.0814%" height="15" fill="rgb(208,96,46)" fg:x="159367" fg:w="173"/><text x="75.2198%" y="63.50"></text></g><g><title>dma_direct_map_page (80 samples, 0.04%)</title><rect x="75.0135%" y="37" width="0.0376%" height="15" fill="rgb(239,3,39)" fg:x="159460" fg:w="80"/><text x="75.2635%" y="47.50"></text></g><g><title>dev_hard_start_xmit (1,184 samples, 0.56%)</title><rect x="74.5121%" y="101" width="0.5570%" height="15" fill="rgb(233,210,1)" fg:x="158394" fg:w="1184"/><text x="74.7621%" y="111.50"></text></g><g><title>mlx5e_xmit (1,097 samples, 0.52%)</title><rect x="74.5530%" y="85" width="0.5161%" height="15" fill="rgb(244,137,37)" fg:x="158481" fg:w="1097"/><text x="74.8030%" y="95.50"></text></g><g><title>netif_skb_features (74 samples, 0.03%)</title><rect x="75.1537%" y="69" width="0.0348%" height="15" fill="rgb(240,136,2)" fg:x="159758" fg:w="74"/><text x="75.4037%" y="79.50"></text></g><g><title>validate_xmit_skb (244 samples, 0.11%)</title><rect x="75.0935%" y="85" width="0.1148%" height="15" fill="rgb(239,18,37)" fg:x="159630" fg:w="244"/><text x="75.3435%" y="95.50"></text></g><g><title>validate_xmit_xfrm (36 samples, 0.02%)</title><rect x="75.1913%" y="69" width="0.0169%" height="15" fill="rgb(218,185,22)" fg:x="159838" fg:w="36"/><text x="75.4413%" y="79.50"></text></g><g><title>sch_direct_xmit (1,905 samples, 0.90%)</title><rect x="74.3262%" y="117" width="0.8962%" height="15" fill="rgb(225,218,4)" fg:x="157999" fg:w="1905"/><text x="74.5762%" y="127.50"></text></g><g><title>validate_xmit_skb_list (307 samples, 0.14%)</title><rect x="75.0780%" y="101" width="0.1444%" height="15" fill="rgb(230,182,32)" fg:x="159597" fg:w="307"/><text x="75.3280%" y="111.50"></text></g><g><title>validate_xmit_xfrm (30 samples, 0.01%)</title><rect x="75.2083%" y="85" width="0.0141%" height="15" fill="rgb(242,56,43)" fg:x="159874" fg:w="30"/><text x="75.4583%" y="95.50"></text></g><g><title>__dev_queue_xmit (2,814 samples, 1.32%)</title><rect x="73.9000%" y="133" width="1.3238%" height="15" fill="rgb(233,99,24)" fg:x="157093" fg:w="2814"/><text x="74.1500%" y="143.50"></text></g><g><title>dev_queue_xmit (2,837 samples, 1.33%)</title><rect x="73.8986%" y="149" width="1.3346%" height="15" fill="rgb(234,209,42)" fg:x="157090" fg:w="2837"/><text x="74.1486%" y="159.50"></text></g><g><title>ip_finish_output2 (3,054 samples, 1.44%)</title><rect x="73.7970%" y="165" width="1.4367%" height="15" fill="rgb(227,7,12)" fg:x="156874" fg:w="3054"/><text x="74.0470%" y="175.50"></text></g><g><title>__ip_finish_output (3,111 samples, 1.46%)</title><rect x="73.7721%" y="181" width="1.4635%" height="15" fill="rgb(245,203,43)" fg:x="156821" fg:w="3111"/><text x="74.0221%" y="191.50"></text></g><g><title>ip_finish_output (3,278 samples, 1.54%)</title><rect x="73.6973%" y="197" width="1.5420%" height="15" fill="rgb(238,205,33)" fg:x="156662" fg:w="3278"/><text x="73.9473%" y="207.50"></text></g><g><title>ipv4_confirm (23 samples, 0.01%)</title><rect x="75.2431%" y="197" width="0.0108%" height="15" fill="rgb(231,56,7)" fg:x="159948" fg:w="23"/><text x="75.4931%" y="207.50"></text></g><g><title>iptable_mangle_hook (95 samples, 0.04%)</title><rect x="75.2760%" y="181" width="0.0447%" height="15" fill="rgb(244,186,29)" fg:x="160018" fg:w="95"/><text x="75.5260%" y="191.50"></text></g><g><title>ipt_do_table (88 samples, 0.04%)</title><rect x="75.2793%" y="165" width="0.0414%" height="15" fill="rgb(234,111,31)" fg:x="160025" fg:w="88"/><text x="75.5293%" y="175.50"></text></g><g><title>__local_bh_enable_ip (25 samples, 0.01%)</title><rect x="75.3089%" y="149" width="0.0118%" height="15" fill="rgb(241,149,10)" fg:x="160088" fg:w="25"/><text x="75.5589%" y="159.50"></text></g><g><title>nf_confirm (55 samples, 0.03%)</title><rect x="75.3259%" y="165" width="0.0259%" height="15" fill="rgb(249,206,44)" fg:x="160124" fg:w="55"/><text x="75.5759%" y="175.50"></text></g><g><title>nf_ct_deliver_cached_events (24 samples, 0.01%)</title><rect x="75.3405%" y="149" width="0.0113%" height="15" fill="rgb(251,153,30)" fg:x="160155" fg:w="24"/><text x="75.5905%" y="159.50"></text></g><g><title>ipv4_confirm (76 samples, 0.04%)</title><rect x="75.3207%" y="181" width="0.0358%" height="15" fill="rgb(239,152,38)" fg:x="160113" fg:w="76"/><text x="75.5707%" y="191.50"></text></g><g><title>nf_hook_slow (258 samples, 0.12%)</title><rect x="75.2539%" y="197" width="0.1214%" height="15" fill="rgb(249,139,47)" fg:x="159971" fg:w="258"/><text x="75.5039%" y="207.50"></text></g><g><title>nf_nat_ipv4_out (25 samples, 0.01%)</title><rect x="75.3635%" y="181" width="0.0118%" height="15" fill="rgb(244,64,35)" fg:x="160204" fg:w="25"/><text x="75.6135%" y="191.50"></text></g><g><title>ip_output (3,704 samples, 1.74%)</title><rect x="73.6366%" y="213" width="1.7424%" height="15" fill="rgb(216,46,15)" fg:x="156533" fg:w="3704"/><text x="73.8866%" y="223.50"></text></g><g><title>ip_local_out (6,469 samples, 3.04%)</title><rect x="72.3434%" y="229" width="3.0432%" height="15" fill="rgb(250,74,19)" fg:x="153784" fg:w="6469"/><text x="72.5934%" y="239.50">ip_..</text></g><g><title>__ip_queue_xmit (6,722 samples, 3.16%)</title><rect x="72.2413%" y="245" width="3.1622%" height="15" fill="rgb(249,42,33)" fg:x="153567" fg:w="6722"/><text x="72.4913%" y="255.50">__i..</text></g><g><title>__sk_dst_check (24 samples, 0.01%)</title><rect x="75.4059%" y="245" width="0.0113%" height="15" fill="rgb(242,149,17)" fg:x="160294" fg:w="24"/><text x="75.6559%" y="255.50"></text></g><g><title>ip_queue_xmit (6,773 samples, 3.19%)</title><rect x="72.2385%" y="261" width="3.1862%" height="15" fill="rgb(244,29,21)" fg:x="153561" fg:w="6773"/><text x="72.4885%" y="271.50">ip_..</text></g><g><title>refcount_add_not_zero_checked (40 samples, 0.02%)</title><rect x="75.4247%" y="261" width="0.0188%" height="15" fill="rgb(220,130,37)" fg:x="160334" fg:w="40"/><text x="75.6747%" y="271.50"></text></g><g><title>refcount_dec_and_mutex_lock (34 samples, 0.02%)</title><rect x="75.4435%" y="261" width="0.0160%" height="15" fill="rgb(211,67,2)" fg:x="160374" fg:w="34"/><text x="75.6935%" y="271.50"></text></g><g><title>skb_clone (81 samples, 0.04%)</title><rect x="75.4595%" y="261" width="0.0381%" height="15" fill="rgb(235,68,52)" fg:x="160408" fg:w="81"/><text x="75.7095%" y="271.50"></text></g><g><title>__copy_skb_header (31 samples, 0.01%)</title><rect x="75.4830%" y="245" width="0.0146%" height="15" fill="rgb(246,142,3)" fg:x="160458" fg:w="31"/><text x="75.7330%" y="255.50"></text></g><g><title>skb_segment (27 samples, 0.01%)</title><rect x="75.5018%" y="261" width="0.0127%" height="15" fill="rgb(241,25,7)" fg:x="160498" fg:w="27"/><text x="75.7518%" y="271.50"></text></g><g><title>tcp_options_write (33 samples, 0.02%)</title><rect x="75.5197%" y="261" width="0.0155%" height="15" fill="rgb(242,119,39)" fg:x="160536" fg:w="33"/><text x="75.7697%" y="271.50"></text></g><g><title>tcp_update_skb_after_send (33 samples, 0.02%)</title><rect x="75.5432%" y="261" width="0.0155%" height="15" fill="rgb(241,98,45)" fg:x="160586" fg:w="33"/><text x="75.7932%" y="271.50"></text></g><g><title>__tcp_transmit_skb (7,532 samples, 3.54%)</title><rect x="72.0249%" y="277" width="3.5432%" height="15" fill="rgb(254,28,30)" fg:x="153107" fg:w="7532"/><text x="72.2749%" y="287.50">__tc..</text></g><g><title>arch_counter_get_cntpct (25 samples, 0.01%)</title><rect x="75.6138%" y="261" width="0.0118%" height="15" fill="rgb(241,142,54)" fg:x="160736" fg:w="25"/><text x="75.8638%" y="271.50"></text></g><g><title>ktime_get (69 samples, 0.03%)</title><rect x="75.5954%" y="277" width="0.0325%" height="15" fill="rgb(222,85,15)" fg:x="160697" fg:w="69"/><text x="75.8454%" y="287.50"></text></g><g><title>rb_insert_color (35 samples, 0.02%)</title><rect x="75.7309%" y="261" width="0.0165%" height="15" fill="rgb(210,85,47)" fg:x="160985" fg:w="35"/><text x="75.9809%" y="271.50"></text></g><g><title>tcp_rbtree_insert (23 samples, 0.01%)</title><rect x="75.7483%" y="261" width="0.0108%" height="15" fill="rgb(224,206,25)" fg:x="161022" fg:w="23"/><text x="75.9983%" y="271.50"></text></g><g><title>tcp_event_new_data_sent (394 samples, 0.19%)</title><rect x="75.6561%" y="277" width="0.1853%" height="15" fill="rgb(243,201,19)" fg:x="160826" fg:w="394"/><text x="75.9061%" y="287.50"></text></g><g><title>tcp_rearm_rto (175 samples, 0.08%)</title><rect x="75.7591%" y="261" width="0.0823%" height="15" fill="rgb(236,59,4)" fg:x="161045" fg:w="175"/><text x="76.0091%" y="271.50"></text></g><g><title>sk_reset_timer (159 samples, 0.07%)</title><rect x="75.7667%" y="245" width="0.0748%" height="15" fill="rgb(254,179,45)" fg:x="161061" fg:w="159"/><text x="76.0167%" y="255.50"></text></g><g><title>mod_timer (155 samples, 0.07%)</title><rect x="75.7686%" y="229" width="0.0729%" height="15" fill="rgb(226,14,10)" fg:x="161065" fg:w="155"/><text x="76.0186%" y="239.50"></text></g><g><title>tcp_schedule_loss_probe (102 samples, 0.05%)</title><rect x="75.8683%" y="277" width="0.0480%" height="15" fill="rgb(244,27,41)" fg:x="161277" fg:w="102"/><text x="76.1183%" y="287.50"></text></g><g><title>tcp_small_queue_check.isra.0 (28 samples, 0.01%)</title><rect x="75.9163%" y="277" width="0.0132%" height="15" fill="rgb(235,35,32)" fg:x="161379" fg:w="28"/><text x="76.1663%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (8,608 samples, 4.05%)</title><rect x="71.8899%" y="309" width="4.0494%" height="15" fill="rgb(218,68,31)" fg:x="152820" fg:w="8608"/><text x="72.1399%" y="319.50">__tc..</text></g><g><title>tcp_write_xmit (8,542 samples, 4.02%)</title><rect x="71.9210%" y="293" width="4.0183%" height="15" fill="rgb(207,120,37)" fg:x="152886" fg:w="8542"/><text x="72.1710%" y="303.50">tcp_..</text></g><g><title>tcp_push (8,658 samples, 4.07%)</title><rect x="71.8716%" y="325" width="4.0729%" height="15" fill="rgb(227,98,0)" fg:x="152781" fg:w="8658"/><text x="72.1216%" y="335.50">tcp_..</text></g><g><title>tcp_rate_check_app_limited (124 samples, 0.06%)</title><rect x="75.9445%" y="325" width="0.0583%" height="15" fill="rgb(207,7,3)" fg:x="161439" fg:w="124"/><text x="76.1945%" y="335.50"></text></g><g><title>ipv4_mtu (28 samples, 0.01%)</title><rect x="76.1435%" y="293" width="0.0132%" height="15" fill="rgb(206,98,19)" fg:x="161862" fg:w="28"/><text x="76.3935%" y="303.50"></text></g><g><title>tcp_send_mss (332 samples, 0.16%)</title><rect x="76.0028%" y="325" width="0.1562%" height="15" fill="rgb(217,5,26)" fg:x="161563" fg:w="332"/><text x="76.2528%" y="335.50"></text></g><g><title>tcp_current_mss (205 samples, 0.10%)</title><rect x="76.0626%" y="309" width="0.0964%" height="15" fill="rgb(235,190,38)" fg:x="161690" fg:w="205"/><text x="76.3126%" y="319.50"></text></g><g><title>tcp_sendmsg_locked (10,756 samples, 5.06%)</title><rect x="71.0996%" y="341" width="5.0599%" height="15" fill="rgb(247,86,24)" fg:x="151140" fg:w="10756"/><text x="71.3496%" y="351.50">tcp_se..</text></g><g><title>tcp_sendmsg (11,280 samples, 5.31%)</title><rect x="70.8573%" y="357" width="5.3064%" height="15" fill="rgb(205,101,16)" fg:x="150625" fg:w="11280"/><text x="71.1073%" y="367.50">tcp_se..</text></g><g><title>inet_sendmsg (11,333 samples, 5.33%)</title><rect x="70.8334%" y="373" width="5.3313%" height="15" fill="rgb(246,168,33)" fg:x="150574" fg:w="11333"/><text x="71.0834%" y="383.50">inet_se..</text></g><g><title>security_socket_sendmsg (96 samples, 0.05%)</title><rect x="76.1646%" y="373" width="0.0452%" height="15" fill="rgb(231,114,1)" fg:x="161907" fg:w="96"/><text x="76.4146%" y="383.50"></text></g><g><title>apparmor_socket_sendmsg (75 samples, 0.04%)</title><rect x="76.1745%" y="357" width="0.0353%" height="15" fill="rgb(207,184,53)" fg:x="161928" fg:w="75"/><text x="76.4245%" y="367.50"></text></g><g><title>aa_sk_perm (55 samples, 0.03%)</title><rect x="76.1839%" y="341" width="0.0259%" height="15" fill="rgb(224,95,51)" fg:x="161948" fg:w="55"/><text x="76.4339%" y="351.50"></text></g><g><title>sock_sendmsg (11,481 samples, 5.40%)</title><rect x="70.8117%" y="389" width="5.4009%" height="15" fill="rgb(212,188,45)" fg:x="150528" fg:w="11481"/><text x="71.0617%" y="399.50">sock_se..</text></g><g><title>__fget (167 samples, 0.08%)</title><rect x="76.2277%" y="341" width="0.0786%" height="15" fill="rgb(223,154,38)" fg:x="162041" fg:w="167"/><text x="76.4777%" y="351.50"></text></g><g><title>__fdget (428 samples, 0.20%)</title><rect x="76.2173%" y="373" width="0.2013%" height="15" fill="rgb(251,22,52)" fg:x="162019" fg:w="428"/><text x="76.4673%" y="383.50"></text></g><g><title>__fget_light (424 samples, 0.20%)</title><rect x="76.2192%" y="357" width="0.1995%" height="15" fill="rgb(229,209,22)" fg:x="162023" fg:w="424"/><text x="76.4692%" y="367.50"></text></g><g><title>f_dupfd (222 samples, 0.10%)</title><rect x="76.3142%" y="341" width="0.1044%" height="15" fill="rgb(234,138,34)" fg:x="162225" fg:w="222"/><text x="76.5642%" y="351.50"></text></g><g><title>__sys_sendto (12,083 samples, 5.68%)</title><rect x="70.7383%" y="405" width="5.6841%" height="15" fill="rgb(212,95,11)" fg:x="150372" fg:w="12083"/><text x="70.9883%" y="415.50">__sys_s..</text></g><g><title>sockfd_lookup_light (446 samples, 0.21%)</title><rect x="76.2126%" y="389" width="0.2098%" height="15" fill="rgb(240,179,47)" fg:x="162009" fg:w="446"/><text x="76.4626%" y="399.50"></text></g><g><title>import_single_range (25 samples, 0.01%)</title><rect x="76.4290%" y="405" width="0.0118%" height="15" fill="rgb(240,163,11)" fg:x="162469" fg:w="25"/><text x="76.6790%" y="415.50"></text></g><g><title>__arm64_sys_sendto (12,137 samples, 5.71%)</title><rect x="70.7350%" y="421" width="5.7095%" height="15" fill="rgb(236,37,12)" fg:x="150365" fg:w="12137"/><text x="70.9850%" y="431.50">__arm64..</text></g><g><title>__libc_send (12,543 samples, 5.90%)</title><rect x="70.5487%" y="501" width="5.9005%" height="15" fill="rgb(232,164,16)" fg:x="149969" fg:w="12543"/><text x="70.7987%" y="511.50">__libc_s..</text></g><g><title>__libc_send (12,526 samples, 5.89%)</title><rect x="70.5567%" y="485" width="5.8925%" height="15" fill="rgb(244,205,15)" fg:x="149986" fg:w="12526"/><text x="70.8067%" y="495.50">__libc_..</text></g><g><title>el0_svc (12,325 samples, 5.80%)</title><rect x="70.6513%" y="469" width="5.7980%" height="15" fill="rgb(223,117,47)" fg:x="150187" fg:w="12325"/><text x="70.9013%" y="479.50">el0_svc</text></g><g><title>el0_svc_handler (12,325 samples, 5.80%)</title><rect x="70.6513%" y="453" width="5.7980%" height="15" fill="rgb(244,107,35)" fg:x="150187" fg:w="12325"/><text x="70.9013%" y="463.50">el0_svc..</text></g><g><title>el0_svc_common.constprop.0 (12,318 samples, 5.79%)</title><rect x="70.6546%" y="437" width="5.7947%" height="15" fill="rgb(205,140,8)" fg:x="150194" fg:w="12318"/><text x="70.9046%" y="447.50">el0_svc..</text></g><g><title>__pthread_mutex_unlock_usercnt (114 samples, 0.05%)</title><rect x="76.4493%" y="501" width="0.0536%" height="15" fill="rgb(228,84,46)" fg:x="162512" fg:w="114"/><text x="76.6993%" y="511.50"></text></g><g><title>rpc_enqueue (140 samples, 0.07%)</title><rect x="76.5066%" y="501" width="0.0659%" height="15" fill="rgb(254,188,9)" fg:x="162634" fg:w="140"/><text x="76.7566%" y="511.50"></text></g><g><title>rpc_queue_pdu (13,008 samples, 6.12%)</title><rect x="70.4570%" y="549" width="6.1193%" height="15" fill="rgb(206,112,54)" fg:x="149774" fg:w="13008"/><text x="70.7070%" y="559.50">rpc_queu..</text></g><g><title>rpc_write_to_socket (12,900 samples, 6.07%)</title><rect x="70.5078%" y="533" width="6.0684%" height="15" fill="rgb(216,84,49)" fg:x="149882" fg:w="12900"/><text x="70.7578%" y="543.50">rpc_writ..</text></g><g><title>rpc_write_to_socket (12,845 samples, 6.04%)</title><rect x="70.5337%" y="517" width="6.0426%" height="15" fill="rgb(214,194,35)" fg:x="149937" fg:w="12845"/><text x="70.7837%" y="527.50">rpc_writ..</text></g><g><title>zdr_PUTFH4args (37 samples, 0.02%)</title><rect x="76.6341%" y="485" width="0.0174%" height="15" fill="rgb(249,28,3)" fg:x="162905" fg:w="37"/><text x="76.8841%" y="495.50"></text></g><g><title>zdr_nfs_fh4 (33 samples, 0.02%)</title><rect x="76.6360%" y="469" width="0.0155%" height="15" fill="rgb(222,56,52)" fg:x="162909" fg:w="33"/><text x="76.8860%" y="479.50"></text></g><g><title>libnfs_zdr_bytes (29 samples, 0.01%)</title><rect x="76.6379%" y="453" width="0.0136%" height="15" fill="rgb(245,217,50)" fg:x="162913" fg:w="29"/><text x="76.8879%" y="463.50"></text></g><g><title>zdr_nfs_argop4 (177 samples, 0.08%)</title><rect x="76.6115%" y="501" width="0.0833%" height="15" fill="rgb(213,201,24)" fg:x="162857" fg:w="177"/><text x="76.8615%" y="511.50"></text></g><g><title>zdr_READ4args (92 samples, 0.04%)</title><rect x="76.6515%" y="485" width="0.0433%" height="15" fill="rgb(248,116,28)" fg:x="162942" fg:w="92"/><text x="76.9015%" y="495.50"></text></g><g><title>zdr_stateid4 (41 samples, 0.02%)</title><rect x="76.6755%" y="469" width="0.0193%" height="15" fill="rgb(219,72,43)" fg:x="162993" fg:w="41"/><text x="76.9255%" y="479.50"></text></g><g><title>zdr_stateid4 (35 samples, 0.02%)</title><rect x="76.6783%" y="453" width="0.0165%" height="15" fill="rgb(209,138,14)" fg:x="162999" fg:w="35"/><text x="76.9283%" y="463.50"></text></g><g><title>libnfs_zdr_opaque (35 samples, 0.02%)</title><rect x="76.6783%" y="437" width="0.0165%" height="15" fill="rgb(222,18,33)" fg:x="162999" fg:w="35"/><text x="76.9283%" y="447.50"></text></g><g><title>libnfs_zdr_array (263 samples, 0.12%)</title><rect x="76.5847%" y="533" width="0.1237%" height="15" fill="rgb(213,199,7)" fg:x="162800" fg:w="263"/><text x="76.8347%" y="543.50"></text></g><g><title>zdr_nfs_argop4 (234 samples, 0.11%)</title><rect x="76.5984%" y="517" width="0.1101%" height="15" fill="rgb(250,110,10)" fg:x="162829" fg:w="234"/><text x="76.8484%" y="527.50"></text></g><g><title>zdr_nfs_opnum4 (29 samples, 0.01%)</title><rect x="76.6948%" y="501" width="0.0136%" height="15" fill="rgb(248,123,6)" fg:x="163034" fg:w="29"/><text x="76.9448%" y="511.50"></text></g><g><title>libnfs_zdr_enum (27 samples, 0.01%)</title><rect x="76.6958%" y="485" width="0.0127%" height="15" fill="rgb(206,91,31)" fg:x="163036" fg:w="27"/><text x="76.9458%" y="495.50"></text></g><g><title>zdr_utf8str_cis (36 samples, 0.02%)</title><rect x="76.7085%" y="533" width="0.0169%" height="15" fill="rgb(211,154,13)" fg:x="163063" fg:w="36"/><text x="76.9585%" y="543.50"></text></g><g><title>zdr_utf8string (33 samples, 0.02%)</title><rect x="76.7099%" y="517" width="0.0155%" height="15" fill="rgb(225,148,7)" fg:x="163066" fg:w="33"/><text x="76.9599%" y="527.50"></text></g><g><title>libnfs_zdr_bytes (31 samples, 0.01%)</title><rect x="76.7108%" y="501" width="0.0146%" height="15" fill="rgb(220,160,43)" fg:x="163068" fg:w="31"/><text x="76.9608%" y="511.50"></text></g><g><title>fs_virtq_handle_req (20,894 samples, 9.83%)</title><rect x="66.9016%" y="597" width="9.8290%" height="15" fill="rgb(213,52,39)" fg:x="142216" fg:w="20894"/><text x="67.1516%" y="607.50">fs_virtq_handl..</text></g><g><title>vread (14,887 samples, 7.00%)</title><rect x="69.7274%" y="581" width="7.0032%" height="15" fill="rgb(243,137,7)" fg:x="148223" fg:w="14887"/><text x="69.9774%" y="591.50">vread</text></g><g><title>rpc_nfs4_compound_async2 (14,656 samples, 6.89%)</title><rect x="69.8361%" y="565" width="6.8945%" height="15" fill="rgb(230,79,13)" fg:x="148454" fg:w="14656"/><text x="70.0861%" y="575.50">rpc_nfs4_..</text></g><g><title>zdr_COMPOUND4args (328 samples, 0.15%)</title><rect x="76.5763%" y="549" width="0.1543%" height="15" fill="rgb(247,105,23)" fg:x="162782" fg:w="328"/><text x="76.8263%" y="559.50"></text></g><g><title>fs_virtq_sm_parse_header (62 samples, 0.03%)</title><rect x="76.7306%" y="597" width="0.0292%" height="15" fill="rgb(223,179,41)" fg:x="163110" fg:w="62"/><text x="76.9806%" y="607.50"></text></g><g><title>snap_dv_ring_tx_db (198 samples, 0.09%)</title><rect x="76.8176%" y="533" width="0.0931%" height="15" fill="rgb(218,9,34)" fg:x="163295" fg:w="198"/><text x="77.0676%" y="543.50"></text></g><g><title>fs_virtq_sm_read_data (345 samples, 0.16%)</title><rect x="76.7597%" y="597" width="0.1623%" height="15" fill="rgb(222,106,8)" fg:x="163172" fg:w="345"/><text x="77.0097%" y="607.50"></text></g><g><title>snap_dma_q_read (253 samples, 0.12%)</title><rect x="76.8030%" y="581" width="0.1190%" height="15" fill="rgb(211,220,0)" fg:x="163264" fg:w="253"/><text x="77.0530%" y="591.50"></text></g><g><title>gga_dma_q_read (239 samples, 0.11%)</title><rect x="76.8096%" y="565" width="0.1124%" height="15" fill="rgb(229,52,16)" fg:x="163278" fg:w="239"/><text x="77.0596%" y="575.50"></text></g><g><title>do_gga_xfer (239 samples, 0.11%)</title><rect x="76.8096%" y="549" width="0.1124%" height="15" fill="rgb(212,155,18)" fg:x="163278" fg:w="239"/><text x="77.0596%" y="559.50"></text></g><g><title>virtq_sm_release (52 samples, 0.02%)</title><rect x="76.9253%" y="597" width="0.0245%" height="15" fill="rgb(242,21,14)" fg:x="163524" fg:w="52"/><text x="77.1753%" y="607.50"></text></g><g><title>virtq_common_release (29 samples, 0.01%)</title><rect x="76.9361%" y="581" width="0.0136%" height="15" fill="rgb(222,19,48)" fg:x="163547" fg:w="29"/><text x="77.1861%" y="591.50"></text></g><g><title>snap_dv_ring_tx_db (143 samples, 0.07%)</title><rect x="77.0749%" y="517" width="0.0673%" height="15" fill="rgb(232,45,27)" fg:x="163842" fg:w="143"/><text x="77.3249%" y="527.50"></text></g><g><title>virtq_sm_send_completion (423 samples, 0.20%)</title><rect x="76.9498%" y="597" width="0.1990%" height="15" fill="rgb(249,103,42)" fg:x="163576" fg:w="423"/><text x="77.1998%" y="607.50"></text></g><g><title>virtq_tunnel_send_comp (372 samples, 0.17%)</title><rect x="76.9738%" y="581" width="0.1750%" height="15" fill="rgb(246,81,33)" fg:x="163627" fg:w="372"/><text x="77.2238%" y="591.50"></text></g><g><title>snap_dma_q_send_completion (355 samples, 0.17%)</title><rect x="76.9818%" y="565" width="0.1670%" height="15" fill="rgb(252,33,42)" fg:x="163644" fg:w="355"/><text x="77.2318%" y="575.50"></text></g><g><title>dv_dma_q_send_completion (319 samples, 0.15%)</title><rect x="76.9987%" y="549" width="0.1501%" height="15" fill="rgb(209,212,41)" fg:x="163680" fg:w="319"/><text x="77.2487%" y="559.50"></text></g><g><title>do_dv_xfer_inline (304 samples, 0.14%)</title><rect x="77.0058%" y="533" width="0.1430%" height="15" fill="rgb(207,154,6)" fg:x="163695" fg:w="304"/><text x="77.2558%" y="543.50"></text></g><g><title>memcpy (211 samples, 0.10%)</title><rect x="77.2461%" y="533" width="0.0993%" height="15" fill="rgb(223,64,47)" fg:x="164206" fg:w="211"/><text x="77.4961%" y="543.50"></text></g><g><title>__GI_memcpy (209 samples, 0.10%)</title><rect x="77.2471%" y="517" width="0.0983%" height="15" fill="rgb(211,161,38)" fg:x="164208" fg:w="209"/><text x="77.4971%" y="527.50"></text></g><g><title>snap_dv_ring_tx_db (36 samples, 0.02%)</title><rect x="77.3487%" y="533" width="0.0169%" height="15" fill="rgb(219,138,40)" fg:x="164424" fg:w="36"/><text x="77.5987%" y="543.50"></text></g><g><title>snap_dma_q_write_short (393 samples, 0.18%)</title><rect x="77.1864%" y="581" width="0.1849%" height="15" fill="rgb(241,228,46)" fg:x="164079" fg:w="393"/><text x="77.4364%" y="591.50"></text></g><g><title>dv_dma_q_write_short (348 samples, 0.16%)</title><rect x="77.2076%" y="565" width="0.1637%" height="15" fill="rgb(223,209,38)" fg:x="164124" fg:w="348"/><text x="77.4576%" y="575.50"></text></g><g><title>do_dv_xfer_inline (337 samples, 0.16%)</title><rect x="77.2127%" y="549" width="0.1585%" height="15" fill="rgb(236,164,45)" fg:x="164135" fg:w="337"/><text x="77.4627%" y="559.50"></text></g><g><title>dv_dma_q_progress_tx (48,343 samples, 22.74%)</title><rect x="54.6339%" y="629" width="22.7416%" height="15" fill="rgb(231,15,5)" fg:x="116138" fg:w="48343"/><text x="54.8839%" y="639.50">dv_dma_q_progress_tx</text></g><g><title>virtq_cmd_progress (22,352 samples, 10.51%)</title><rect x="66.8606%" y="613" width="10.5149%" height="15" fill="rgb(252,35,15)" fg:x="142129" fg:w="22352"/><text x="67.1106%" y="623.50">virtq_cmd_progr..</text></g><g><title>virtq_sm_write_status (482 samples, 0.23%)</title><rect x="77.1488%" y="597" width="0.2267%" height="15" fill="rgb(248,181,18)" fg:x="163999" fg:w="482"/><text x="77.3988%" y="607.50"></text></g><g><title>snap_dma_q_progress (82,002 samples, 38.58%)</title><rect x="38.8075%" y="645" width="38.5756%" height="15" fill="rgb(233,39,42)" fg:x="82495" fg:w="82002"/><text x="39.0575%" y="655.50">snap_dma_q_progress</text></g><g><title>ck_pr_md_load_uint (1,645 samples, 0.77%)</title><rect x="80.0179%" y="597" width="0.7738%" height="15" fill="rgb(238,110,33)" fg:x="170098" fg:w="1645"/><text x="80.2679%" y="607.50"></text></g><g><title>ck_ring_dequeue_spsc (5,883 samples, 2.77%)</title><rect x="78.1174%" y="629" width="2.7675%" height="15" fill="rgb(233,195,10)" fg:x="166058" fg:w="5883"/><text x="78.3674%" y="639.50">ck..</text></g><g><title>_ck_ring_dequeue_sc (5,883 samples, 2.77%)</title><rect x="78.1174%" y="613" width="2.7675%" height="15" fill="rgb(254,105,3)" fg:x="166058" fg:w="5883"/><text x="78.3674%" y="623.50">_c..</text></g><g><title>memcpy (196 samples, 0.09%)</title><rect x="80.7927%" y="597" width="0.0922%" height="15" fill="rgb(221,225,9)" fg:x="171745" fg:w="196"/><text x="81.0427%" y="607.50"></text></g><g><title>snap_dv_ring_tx_db (161 samples, 0.08%)</title><rect x="81.0067%" y="549" width="0.0757%" height="15" fill="rgb(224,227,45)" fg:x="172200" fg:w="161"/><text x="81.2567%" y="559.50"></text></g><g><title>snap_dv_set_comp (87 samples, 0.04%)</title><rect x="81.0824%" y="549" width="0.0409%" height="15" fill="rgb(229,198,43)" fg:x="172361" fg:w="87"/><text x="81.3324%" y="559.50"></text></g><g><title>virtq_progress_done_cmds (7,955 samples, 3.74%)</title><rect x="77.3830%" y="645" width="3.7422%" height="15" fill="rgb(206,209,35)" fg:x="164497" fg:w="7955"/><text x="77.6330%" y="655.50">virt..</text></g><g><title>virtq_cmd_progress (508 samples, 0.24%)</title><rect x="80.8863%" y="629" width="0.2390%" height="15" fill="rgb(245,195,53)" fg:x="171944" fg:w="508"/><text x="81.1363%" y="639.50"></text></g><g><title>sm_handle_in_iov_done (490 samples, 0.23%)</title><rect x="80.8947%" y="613" width="0.2305%" height="15" fill="rgb(240,92,26)" fg:x="171962" fg:w="490"/><text x="81.1447%" y="623.50"></text></g><g><title>snap_dma_q_write (353 samples, 0.17%)</title><rect x="80.9592%" y="597" width="0.1661%" height="15" fill="rgb(207,40,23)" fg:x="172099" fg:w="353"/><text x="81.2092%" y="607.50"></text></g><g><title>gga_dma_q_write (330 samples, 0.16%)</title><rect x="80.9700%" y="581" width="0.1552%" height="15" fill="rgb(223,111,35)" fg:x="172122" fg:w="330"/><text x="81.2200%" y="591.50"></text></g><g><title>do_gga_xfer (326 samples, 0.15%)</title><rect x="80.9719%" y="565" width="0.1534%" height="15" fill="rgb(229,147,28)" fg:x="172126" fg:w="326"/><text x="81.2219%" y="575.50"></text></g><g><title>__softirqentry_text_start (26 samples, 0.01%)</title><rect x="94.1870%" y="565" width="0.0122%" height="15" fill="rgb(211,29,28)" fg:x="200218" fg:w="26"/><text x="94.4370%" y="575.50"></text></g><g><title>el0_irq_naked (27 samples, 0.01%)</title><rect x="94.1870%" y="629" width="0.0127%" height="15" fill="rgb(228,72,33)" fg:x="200218" fg:w="27"/><text x="94.4370%" y="639.50"></text></g><g><title>gic_handle_irq (27 samples, 0.01%)</title><rect x="94.1870%" y="613" width="0.0127%" height="15" fill="rgb(205,214,31)" fg:x="200218" fg:w="27"/><text x="94.4370%" y="623.50"></text></g><g><title>__handle_domain_irq (27 samples, 0.01%)</title><rect x="94.1870%" y="597" width="0.0127%" height="15" fill="rgb(224,111,15)" fg:x="200218" fg:w="27"/><text x="94.4370%" y="607.50"></text></g><g><title>irq_exit (27 samples, 0.01%)</title><rect x="94.1870%" y="581" width="0.0127%" height="15" fill="rgb(253,21,26)" fg:x="200218" fg:w="27"/><text x="94.4370%" y="591.50"></text></g><g><title>snap_virtio_ctrl_queue_progress (151,487 samples, 71.26%)</title><rect x="24.1487%" y="677" width="71.2628%" height="15" fill="rgb(245,139,43)" fg:x="51334" fg:w="151487"/><text x="24.3987%" y="687.50">snap_virtio_ctrl_queue_progress</text></g><g><title>virtq_progress (136,981 samples, 64.44%)</title><rect x="30.9726%" y="661" width="64.4389%" height="15" fill="rgb(252,170,7)" fg:x="65840" fg:w="136981"/><text x="31.2226%" y="671.50">virtq_progress</text></g><g><title>virtq_progress_unordered (30,369 samples, 14.29%)</title><rect x="81.1252%" y="645" width="14.2863%" height="15" fill="rgb(231,118,14)" fg:x="172452" fg:w="30369"/><text x="81.3752%" y="655.50">virtq_progress_unorder..</text></g><g><title>fs_virtq_get_avail_cmd (2,576 samples, 1.21%)</title><rect x="94.1997%" y="629" width="1.2118%" height="15" fill="rgb(238,83,0)" fg:x="200245" fg:w="2576"/><text x="94.4497%" y="639.50"></text></g><g><title>snap_virtio_ctrl_pg_thread_io_progress (192,635 samples, 90.62%)</title><rect x="4.8002%" y="693" width="90.6198%" height="15" fill="rgb(221,39,39)" fg:x="10204" fg:w="192635"/><text x="5.0502%" y="703.50">snap_virtio_ctrl_pg_thread_io_progress</text></g><g><title>_start (203,529 samples, 95.74%)</title><rect x="0.0000%" y="821" width="95.7446%" height="15" fill="rgb(222,119,46)" fg:x="0" fg:w="203529"/><text x="0.2500%" y="831.50">_start</text></g><g><title>__libc_start_main (203,529 samples, 95.74%)</title><rect x="0.0000%" y="805" width="95.7446%" height="15" fill="rgb(222,165,49)" fg:x="0" fg:w="203529"/><text x="0.2500%" y="815.50">__libc_start_main</text></g><g><title>main (203,529 samples, 95.74%)</title><rect x="0.0000%" y="789" width="95.7446%" height="15" fill="rgb(219,113,52)" fg:x="0" fg:w="203529"/><text x="0.2500%" y="799.50">main</text></g><g><title>virtionfs_main (203,529 samples, 95.74%)</title><rect x="0.0000%" y="773" width="95.7446%" height="15" fill="rgb(214,7,15)" fg:x="0" fg:w="203529"/><text x="0.2500%" y="783.50">virtionfs_main</text></g><g><title>virtiofs_emu_fuse_ll_main (203,529 samples, 95.74%)</title><rect x="0.0000%" y="757" width="95.7446%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="203529"/><text x="0.2500%" y="767.50">virtiofs_emu_fuse_ll_main</text></g><g><title>virtiofs_emu_ll_loop (203,529 samples, 95.74%)</title><rect x="0.0000%" y="741" width="95.7446%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="203529"/><text x="0.2500%" y="751.50">virtiofs_emu_ll_loop</text></g><g><title>virtiofs_emu_ll_loop_singlethreaded (203,529 samples, 95.74%)</title><rect x="0.0000%" y="725" width="95.7446%" height="15" fill="rgb(213,208,19)" fg:x="0" fg:w="203529"/><text x="0.2500%" y="735.50">virtiofs_emu_ll_loop_singlethreaded</text></g><g><title>virtio_fs_ctrl_progress_io (195,011 samples, 91.74%)</title><rect x="4.0071%" y="709" width="91.7375%" height="15" fill="rgb(233,156,4)" fg:x="8518" fg:w="195011"/><text x="4.2571%" y="719.50">virtio_fs_ctrl_progress_io</text></g><g><title>snap_virtio_fs_ctrl_io_progress_thread (690 samples, 0.32%)</title><rect x="95.4200%" y="693" width="0.3246%" height="15" fill="rgb(207,194,5)" fg:x="202839" fg:w="690"/><text x="95.6700%" y="703.50"></text></g><g><title>libnfs_zdr_bytes@plt (54 samples, 0.03%)</title><rect x="95.7643%" y="821" width="0.0254%" height="15" fill="rgb(206,111,30)" fg:x="203571" fg:w="54"/><text x="96.0143%" y="831.50"></text></g><g><title>libnfs_zdr_int@plt (32 samples, 0.02%)</title><rect x="95.8052%" y="821" width="0.0151%" height="15" fill="rgb(243,70,54)" fg:x="203658" fg:w="32"/><text x="96.0552%" y="831.50"></text></g><g><title>libnfs_zdr_u_int@plt (75 samples, 0.04%)</title><rect x="95.8316%" y="821" width="0.0353%" height="15" fill="rgb(242,28,8)" fg:x="203714" fg:w="75"/><text x="96.0816%" y="831.50"></text></g><g><title>memcpy@plt (120 samples, 0.06%)</title><rect x="95.8735%" y="821" width="0.0565%" height="15" fill="rgb(219,106,18)" fg:x="203803" fg:w="120"/><text x="96.1235%" y="831.50"></text></g><g><title>memset@plt (22 samples, 0.01%)</title><rect x="95.9299%" y="821" width="0.0103%" height="15" fill="rgb(244,222,10)" fg:x="203923" fg:w="22"/><text x="96.1799%" y="831.50"></text></g><g><title>nfs_mt_mutex_lock@plt (40 samples, 0.02%)</title><rect x="95.9440%" y="821" width="0.0188%" height="15" fill="rgb(236,179,52)" fg:x="203953" fg:w="40"/><text x="96.1940%" y="831.50"></text></g><g><title>pthread_mutex_lock@plt (56 samples, 0.03%)</title><rect x="95.9704%" y="821" width="0.0263%" height="15" fill="rgb(213,23,39)" fg:x="204009" fg:w="56"/><text x="96.2204%" y="831.50"></text></g><g><title>pthread_mutex_unlock@plt (27 samples, 0.01%)</title><rect x="95.9967%" y="821" width="0.0127%" height="15" fill="rgb(238,48,10)" fg:x="204065" fg:w="27"/><text x="96.2467%" y="831.50"></text></g><g><title>pthread_spin_lock@plt (822 samples, 0.39%)</title><rect x="96.0094%" y="821" width="0.3867%" height="15" fill="rgb(251,196,23)" fg:x="204092" fg:w="822"/><text x="96.2594%" y="831.50"></text></g><g><title>pthread_spin_unlock@plt (716 samples, 0.34%)</title><rect x="96.3961%" y="821" width="0.3368%" height="15" fill="rgb(250,152,24)" fg:x="204914" fg:w="716"/><text x="96.6461%" y="831.50"></text></g><g><title>rpc_allocate_pdu2@plt (31 samples, 0.01%)</title><rect x="96.7329%" y="821" width="0.0146%" height="15" fill="rgb(209,150,17)" fg:x="205630" fg:w="31"/><text x="96.9829%" y="831.50"></text></g><g><title>rpc_enqueue@plt (37 samples, 0.02%)</title><rect x="96.7475%" y="821" width="0.0174%" height="15" fill="rgb(234,202,34)" fg:x="205661" fg:w="37"/><text x="96.9975%" y="831.50"></text></g><g><title>rpc_hash_xid@plt (30 samples, 0.01%)</title><rect x="96.7649%" y="821" width="0.0141%" height="15" fill="rgb(253,148,53)" fg:x="205698" fg:w="30"/><text x="97.0149%" y="831.50"></text></g><g><title>rpc_queue_pdu@plt (31 samples, 0.01%)</title><rect x="96.7865%" y="821" width="0.0146%" height="15" fill="rgb(218,129,16)" fg:x="205744" fg:w="31"/><text x="97.0365%" y="831.50"></text></g><g><title>snap_dma_q_progress@plt (1,563 samples, 0.74%)</title><rect x="96.8072%" y="821" width="0.7353%" height="15" fill="rgb(216,85,19)" fg:x="205788" fg:w="1563"/><text x="97.0572%" y="831.50"></text></g><g><title>snap_dma_q_send_completion@plt (26 samples, 0.01%)</title><rect x="97.5472%" y="821" width="0.0122%" height="15" fill="rgb(235,228,7)" fg:x="207361" fg:w="26"/><text x="97.7972%" y="831.50"></text></g><g><title>snap_update_pci_bdf@plt (22 samples, 0.01%)</title><rect x="97.5736%" y="821" width="0.0103%" height="15" fill="rgb(245,175,0)" fg:x="207417" fg:w="22"/><text x="97.8236%" y="831.50"></text></g><g><title>snap_virtio_ctrl_pg_io_progress@plt (972 samples, 0.46%)</title><rect x="97.5900%" y="821" width="0.4573%" height="15" fill="rgb(208,168,36)" fg:x="207452" fg:w="972"/><text x="97.8400%" y="831.50"></text></g><g><title>snap_virtio_fs_ctrl_io_progress_thread@plt (683 samples, 0.32%)</title><rect x="98.0600%" y="821" width="0.3213%" height="15" fill="rgb(246,171,24)" fg:x="208451" fg:w="683"/><text x="98.3100%" y="831.50"></text></g><g><title>to_fs_ctx@plt (1,564 samples, 0.74%)</title><rect x="98.4062%" y="821" width="0.7357%" height="15" fill="rgb(215,142,24)" fg:x="209187" fg:w="1564"/><text x="98.6562%" y="831.50"></text></g><g><title>virtq_cmd_progress@plt (38 samples, 0.02%)</title><rect x="99.1419%" y="821" width="0.0179%" height="15" fill="rgb(250,187,7)" fg:x="210751" fg:w="38"/><text x="99.3919%" y="831.50"></text></g><g><title>virtq_progress@plt (1,423 samples, 0.67%)</title><rect x="99.1598%" y="821" width="0.6694%" height="15" fill="rgb(228,66,33)" fg:x="210789" fg:w="1423"/><text x="99.4098%" y="831.50"></text></g><g><title>zdr_COMPOUND4args@plt (41 samples, 0.02%)</title><rect x="99.8415%" y="821" width="0.0193%" height="15" fill="rgb(234,215,21)" fg:x="212238" fg:w="41"/><text x="100.0915%" y="831.50"></text></g><g><title>zdr_GETATTR4args@plt (32 samples, 0.02%)</title><rect x="99.8608%" y="821" width="0.0151%" height="15" fill="rgb(222,191,20)" fg:x="212279" fg:w="32"/><text x="100.1108%" y="831.50"></text></g><g><title>zdr_PUTFH4args@plt (31 samples, 0.01%)</title><rect x="99.8758%" y="821" width="0.0146%" height="15" fill="rgb(245,79,54)" fg:x="212311" fg:w="31"/><text x="100.1258%" y="831.50"></text></g><g><title>zdr_nfs_fh4@plt (45 samples, 0.02%)</title><rect x="99.9120%" y="821" width="0.0212%" height="15" fill="rgb(240,10,37)" fg:x="212388" fg:w="45"/><text x="100.1620%" y="831.50"></text></g><g><title>zdr_nfs_opnum4@plt (38 samples, 0.02%)</title><rect x="99.9332%" y="821" width="0.0179%" height="15" fill="rgb(214,192,32)" fg:x="212433" fg:w="38"/><text x="100.1832%" y="831.50"></text></g><g><title>zdr_offset4@plt (22 samples, 0.01%)</title><rect x="99.9511%" y="821" width="0.0103%" height="15" fill="rgb(209,36,54)" fg:x="212471" fg:w="22"/><text x="100.2011%" y="831.50"></text></g><g><title>zdr_utf8str_cs@plt (31 samples, 0.01%)</title><rect x="99.9704%" y="821" width="0.0146%" height="15" fill="rgb(220,10,11)" fg:x="212512" fg:w="31"/><text x="100.2204%" y="831.50"></text></g><g><title>all (212,575 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(221,106,17)" fg:x="0" fg:w="212575"/><text x="0.2500%" y="863.50"></text></g><g><title>virtionfs (212,575 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(251,142,44)" fg:x="0" fg:w="212575"/><text x="0.2500%" y="847.50">virtionfs</text></g><g><title>zdr_utf8string@plt (32 samples, 0.02%)</title><rect x="99.9849%" y="821" width="0.0151%" height="15" fill="rgb(238,13,15)" fg:x="212543" fg:w="32"/><text x="100.2349%" y="831.50"></text></g></svg></svg>